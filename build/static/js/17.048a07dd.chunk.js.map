{"version":3,"sources":["api/importExport.ts","pages/ImportExport/index.tsx","components/PageTitle.tsx"],"names":["getAuthHeader","user","store","getState","token","downloadObjectAsJson","exportObj","exportName","dataStr","encodeURIComponent","JSON","stringify","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","exportJson","options","a","fetch","window","location","origin","method","headers","Authorization","then","x","json","importJson","ImportExport","uploadRef","useRef","notify","useNotify","sections","title","btnText","description","onClick","setExportOpen","current","useState","exportOpen","collections","collectionTypes","roles","appearance","exportOptions","setExportOptions","isExporting","setIsExporting","PageTitle","className","ref","type","onChange","e","files","target","length","reader","FileReader","onload","dispatch","payload","parse","result","res","error","variant","getCollection","collectionId","limit","res1","getAppearance","res2","setColors","colors","readAsText","Modal","open","hideBackdrop","onMouseDown","stopPropagation","Object","keys","map","k","FormControlLabel","classes","label","control","Checkbox","root","checked","prev","Button","s","i","rest","classNames"],"mappings":"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","file":"static/js/17.048a07dd.chunk.js","sourcesContent":["import store from \"store\";\r\n\r\nconst getAuthHeader = () => {\r\n  const user = store.getState().user;\r\n  const token = user ? user.token : null;\r\n  return \"Bearer \" + token;\r\n};\r\n\r\nfunction downloadObjectAsJson(exportObj: Object, exportName: string) {\r\n  var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(exportObj));\r\n  var downloadAnchorNode = document.createElement(\"a\");\r\n  downloadAnchorNode.setAttribute(\"href\", dataStr);\r\n  downloadAnchorNode.setAttribute(\"download\", exportName + \".json\");\r\n  document.body.appendChild(downloadAnchorNode); // required for firefox\r\n  downloadAnchorNode.click();\r\n  downloadAnchorNode.remove();\r\n}\r\n\r\nexport const exportJson = async (options: { [key: string]: boolean }) => {\r\n  const obj = await fetch(window.location.origin + \"/private/import-export/export\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: getAuthHeader(),\r\n    },\r\n    body: JSON.stringify(options),\r\n  }).then((x) => x.json());\r\n\r\n  downloadObjectAsJson(obj, \"FireckDatabaseSchema\");\r\n};\r\n\r\nexport const importJson = (json: Object) => {\r\n  return fetch(window.location.origin + \"/private/import-export/import\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: getAuthHeader(),\r\n    },\r\n    body: JSON.stringify(json),\r\n  }).then((x) => x.json());\r\n};\r\n","import { exportJson, importJson } from \"api/importExport\";\r\nimport { useRef, useState } from \"react\";\r\nimport { useNotify } from \"components/NotificationsProvider\";\r\nimport store from \"store\";\r\nimport Button from \"components/Button\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport { getAppearance } from \"api/adminUsers\";\r\nimport { setColors } from \"hooks/useConfiguration\";\r\nimport PageTitle from \"components/PageTitle\";\r\nimport { getCollection } from \"api/collections\";\r\nimport CloseRounded from \"@mui/icons-material/CloseRounded\";\r\n\r\nexport interface ImportExportProps {}\r\n\r\nconst ImportExport: React.FC<ImportExportProps> = () => {\r\n  const uploadRef = useRef<any>(null);\r\n  const notify = useNotify();\r\n  const sections = [\r\n    {\r\n      title: \"Export JSON\",\r\n      btnText: \"Export\",\r\n      description:\r\n        \"Export database JSON schema. This JSON file is meant to be imported into other Fireck app\",\r\n      onClick: () => setExportOpen(true),\r\n    },\r\n    {\r\n      title: \"Import JSON\",\r\n      btnText: \"Import\",\r\n      description: \"Import database JSON schema file that was exported from other Fireck app.\",\r\n      onClick: () => {\r\n        uploadRef.current.click();\r\n      },\r\n    },\r\n  ];\r\n\r\n  const [exportOpen, setExportOpen] = useState(false);\r\n  const [exportOptions, setExportOptions] = useState<{ [key: string]: boolean }>({\r\n    collections: true,\r\n    collectionTypes: true,\r\n    roles: true,\r\n    appearance: true,\r\n  });\r\n\r\n  const [isExporting, setIsExporting] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <PageTitle className=\"mb-12\">Import & Export</PageTitle>\r\n      <input\r\n        className=\"hidden\"\r\n        ref={uploadRef}\r\n        type=\"file\"\r\n        onChange={(e) => {\r\n          const files = e.target.files;\r\n          if (files && files.length) {\r\n            var reader = new FileReader();\r\n            reader.onload = async function () {\r\n              store.dispatch({ type: \"SET_LOADING\", payload: \"Importing database...\" });\r\n              const json = JSON.parse(reader.result as string);\r\n              const res = await importJson(json);\r\n              store.dispatch({ type: \"SET_LOADING\", payload: false });\r\n              if (!res.error) {\r\n                notify(\"Database imported!\", { variant: \"success\" });\r\n                const res1 = await getCollection({\r\n                  collectionId: \"CollectionTypesReservedCollection\",\r\n                  limit: 1000,\r\n                });\r\n                if (!res1.error) {\r\n                  store.dispatch({ type: \"SET_COLLECTION_TYPES\", payload: res1 });\r\n                }\r\n\r\n                const res2 = await getAppearance();\r\n                if (!res2.error) {\r\n                  store.dispatch({ type: \"SET_APPEARANCE\", payload: res2 });\r\n                  store.dispatch({ type: \"SET_NEW_APPEARANCE\", payload: res2 });\r\n                  setColors(res2.colors);\r\n                }\r\n              }\r\n            };\r\n            reader.readAsText(files[0]);\r\n          }\r\n        }}\r\n      ></input>\r\n      {!exportOpen ? null : (\r\n        <Modal open={exportOpen} hideBackdrop>\r\n          <div\r\n            className=\"w-full h-full overflow-auto flex bg-black bg-opacity-40\"\r\n            onMouseDown={() => setExportOpen(false)}\r\n          >\r\n            <div\r\n              className=\"bg-white p-7 rounded m-auto animate-littlemoveup relative\"\r\n              onMouseDown={(e) => e.stopPropagation()}\r\n            >\r\n              <CloseRounded\r\n                className=\"absolute top-0 right-0 cursor-pointer\"\r\n                onClick={() => setExportOpen(false)}\r\n              ></CloseRounded>\r\n              <div className=\"flex flex-wrap max-w-422px w-full mb-9\">\r\n                {Object.keys(exportOptions).map((k) => (\r\n                  <div key={k} className=\"flex w-1/2 px-2 items-center select-none\">\r\n                    <FormControlLabel\r\n                      classes={{ label: \"font-poppins line-clamp-1\" }}\r\n                      control={\r\n                        <Checkbox\r\n                          classes={{ root: \"text-fireck-1\" }}\r\n                          className=\"mr-3\"\r\n                          checked={exportOptions[k]}\r\n                          onChange={(e) => {\r\n                            setExportOptions((prev) => ({ ...prev, [k]: e.target.checked }));\r\n                            if (k === \"collections\" && e.target.checked) {\r\n                              setExportOptions((prev) => ({\r\n                                ...prev,\r\n                                collectionTypes: true,\r\n                              }));\r\n                            } else if (k === \"collectionTypes\" && !e.target.checked) {\r\n                              setExportOptions((prev) => ({\r\n                                ...prev,\r\n                                collections: false,\r\n                              }));\r\n                            }\r\n                          }}\r\n                        ></Checkbox>\r\n                      }\r\n                      label={k}\r\n                    ></FormControlLabel>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"flex justify-end\">\r\n                <Button\r\n                  onClick={async () => {\r\n                    setIsExporting(true);\r\n                    await exportJson(exportOptions);\r\n                    setIsExporting(false);\r\n                    setExportOpen(false);\r\n                  }}\r\n                  className=\"bg-fireck-4 hover:bg-fireck-4-hover h-34px\"\r\n                >\r\n                  {isExporting ? \"Exporting...\" : \"Export\"}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n      <div className=\"flex flex-wrap\">\r\n        {sections.map((s, i) => (\r\n          <div\r\n            key={`section-${i}`}\r\n            className=\"p-7 bg-fireck-3 text-white rounded mr-3 mb-3 max-w-sm w-full flex flex-col\"\r\n          >\r\n            <div className=\"font-medium text-lg mb-2\">{s.title}</div>\r\n            <div className=\"mb-7 text-sm\">{s.description}</div>\r\n            <div className=\"flex justify-end flex-grow items-end\">\r\n              <Button\r\n                onClick={s.onClick}\r\n                className=\"bg-fireck-4 min-w-unset hover:bg-fireck-4-hover h-34px w-140px text-black\"\r\n              >\r\n                {s.btnText}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImportExport;\r\n","import classNames from \"classnames\";\r\n\r\nexport interface PageTitleProps\r\n  extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {}\r\n\r\nconst PageTitle: React.FC<PageTitleProps> = ({ className, ...rest }) => {\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={classNames(\"text-27px text-white font-medium capitalize leading-none\", className)}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default PageTitle;\r\n"],"sourceRoot":""}