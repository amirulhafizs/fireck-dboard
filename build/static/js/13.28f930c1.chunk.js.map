{"version":3,"sources":["api/callComponent.tsx","components/Select.tsx","components/Label.tsx","components/IconButton.tsx","components/SettingsPage.tsx","assets/one-to-one.svg","assets/one-to-many.svg","components/ToupleInput.tsx","pages/CollectionTypes/CollectionModal.tsx","assets/subcollection.svg","components/FieldTypes/Wrapper.tsx","components/FieldTypes/String.tsx","components/FieldTypes/Number.tsx","components/FieldTypes/Map.tsx","components/FieldTypes/Array.tsx","components/FieldTypes/Boolean.tsx","components/FieldTypes/Date.tsx","components/FieldTypes/Media.tsx","components/FieldTypes/RichText.tsx","components/FieldTypes/Json.tsx","components/FieldTypes/Enum.tsx","components/FieldTypes/Password.tsx","components/FieldTypes/Relation.tsx","components/FieldTypes/index.tsx","components/FieldTypes/Subcollection.tsx","pages/CollectionTypes/SelectFieldType.tsx","pages/CollectionTypes/GetCollectionField.ts","pages/CollectionTypes/SpecifyFieldDetails.tsx","components/TypescriptSyntax.tsx","pages/CollectionTypes/InterfaceModal.tsx","pages/CollectionTypes/index.tsx"],"names":["callComponent","Component","props","Promise","resolve","reject","wrapper","document","getElementById","appendChild","createElement","ReactDOM","render","store","proceed","val","unmountComponentAtNode","parentNode","removeChild","WarningIcon","React","forwardRef","ref","className","size","Select","options","error","groundColor","classNames","spellCheck","map","x","i","data-testid","value","label","title","placement","fontSize","Label","children","IconButton","rest","variant","SettingsPage","memo","entity","enitityPlural","onAddEntity","entities","onSelectEntity","entityButtons","onInvokeEntityEdit","entityContent","selectedEntityId","useState","search","setSearch","onClick","length","style","width","type","placeholder","onChange","e","target","maxHeight","autoHide","filter","name","toLowerCase","includes","docId","find","_path","_circle","_circle2","_extends","Object","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgOneToOne","_ref","svgRef","titleId","height","viewBox","fill","xmlns","id","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","ForwardRef","_path2","_circle3","SvgOneToMany","ToupleInput","setValue","disabled","opt","icon","createId","string","str","char","toUpperCase","match","COLLECTION_ID","AddNewCollection","open","onClose","collections","editingCollectionDocId","onCreate","onUpdate","onDelete","initialData","single","draftable","fields","isSystem","notify","useNotify","formIntialState","useFormik","enableReinitialize","onSubmit","vals","a","resetForm","updateDocument","values","addDocument","res","actionType","initialValues","validate","errors","index","findIndex","handleSubmit","handleChange","setFieldValue","isSubmitting","submitCount","Modal","hideBackdrop","maxWidth","Input","onKeyDown","Button","confirm","confirmation","deleteDocId","deleteDocument","Wrapper","String","Number","Map","Array","Boolean","Media","Enum","Password","Relation","SvgSubcollection","fieldTypes","Badge","Date","RichText","Json","SelectFieldType","fieldType","setFieldType","FieldTypes","replace","getCollectionField","editableField","existingFieldNames","zLevel","SpecifyFieldDetails","goBack","closer","res1","mediaSingle","enumOptions","relatedCollectionTypeDocId","relationOneToOne","displayOnTable","stringLong","collectionFields","enumOption","setEnumOption","SelectedFieldType","useSelector","state","collectionTypes","onDragEnd","result","destination","reorder","addEnumOption","arr","push","splice","toString","c","OneToOneIcon","OneToManyIcon","field","droppableId","provided","snapshot","droppableProps","innerRef","t","draggableId","draggableProps","dragHandleProps","f","TypescriptSyntax","code","theme","lineNumbers","readOnly","mode","getGap","count","reduce","b","getType","ident","identStep","docType","multiple","types","password","json","array","media","date","enum","number","boolean","relation","collection","documentFields","script","any","generateInterface","colType","InterfaceModal","collectionType","copied","setCopied","interfaceString","onMouseDown","stopPropagation","navigator","clipboard","writeText","setTimeout","list","startIndex","endIndex","from","removed","CollectionsBuilder","collectionModalOpen","setCollectionModalOpen","dispatch","useDispatch","setEditingCollectionDocId","selectedCollection","setSelectedCollection","interfaceColType","setInterfaceColType","shallowEqual","useEffect","console","log","editField","selectedField","newFields","JSON","parse","stringify","payload","success","addField","col","isDefault","classes","root","updatedCollection","CollectionModal","undefined"],"mappings":"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","file":"static/js/13.28f930c1.chunk.js","sourcesContent":["import ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"store\";\r\nimport NotificationsProvider from \"components/NotificationsProvider\";\r\n\r\nexport interface CallableComponent<T> {\r\n  proceed: (v: T) => void;\r\n}\r\n\r\ninterface callComponentArgs<T> {\r\n  Component: React.FC<any>;\r\n  props: Omit<T, \"proceed\">;\r\n}\r\n\r\nexport function callComponent<T, RT>({ Component, props }: callComponentArgs<T>): Promise<RT> {\r\n  return new Promise((resolve, reject) => {\r\n    const wrapper = document.getElementById(\"root\")?.appendChild(document.createElement(\"div\"));\r\n\r\n    if (wrapper) {\r\n      ReactDOM.render(\r\n        <Provider store={store}>\r\n          <NotificationsProvider>\r\n            <Component\r\n              {...props}\r\n              proceed={(val: RT) => {\r\n                ReactDOM.unmountComponentAtNode(wrapper);\r\n                wrapper.parentNode?.removeChild(wrapper);\r\n                resolve(val);\r\n              }}\r\n            />\r\n          </NotificationsProvider>\r\n        </Provider>,\r\n        wrapper\r\n      );\r\n    }\r\n  });\r\n}\r\n","import { IoAlertCircleOutline } from \"react-icons/io5\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport React, { SelectHTMLAttributes } from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <IoAlertCircleOutline className=\"text-red-FF0000\" size={20}></IoAlertCircleOutline>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport interface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n  options: { label: string; value: string | number }[];\r\n  error?: string | boolean;\r\n  groundColor: \"white\" | \"black\";\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({\r\n  className = \"\",\r\n  options,\r\n  error,\r\n  groundColor,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={`${className} relative flex items-center`}>\r\n      <select\r\n        className={classNames(\"px-3 h-full border-2 border-solid w-full rounded outline-none\", {\r\n          \"border-red-FF0000\": error,\r\n          \"focus:border-fireck-4\": !error,\r\n          \"border-gray-300 bg-gray-300\": groundColor === \"white\",\r\n          \"border-white bg-white\": groundColor === \"black\",\r\n        })}\r\n        {...props}\r\n        spellCheck={false}\r\n      >\r\n        {options.map((x, i) => (\r\n          <option data-testid={`select-option-${x.value}`} key={\"opt-\" + i} value={x.value}>\r\n            {x.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\nimport ErrorRounded from \"@material-ui/icons/ErrorRounded\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport classNames from \"classnames\";\r\n\r\nexport interface LabelProps {\r\n  error?: string | undefined | null;\r\n  className?: string;\r\n  children: any;\r\n  groundColor: \"black\" | \"white\";\r\n}\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <ErrorRounded className=\"text-red-500 text-xl\" fontSize=\"inherit\"></ErrorRounded>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Label: React.FC<LabelProps> = ({ className = \"\", children, error, groundColor }) => {\r\n  return (\r\n    <div\r\n      className={classNames(`flex justify-between relative ${className}`, {\r\n        \"text-white\": groundColor === \"black\",\r\n        \"text-black\": groundColor === \"white\",\r\n      })}\r\n    >\r\n      <div>{children}</div>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","export type IconButtonVariant = \"transparent\" | \"standard\";\r\n\r\nexport interface IconButtonProps {\r\n  className?: string;\r\n  variant?: IconButtonVariant;\r\n  [x: string]: any;\r\n}\r\n\r\nconst IconButton: React.FC<IconButtonProps> = ({\r\n  className = \"\",\r\n  variant = \"standard\",\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={\r\n        `bg-fireck-4 hover:bg-fireck-4-hover h-5 w-5 rounded flex items-center justify-center transition cursor-pointer ` +\r\n        className\r\n      }\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default IconButton;\r\n","import Button from \"components/Button\";\r\nimport React, { ReactElement, useState } from \"react\";\r\nimport Edit from \"@material-ui/icons/EditRounded\";\r\nimport Select from \"components/Select\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport AddRounded from \"@material-ui/icons/AddRounded\";\r\nimport SearchRounded from \"@material-ui/icons/SearchRounded\";\r\n\r\nexport interface SettingsPageProps {\r\n  entity: string;\r\n  enitityPlural: string;\r\n  onAddEntity?: () => void;\r\n  entities: { name: string; docId: string }[];\r\n  onSelectEntity: (id: string) => void;\r\n  entityButtons: ReactElement;\r\n  onInvokeEntityEdit?: () => void;\r\n  entityContent: ReactElement;\r\n  selectedEntityId: string;\r\n}\r\n\r\nexport const reorder = (list: any[], startIndex: number, endIndex: number) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst SettingsPage: React.FC<SettingsPageProps> = React.memo(\r\n  ({\r\n    entity,\r\n    enitityPlural,\r\n    onAddEntity,\r\n    entities,\r\n    onSelectEntity,\r\n    entityButtons,\r\n    onInvokeEntityEdit,\r\n    entityContent,\r\n    selectedEntityId,\r\n  }) => {\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    return (\r\n      <div className=\"h-full flex flex-col\">\r\n        <div className=\"flex flex-wrap justify-between mb-4\">\r\n          <div className=\"font-medium text-27px leading-none mb-4 mr-4 text-white capitalize\">\r\n            {enitityPlural}\r\n          </div>\r\n          {!onAddEntity ? null : (\r\n            <Button\r\n              data-testid=\"add-collection-btn\"\r\n              onClick={onAddEntity}\r\n              className=\"bg-fireck-4 hover:bg-fireck-4-hover mb-4 min-w-unset\"\r\n            >\r\n              <div className=\"flex items-center pointer-events-none h-34px\">\r\n                <AddRounded className=\"mr-2 text-lg\" fontSize=\"inherit\"></AddRounded>\r\n                <span className=\"hidden md:block\">Add {entity}</span>\r\n                <span className=\"md:hidden\">Add</span>\r\n              </div>\r\n            </Button>\r\n          )}\r\n        </div>\r\n        {!entities.length ? (\r\n          <div></div>\r\n        ) : (\r\n          <div className=\"flex flex-wrap lg:flex-nowrap w-full flex-grow\">\r\n            <div>\r\n              <div className=\"relative mr-4 hidden lg:block\" style={{ width: 180 }}>\r\n                <SearchRounded\r\n                  fontSize=\"inherit\"\r\n                  className=\"absolute text-base left-1 top-1 text-gray-500 pointer-events-none\"\r\n                ></SearchRounded>\r\n                <input\r\n                  type=\"search\"\r\n                  spellCheck={false}\r\n                  placeholder=\"Search\"\r\n                  className=\"text-white placeholder-gray-500 pl-7 hover:bg-fireck-2 focus:bg-fireck-2 w-full text-sm mb-3 px-2 border-white rounded bg-transparent outline-none focus:outline-none\"\r\n                  value={search}\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                ></input>\r\n              </div>\r\n              <SimpleBar\r\n                style={{ maxHeight: 230 }}\r\n                className=\"max-w-192px w-full flex-shrink-0 mr-4 hidden lg:block scrollbar-dark pr-3\"\r\n                autoHide={false}\r\n              >\r\n                {entities\r\n                  .filter((x) => !search || x.name.toLowerCase().includes(search.toLowerCase()))\r\n                  .map((x) => (\r\n                    <div\r\n                      data-testid={`entity-name-${x.name}`}\r\n                      onClick={() => {\r\n                        onSelectEntity(x.docId);\r\n                      }}\r\n                      key={`entity-${x.docId}`}\r\n                      className={`mb-1 capitalize truncate select-none cursor-pointer ${\r\n                        selectedEntityId === x.docId\r\n                          ? \"bg-fireck-4\"\r\n                          : \"hover:bg-fireck-1-hover text-white\"\r\n                      } rounded h-28px leading-28px px-3`}\r\n                    >\r\n                      {x.name}\r\n                    </div>\r\n                  ))}\r\n              </SimpleBar>\r\n            </div>\r\n\r\n            <div className=\"lg:flex-grow w-full rounded-lg bg-fireck-3 p-7 flex flex-col\">\r\n              <div className=\"flex justify-between mb-3 flex-wrap\">\r\n                <div className=\"font-medium text-22px capitalize mb-3 mr-3 text-white\">\r\n                  <span className=\"hidden lg:inline-block\">\r\n                    {entities.find((x) => x.docId === selectedEntityId)?.name || \"\"}\r\n                  </span>\r\n                  <div className=\"lg:hidden inline-block text-black text-base\">\r\n                    <Select\r\n                      className=\"h-28px\"\r\n                      groundColor=\"black\"\r\n                      onChange={(e) => onSelectEntity(e.target.value)}\r\n                      value={selectedEntityId}\r\n                      options={entities.map((x) => ({ label: x.name, value: x.docId }))}\r\n                    ></Select>\r\n                  </div>\r\n                  {!onInvokeEntityEdit ? null : (\r\n                    <Edit\r\n                      data-testid=\"edit-collection-btn\"\r\n                      onClick={onInvokeEntityEdit}\r\n                      className=\"ml-3 text-lg cursor-pointer\"\r\n                      fontSize=\"inherit\"\r\n                    ></Edit>\r\n                  )}\r\n                </div>\r\n                {entityButtons}\r\n              </div>\r\n\r\n              <div className=\"flex-grow h-0\">{entityContent}</div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default SettingsPage;\r\n","var _path, _circle, _circle2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgOneToOne(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 40,\n    height: 9,\n    viewBox: \"0 0 40 9\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.36621 4.67223H30.7241M30.7241 4.67223L28.3085 2.25659M30.7241 4.67223L28.3085 7.08786\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.37296,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 4.69562,\n    cy: 4.49835,\n    r: 3.31773,\n    stroke: \"currentColor\",\n    strokeWidth: 1.37296\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 35.3948,\n    cy: 4.49835,\n    r: 3.31773,\n    stroke: \"currentColor\",\n    strokeWidth: 1.37296\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOneToOne);\nexport default __webpack_public_path__ + \"static/media/one-to-one.19766dd4.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _circle, _circle2, _circle3;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgOneToMany(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 40,\n    height: 37,\n    viewBox: \"0 0 40 37\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.5875 18.8431L30.4119 7.39751M30.4119 7.39751L26.8752 6.44984M30.4119 7.39751L29.4643 10.9342\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.47153,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.5873 18.8433L30.4117 30.2889M30.4117 30.2889L29.4641 26.7522M30.4117 30.2889L26.875 31.2366\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.47153,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 5.00165,\n    cy: 18.7858,\n    r: 3.55593,\n    stroke: \"currentColor\",\n    strokeWidth: 1.47153\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 35.2653,\n    cy: 32.5311,\n    r: 3.55593,\n    stroke: \"currentColor\",\n    strokeWidth: 1.47153\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 35.2653,\n    cy: 5.15558,\n    r: 3.55593,\n    stroke: \"currentColor\",\n    strokeWidth: 1.47153\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOneToMany);\nexport default __webpack_public_path__ + \"static/media/one-to-many.ace4634d.svg\";\nexport { ForwardRef as ReactComponent };","export interface ToupleInputProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  setValue: (a: any) => void;\r\n  options: {\r\n    value: any;\r\n    label: string;\r\n    icon?: React.FunctionComponent<React.SVGProps<SVGSVGElement>>;\r\n  }[];\r\n  value: any;\r\n  disabled?: boolean;\r\n}\r\n\r\nconst ToupleInput: React.FC<ToupleInputProps> = ({\r\n  className = \"\",\r\n  options,\r\n  value,\r\n  setValue,\r\n  disabled,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <div className={\"flex -mx-2 flex-wrap sm:flex-nowrap mb-10 \" + className} {...rest}>\r\n      {options.map((opt, i) => (\r\n        <div\r\n          data-testid={`touple-option-${opt.value}`}\r\n          key={opt.value}\r\n          onClick={() => setValue(opt.value)}\r\n          className={`sm:w-1/2 w-full mx-2 mb-3 sm:mb-0 py-7 select-none ${\r\n            disabled ? \"cursor-default\" : \"cursor-pointer\"\r\n          } flex items-center justify-center rounded ${\r\n            value === opt.value\r\n              ? \"border-4 border-fireck-4\"\r\n              : `bg-gray-300 ${disabled ? \"\" : \"hover:bg-gray-301\"}`\r\n          }`}\r\n        >\r\n          <div className=\"flex items-center pointer-events-none\">\r\n            <div className={opt.icon ? \"mr-7\" : \"\"}>{opt.label}</div>\r\n            {opt.icon ? <opt.icon></opt.icon> : null}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToupleInput;\r\n","import Modal from \"@material-ui/core/Modal\";\r\nimport Input from \"components/Input\";\r\nimport React from \"react\";\r\nimport Button from \"components/Button\";\r\nimport { CollectionType } from \"api/collectionTypes\";\r\nimport { useNotify } from \"components/NotificationsProvider\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport { useFormik } from \"formik\";\r\nimport ToupleInput from \"components/ToupleInput\";\r\nimport CloseRounded from \"@material-ui/icons/CloseRounded\";\r\nimport { addDocument, deleteDocument, updateDocument } from \"api/collections\";\r\n\r\nexport interface AddNewCollectionProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  collections: Array<CollectionType>;\r\n  editingCollectionDocId: string;\r\n  onCreate: (val: CollectionType) => void;\r\n  onUpdate: (val: Partial<CollectionType>) => void;\r\n  onDelete: (docId: string) => void;\r\n}\r\n\r\nfunction isNumeric(char: any) {\r\n  return char >= \"0\" && char <= \"9\";\r\n}\r\n\r\nfunction isLetter(str: any) {\r\n  return str.length === 1 && str.match(/[a-z]/i);\r\n}\r\n\r\nconst createId = (string: string) => {\r\n  let id = \"\";\r\n  for (let i = 0; i < string.length; i++) {\r\n    if (string[i] === \" \") {\r\n      id += \"-\";\r\n    } else if (\r\n      i > 0 &&\r\n      string[i - 1].toLowerCase() === string[i - 1] &&\r\n      string[i - 1] !== \" \" &&\r\n      string[i].toUpperCase() === string[i] &&\r\n      !isNumeric(string[i]) &&\r\n      isLetter(string[i])\r\n    ) {\r\n      id += \"-\" + string[i].toLowerCase();\r\n    } else {\r\n      id += string[i].toLowerCase();\r\n    }\r\n  }\r\n  return id;\r\n};\r\n\r\nconst COLLECTION_ID = \"CollectionTypesReservedCollection\";\r\n\r\nconst AddNewCollection: React.FC<AddNewCollectionProps> = ({\r\n  open,\r\n  onClose,\r\n  collections,\r\n  editingCollectionDocId,\r\n  onCreate,\r\n  onUpdate,\r\n  onDelete,\r\n}) => {\r\n  const initialData = {\r\n    name: \"\",\r\n    id: \"\",\r\n    single: false,\r\n    draftable: true,\r\n    fields: [],\r\n    size: 0,\r\n    isSystem: false,\r\n    docId: \"\",\r\n  } as CollectionType;\r\n\r\n  const notify = useNotify();\r\n\r\n  const formIntialState = editingCollectionDocId.length\r\n    ? collections.find((x) => x.docId === editingCollectionDocId) || initialData\r\n    : initialData;\r\n\r\n  const { values, errors, handleSubmit, handleChange, setFieldValue, isSubmitting, submitCount } =\r\n    useFormik({\r\n      enableReinitialize: true,\r\n      onSubmit: async (vals, { resetForm }) => {\r\n        const id = createId(vals.name);\r\n\r\n        const res = editingCollectionDocId.length\r\n          ? await updateDocument(COLLECTION_ID, values.docId, { ...values, id })\r\n          : await addDocument(COLLECTION_ID, { ...values, id });\r\n        const actionType = editingCollectionDocId.length ? \"updated\" : \"created\";\r\n        if (!res.error) {\r\n          if (editingCollectionDocId.length) {\r\n            onUpdate(res);\r\n          } else {\r\n            onCreate(res);\r\n          }\r\n          resetForm();\r\n          onClose();\r\n          notify(\"Collection type \" + actionType + \"!\", { variant: \"success\" });\r\n        } else {\r\n          notify(\"Collection type was not \" + actionType, { variant: \"error\" });\r\n        }\r\n      },\r\n      initialValues: formIntialState,\r\n      validate: (vals) => {\r\n        let errors: { [key: string]: string } = {};\r\n        if (!vals.name) {\r\n          errors.name = \"Collection name is required\";\r\n        } else {\r\n          const id = createId(vals.name);\r\n          const index = collections.findIndex((x) => x.id === id);\r\n          if (index !== -1 && collections[index].docId !== editingCollectionDocId) {\r\n            errors.name = \"There is collection with the same name\";\r\n          }\r\n        }\r\n        return errors;\r\n      },\r\n    });\r\n\r\n  return (\r\n    <Modal open={open} hideBackdrop>\r\n      <div className=\"w-full h-full flex overflow-auto bg-black bg-opacity-40 p-7\">\r\n        <div\r\n          className=\"m-auto rounded bg-white w-full p-7 relative animate-littlemoveup\"\r\n          style={{ maxWidth: 600 }}\r\n        >\r\n          <CloseRounded\r\n            className=\"absolute top-0 right-0 cursor-pointer\"\r\n            onClick={onClose}\r\n          ></CloseRounded>\r\n          <div className=\"text-22px font-medium mb-12\">\r\n            {editingCollectionDocId.length ? \"Edit\" : \"Create\"} collection type\r\n          </div>\r\n          <div className=\"flex flex-wrap mb-7\">\r\n            <div className=\"mb-3 sm:w-1/2 w-full sm:pr-2\">\r\n              <div className=\"mb-2\">Collection name</div>\r\n              <Input\r\n                groundColor=\"white\"\r\n                className=\"h-34px\"\r\n                data-testid={`collection-name-input`}\r\n                error={submitCount > 0 && errors.name ? errors.name : false}\r\n                value={values.name}\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    handleSubmit();\r\n                  }\r\n                }}\r\n              ></Input>\r\n            </div>\r\n            <div className=\"mb-3 sm:w-1/2 w-full sm:pl-2\">\r\n              <div className=\"mb-2\">UID</div>\r\n              <Input\r\n                className=\"h-34px\"\r\n                groundColor=\"white\"\r\n                disabled\r\n                value={createId(values.name)}\r\n                name=\"id\"\r\n              ></Input>\r\n            </div>\r\n          </div>\r\n          <ToupleInput\r\n            disabled={editingCollectionDocId.length > 0}\r\n            value={values.single}\r\n            options={[\r\n              { value: false, label: \"Multiple elements\" },\r\n              { value: true, label: \"Single element\" },\r\n            ]}\r\n            setValue={(val) => (!editingCollectionDocId ? setFieldValue(\"single\", val) : {})}\r\n          ></ToupleInput>\r\n          {editingCollectionDocId ? (\r\n            <Button\r\n              data-testid=\"delete-collection-btn\"\r\n              onClick={async () => {\r\n                if (\r\n                  await confirm({\r\n                    confirmation: \"Delete collection type?\",\r\n                  })\r\n                ) {\r\n                  const deleteDocId = editingCollectionDocId;\r\n                  let res = await deleteDocument(COLLECTION_ID, deleteDocId);\r\n                  if (!res.error) {\r\n                    onClose();\r\n                    onDelete(deleteDocId);\r\n                    notify(\"Collection type deleted!\", { variant: \"success\" });\r\n                  } else {\r\n                    notify(\"Collection type was not deleted\", { variant: \"error\" });\r\n                  }\r\n                  onClose();\r\n                }\r\n              }}\r\n              className=\"border-2 min-w-unset h-34px px-4 border-red-FF0000 text-red-FF0000 mb-10 hover:bg-red-FF0000 hover:text-white\"\r\n            >\r\n              Delete collection\r\n            </Button>\r\n          ) : null}\r\n\r\n          <div className=\"flex justify-between\">\r\n            <Button\r\n              onClick={() => onClose()}\r\n              className=\"bg-fireck-5 hover:bg-fireck-5-hover text-white\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              data-testid=\"submit-btn\"\r\n              disabled={isSubmitting}\r\n              onClick={() => handleSubmit()}\r\n              className=\"bg-fireck-4 hover:bg-fireck-4-hover h-34px\"\r\n            >\r\n              {isSubmitting ? \"Loading...\" : \"Submit\"}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewCollection;\r\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSubcollection(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 11,\n    viewBox: \"0 0 19 19\",\n    fill: \"currentColor\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.570312 0.778809H6.57031V4.77881H0.570312V0.778809ZM12.5703 7.77881H18.5703V11.7788H12.5703V7.77881ZM12.5703 14.7788H18.5703V18.7788H12.5703V14.7788ZM10.5703 10.7788H4.57031V15.7788H10.5703V17.7788H4.57031H2.57031V6.77881H4.57031V8.77881H10.5703V10.7788Z\",\n    fill: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSubcollection);\nexport default __webpack_public_path__ + \"static/media/subcollection.7a823e1e.svg\";\nexport { ForwardRef as ReactComponent };","interface WrapperProps {}\r\n\r\nconst Wrapper: React.FC<WrapperProps> = (props) => {\r\n  return (\r\n    <div\r\n      {...props}\r\n      className=\"w-8 rounded h-5 bg-fireck-4 text-center flex justify-center items-center text-10px font-medium\"\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n","import Wrapper from \"./Wrapper\";\r\n\r\nconst String: React.FC = () => {\r\n  return <Wrapper>Ab</Wrapper>;\r\n};\r\n\r\nexport default String;\r\n","import Wrapper from \"./Wrapper\";\r\n\r\nconst Number: React.FC = () => {\r\n  return <Wrapper>123</Wrapper>;\r\n};\r\n\r\nexport default Number;\r\n","import Wrapper from \"./Wrapper\";\r\n\r\nconst Map: React.FC = () => {\r\n  return <Wrapper>{\"{ }\"}</Wrapper>;\r\n};\r\n\r\nexport default Map;\r\n","import Wrapper from \"./Wrapper\";\r\n\r\nconst Array: React.FC = () => {\r\n  return <Wrapper>[ ]</Wrapper>;\r\n};\r\n\r\nexport default Array;\r\n","import ToggleOnOutlinedIcon from \"@material-ui/icons/ToggleOnOutlined\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Boolean: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <ToggleOnOutlinedIcon fontSize=\"inherit\" className=\"text-lg\"></ToggleOnOutlinedIcon>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Boolean;\r\n","import CalendarTodayOutlinedIcon from \"@material-ui/icons/CalendarTodayOutlined\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Boolean: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <CalendarTodayOutlinedIcon fontSize=\"inherit\" className=\"text-sm\"></CalendarTodayOutlinedIcon>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Boolean;\r\n","import PanoramaOutlinedIcon from \"@material-ui/icons/PanoramaOutlined\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Media: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <PanoramaOutlinedIcon fontSize=\"inherit\" className=\"text-base\"></PanoramaOutlinedIcon>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Media;\r\n","import NotesIcon from \"@material-ui/icons/Notes\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Media: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <NotesIcon fontSize=\"inherit\" className=\"text-base\"></NotesIcon>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Media;\r\n","import Wrapper from \"./Wrapper\";\r\n\r\nconst Boolean: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <span className=\"text-10px\">JSON</span>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Boolean;\r\n","import ListRounded from \"@material-ui/icons/ListRounded\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Enum: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <ListRounded fontSize=\"inherit\" className=\"text-xl\"></ListRounded>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Enum;\r\n","import VpnKeyRounded from \"@material-ui/icons/VpnKeyRounded\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Password: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <VpnKeyRounded fontSize=\"inherit\" className=\"text-base\"></VpnKeyRounded>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Password;\r\n","import Link from \"@material-ui/icons/Link\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Relation: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Link fontSize=\"inherit\" className=\"text-lg\"></Link>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Relation;\r\n","import String from \"./String\";\r\nimport Number from \"./Number\";\r\nimport Map from \"./Map\";\r\nimport Array from \"./Array\";\r\nimport Boolean from \"./Boolean\";\r\nimport Date from \"./Date\";\r\nimport Media from \"./Media\";\r\nimport RichText from \"./RichText\";\r\nimport Json from \"./Json\";\r\nimport Enum from \"./Enum\";\r\nimport Password from \"./Password\";\r\nimport Relation from \"./Relation\";\r\nimport Subcollection from \"./Subcollection\";\r\n\r\nconst fieldTypes = [\r\n  { type: \"string\", Badge: String },\r\n  { type: \"number\", Badge: Number },\r\n  { type: \"map\", Badge: Map },\r\n  { type: \"array\", Badge: Array },\r\n  { type: \"boolean\", Badge: Boolean },\r\n  { type: \"date\", Badge: Date },\r\n  { type: \"media\", Badge: Media },\r\n  { type: \"rich-text\", Badge: RichText },\r\n  { type: \"json\", Badge: Json },\r\n  { type: \"enum\", Badge: Enum },\r\n  { type: \"password\", Badge: Password },\r\n  { type: \"relation\", Badge: Relation },\r\n  { type: \"collection\", Badge: Subcollection },\r\n];\r\n\r\nexport default fieldTypes;\r\n","import { ReactComponent as SubColIcon } from \"assets/subcollection.svg\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Media: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <SubColIcon className=\"m-auto\"></SubColIcon>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Media;\r\n","import FieldTypes from \"components/FieldTypes\";\r\nimport React from \"react\";\r\nimport { FieldInputType } from \"api/collectionTypes\";\r\nimport Button from \"components/Button\";\r\nimport CloseRounded from \"@material-ui/icons/CloseRounded\";\r\n\r\nexport interface SelectFieldTypeProps {\r\n  proceed: Function;\r\n}\r\n\r\nconst SelectFieldType: React.FC<SelectFieldTypeProps> = ({ proceed }) => {\r\n  const [fieldType, setFieldType] = React.useState(\"string\" as FieldInputType);\r\n\r\n  return (\r\n    <div className=\"fixed left-0 top-0 w-full h-full flex overflow-auto bg-black bg-opacity-40 p-7\">\r\n      <div\r\n        className=\"m-auto rounded bg-white p-7 w-full relative animate-littlemoveup\"\r\n        style={{ maxWidth: 550 }}\r\n      >\r\n        <CloseRounded\r\n          className=\"cursor-pointer absolute top-0 right-0\"\r\n          onClick={() => proceed(false)}\r\n        ></CloseRounded>\r\n        <div className=\"text-22px font-medium mb-7\">Select field type</div>\r\n        <div className=\"mb-6\">\r\n          <div className=\"flex flex-wrap\">\r\n            {FieldTypes.map((x, i) => (\r\n              <div\r\n                data-testid={`fieldtype-option-${x.type}`}\r\n                onClick={() => setFieldType(x.type as FieldInputType)}\r\n                key={`field-type-${i}`}\r\n                className={`flex md:w-1/3 sm:w-1/2 w-full select-none p-3 border-4 border-solid border-white items-center cursor-pointer rounded  ${\r\n                  fieldType === x.type\r\n                    ? \"border-fireck-4\"\r\n                    : \"hover:border-gray-300 hover:bg-gray-300\"\r\n                }`}\r\n              >\r\n                <div className=\"flex items-center pointer-events-none\">\r\n                  <x.Badge></x.Badge>\r\n                  <span className=\"capitalize ml-2 line-clamp-1\">{x.type.replace(\"-\", \" \")}</span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"flex justify-between\">\r\n          <Button\r\n            data-testid=\"cancel-field-type-btn\"\r\n            onClick={() => {\r\n              proceed(false);\r\n            }}\r\n            className=\"bg-fireck-5 hover:bg-fireck-5-hover text-white h-34px\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            data-testid=\"submit-field-type-btn\"\r\n            onClick={() => {\r\n              proceed(fieldType);\r\n            }}\r\n            className=\"bg-fireck-4 hover:bg-fireck-4-hover h-34px\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectFieldType;\r\n","import { callComponent } from \"api/callComponent\";\r\nimport { FieldInputType, FieldType } from \"api/collectionTypes\";\r\nimport SelectFieldType, { SelectFieldTypeProps } from \"./SelectFieldType\";\r\nimport SpecifyFieldDetails, { SpecifyFieldDetailsProps } from \"./SpecifyFieldDetails\";\r\n\r\nexport const getCollectionField = async ({\r\n  editableField,\r\n  existingFieldNames,\r\n  zLevel,\r\n}: {\r\n  editableField?: FieldType;\r\n  existingFieldNames?: string[];\r\n  zLevel: number;\r\n}) => {\r\n  let res = editableField\r\n    ? editableField.type\r\n    : await callComponent<SelectFieldTypeProps, FieldInputType | boolean>({\r\n        Component: SelectFieldType,\r\n        props: {},\r\n      });\r\n\r\n  if (typeof res === \"boolean\") return null;\r\n\r\n  const fieldType = res;\r\n  let res1 = await callComponent<SpecifyFieldDetailsProps, Omit<FieldType, \"type\"> | boolean>({\r\n    Component: SpecifyFieldDetails,\r\n    props: {\r\n      fieldType,\r\n      editableField,\r\n      existingFieldNames,\r\n      zLevel,\r\n      goBack: (closer) => {\r\n        closer();\r\n        getCollectionField({ editableField, existingFieldNames, zLevel });\r\n      },\r\n    },\r\n  });\r\n  if (typeof res1 === \"boolean\") return null;\r\n\r\n  return { ...res1, type: res };\r\n};\r\n","import React from \"react\";\r\nimport Input from \"components/Input\";\r\nimport Button from \"components/Button\";\r\nimport { FieldInputType, FieldType } from \"api/collectionTypes\";\r\nimport FieldTypes from \"components/FieldTypes\";\r\nimport Select from \"components/Select\";\r\nimport { ReactComponent as OneToOneIcon } from \"assets/one-to-one.svg\";\r\nimport { ReactComponent as OneToManyIcon } from \"assets/one-to-many.svg\";\r\nimport Label from \"components/Label\";\r\nimport ToupleInput from \"components/ToupleInput\";\r\nimport { useFormik } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"store\";\r\nimport AddCircleOutlineRounded from \"@material-ui/icons/AddCircleOutlineRounded\";\r\nimport IconButton from \"components/IconButton\";\r\nimport EditOutlined from \"@material-ui/icons/EditOutlined\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport Delete from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport { getCollectionField } from \"./GetCollectionField\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { reorder } from \".\";\r\nimport CloseRounded from \"@material-ui/icons/CloseRounded\";\r\n\r\nexport interface SpecifyFieldDetailsProps {\r\n  editableField?: FieldType;\r\n  existingFieldNames?: string[];\r\n  fieldType: FieldInputType;\r\n  proceed: Function;\r\n  zLevel: number;\r\n  goBack: (closer: () => void) => void;\r\n}\r\n\r\nconst SpecifyFieldDetails: React.FC<SpecifyFieldDetailsProps> = ({\r\n  editableField,\r\n  existingFieldNames,\r\n  proceed,\r\n  fieldType,\r\n  zLevel,\r\n  goBack,\r\n}) => {\r\n  const initialValues = {\r\n    id: \"\",\r\n    mediaSingle: false,\r\n    enumOptions: [] as Array<string>,\r\n    relatedCollectionTypeDocId: \"\",\r\n    relationOneToOne: true,\r\n    displayOnTable: true,\r\n    stringLong: false,\r\n    collectionFields: [] as FieldType[],\r\n  };\r\n  const { values, errors, handleChange, handleSubmit, setFieldValue, submitCount } = useFormik({\r\n    onSubmit: (vals) => {\r\n      proceed(vals);\r\n    },\r\n    initialValues: editableField ? { ...initialValues, ...editableField } : initialValues,\r\n    validate: (vals) => {\r\n      const errors: any = {};\r\n\r\n      if (!vals.id) {\r\n        errors.id = \"Field name is required\";\r\n      } else if (existingFieldNames && existingFieldNames.findIndex((x) => x === vals.id) > -1) {\r\n        errors.id = \"There is field with the same name\";\r\n      }\r\n\r\n      if (fieldType === \"enum\" && vals.enumOptions.length < 2) {\r\n        errors.enumOptions = \"Enum requires at least two options\";\r\n      }\r\n\r\n      if (fieldType === \"relation\" && vals.relatedCollectionTypeDocId === \"\") {\r\n        errors.relatedCollectionTypeDocId = \"Select related collection\";\r\n      }\r\n\r\n      return errors;\r\n    },\r\n  });\r\n  const [enumOption, setEnumOption] = React.useState(\"\");\r\n\r\n  const SelectedFieldType = FieldTypes.find((x) => x.type === fieldType);\r\n  const collections = useSelector((state: RootState) => state.collectionTypes);\r\n\r\n  const onDragEnd = async (result: any) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    const fields = reorder(values.collectionFields, result.source.index, result.destination.index);\r\n    setFieldValue(\"collectionFields\", fields);\r\n  };\r\n\r\n  const addEnumOption = () => {\r\n    if (enumOption) {\r\n      let arr = [...values.enumOptions];\r\n      arr.push(enumOption);\r\n      setFieldValue(\"enumOptions\", arr);\r\n      setEnumOption(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed left-0 top-0 w-full h-full flex overflow-auto bg-black bg-opacity-40\">\r\n      <div\r\n        style={{ maxWidth: 550 }}\r\n        className=\"m-auto rounded bg-white p-7 w-full relative animate-littlemoveup\"\r\n      >\r\n        <CloseRounded\r\n          className=\"absolute top-0 right-0 cursor-pointer\"\r\n          onClick={() => proceed(false)}\r\n        ></CloseRounded>\r\n        <div className=\"text-22px font-medium mb-9 flex items-center\">\r\n          {SelectedFieldType ? <SelectedFieldType.Badge></SelectedFieldType.Badge> : null}\r\n          <span className=\"ml-3\">\r\n            {editableField ? \"Edit\" : \"Add\"} {SelectedFieldType ? SelectedFieldType.type : \"\"} field\r\n          </span>\r\n        </div>\r\n        <div className=\"mb-9\">\r\n          <div className=\"mb-2\">Field name</div>\r\n          <Input\r\n            groundColor=\"white\"\r\n            className=\"h-34px\"\r\n            data-testid={`field-id-input-${zLevel}`}\r\n            error={submitCount > 0 ? errors.id : \"\"}\r\n            value={values.id}\r\n            name=\"id\"\r\n            onChange={handleChange}\r\n            onKeyDown={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                handleSubmit();\r\n              }\r\n            }}\r\n          ></Input>\r\n        </div>\r\n\r\n        {fieldType === \"media\" ? (\r\n          <ToupleInput\r\n            data-testid={`media-touple-${zLevel}`}\r\n            options={[\r\n              { value: false, label: \"Multiple media\" },\r\n              { value: true, label: \"Single media\" },\r\n            ]}\r\n            value={values.mediaSingle}\r\n            setValue={(val) => setFieldValue(\"mediaSingle\", val)}\r\n          ></ToupleInput>\r\n        ) : fieldType === \"enum\" ? (\r\n          <div className=\"mb-10\">\r\n            <div className=\"mb-2\">Options</div>\r\n            <div className=\"flex flex-wrap\">\r\n              {values.enumOptions.map((x, i) => (\r\n                <div\r\n                  data-testid={`enum-option-${x}-${zLevel}`}\r\n                  key={`enum-option-${i}`}\r\n                  className=\"bg-gray-300 rounded flex items-center px-3 h-34px mr-3 mb-3\"\r\n                >\r\n                  <div className=\"mr-4\">{x}</div>\r\n                  <div\r\n                    className=\"cursor-pointer text-xs\"\r\n                    onClick={() => {\r\n                      let arr = [...values.enumOptions];\r\n                      arr.splice(i, 1);\r\n                      setFieldValue(\"enumOptions\", arr);\r\n                    }}\r\n                  >\r\n                    ✕\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"flex\">\r\n              <Input\r\n                data-testid={`enum-option-input-${zLevel}`}\r\n                className=\"mr-3\"\r\n                error={submitCount > 0 ? errors.enumOptions?.toString() : \"\"}\r\n                type=\"text\"\r\n                value={enumOption}\r\n                onChange={(e) => setEnumOption(e.target.value)}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    addEnumOption();\r\n                  }\r\n                }}\r\n              ></Input>\r\n              <Button\r\n                data-testid={`add-enum-option-btn-${zLevel}`}\r\n                onClick={addEnumOption}\r\n                className=\"bg-orange-300 hover:bg-orange-301\"\r\n              >\r\n                Add option\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        ) : fieldType === \"relation\" ? (\r\n          <div className=\"mb-10\">\r\n            <div className=\"mb-9\">\r\n              <Label\r\n                groundColor=\"white\"\r\n                error={submitCount > 0 ? errors.relatedCollectionTypeDocId : \"\"}\r\n                className=\"mb-2\"\r\n              >\r\n                Related collection\r\n              </Label>\r\n              <Select\r\n                groundColor=\"white\"\r\n                data-testid={`related-collection-select-${zLevel}`}\r\n                options={[\r\n                  { value: \"\", label: \"Select\" },\r\n                  ...collections.map((c) => ({ label: c.id, value: c.docId })),\r\n                ]}\r\n                value={values.relatedCollectionTypeDocId}\r\n                onChange={(e) => setFieldValue(\"relatedCollectionTypeDocId\", e.target.value)}\r\n              ></Select>\r\n            </div>\r\n            <div className=\"mb-2\">Relation type</div>\r\n            <ToupleInput\r\n              data-testid={`relation-multiplicity-touple-${zLevel}`}\r\n              value={values.relationOneToOne}\r\n              setValue={(val) => setFieldValue(\"relationOneToOne\", val)}\r\n              options={[\r\n                { value: true, label: \"One to one\", icon: OneToOneIcon },\r\n                { value: false, label: \"One to many\", icon: OneToManyIcon },\r\n              ]}\r\n            ></ToupleInput>\r\n          </div>\r\n        ) : fieldType === \"string\" ? (\r\n          <ToupleInput\r\n            data-testid={`string-type-touple-${zLevel}`}\r\n            value={values.stringLong}\r\n            setValue={(val) => setFieldValue(\"stringLong\", val)}\r\n            options={[\r\n              { label: \"Short text\", value: false },\r\n              { label: \"Long text\", value: true },\r\n            ]}\r\n          ></ToupleInput>\r\n        ) : fieldType === \"collection\" ? (\r\n          <div className=\"mb-9\">\r\n            <div className=\"flex mb-2\">\r\n              <div className=\"mr-2\">Fields</div>\r\n              <AddCircleOutlineRounded\r\n                data-testid={`add-field-for-subcollection-btn-${zLevel}`}\r\n                className=\"cursor-pointer\"\r\n                onClick={async () => {\r\n                  const field = await getCollectionField({\r\n                    existingFieldNames: values.collectionFields.map((x) => x.id),\r\n                    zLevel: zLevel + 1,\r\n                  });\r\n                  if (!field) return;\r\n                  const fields = [...values.collectionFields, field];\r\n                  setFieldValue(\"collectionFields\", fields);\r\n                }}\r\n              ></AddCircleOutlineRounded>\r\n            </div>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"droppable-sub\">\r\n                {(provided, snapshot) => (\r\n                  <div\r\n                    className=\" max-h-247px overflow-auto\"\r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                  >\r\n                    {values.collectionFields.map((x, i) => {\r\n                      const Badge = FieldTypes.find((t) => t.type === x.type)?.Badge;\r\n                      return (\r\n                        <Draggable key={x.id} draggableId={x.id + 1} index={i}>\r\n                          {(provided, snapshot) => (\r\n                            <div\r\n                              key={`field-${i}`}\r\n                              className=\"rounded bg-gray-300 px-3 py-2 flex mb-2 items-center\"\r\n                              ref={provided.innerRef}\r\n                              {...provided.draggableProps}\r\n                              {...provided.dragHandleProps}\r\n                            >\r\n                              <div className=\"line-clamp-1 w-5/12 px-3\">{x.id}</div>\r\n                              <div className=\"flex w-4/12 flex-shrink-0\">\r\n                                {Badge ? <Badge></Badge> : null}\r\n                                <span className=\"ml-3 hidden sm:block line-clamp-1\">{x.type}</span>\r\n                              </div>\r\n                              <div className=\"flex items-center flex-grow justify-end\">\r\n                                <IconButton\r\n                                  variant=\"transparent\"\r\n                                  onClick={async () => {\r\n                                    const field = await getCollectionField({\r\n                                      zLevel: zLevel + 1,\r\n                                      editableField: x,\r\n                                      existingFieldNames: values.collectionFields\r\n                                        .map((f) => f.id)\r\n                                        .filter((f) => f !== x.id),\r\n                                    });\r\n\r\n                                    if (!field) return;\r\n\r\n                                    let fields = [...values.collectionFields];\r\n                                    fields[i] = { ...x, ...field };\r\n                                    setFieldValue(\"collectionFields\", fields);\r\n                                  }}\r\n                                >\r\n                                  <EditOutlined fontSize=\"small\"></EditOutlined>\r\n                                </IconButton>\r\n                                <IconButton\r\n                                  variant=\"transparent\"\r\n                                  onClick={async () => {\r\n                                    let res = await confirm({\r\n                                      confirmation: \"Do you really want to delete the field?\",\r\n                                    });\r\n                                    if (res) {\r\n                                      const fields = [...values.collectionFields];\r\n                                      fields.splice(i, 1);\r\n                                      setFieldValue(\"collectionFields\", fields);\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  <Delete fontSize=\"small\"></Delete>\r\n                                </IconButton>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </Draggable>\r\n                      );\r\n                    })}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n          </div>\r\n        ) : null}\r\n        <div className=\"flex justify-between\">\r\n          <Button\r\n            data-testid={`cancel-field-details-btn-${zLevel}`}\r\n            onClick={() => goBack(() => proceed(false))}\r\n            className=\"bg-fireck-5 hover:bg-fireck-5-hover text-white h-34px\"\r\n          >\r\n            {editableField ? \"Cancel\" : \"Back\"}\r\n          </Button>\r\n          <Button\r\n            data-testid={`submit-field-details-btn-${zLevel}`}\r\n            type=\"submit\"\r\n            onClick={() => handleSubmit()}\r\n            className=\"bg-fireck-4 hover:bg-fireck-4-hover h-34px\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpecifyFieldDetails;\r\n","import { UnControlled as CodeMirror } from \"react-codemirror2\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/addon/edit/closebrackets\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/addon/lint/lint\";\r\nimport \"codemirror/addon/lint/lint.css\";\r\n\r\ninterface TypescriptSyntaxProps {\r\n  code: string;\r\n}\r\n\r\nconst TypescriptSyntax: React.FC<TypescriptSyntaxProps> = ({ code }) => {\r\n  return (\r\n    <CodeMirror\r\n      value={code}\r\n      options={{\r\n        theme: \"material\",\r\n        lineNumbers: true,\r\n        readOnly: true,\r\n        mode: \"text/typescript\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TypescriptSyntax;\r\n","import Modal from \"@material-ui/core/Modal\";\r\nimport { CollectionType, FieldType } from \"api/collectionTypes\";\r\nimport CloseRounded from \"@material-ui/icons/CloseRounded\";\r\nimport { useState } from \"react\";\r\nimport Button from \"components/Button\";\r\nimport TypescriptSyntax from \"components/TypescriptSyntax\";\r\nimport SimpleBar from \"simplebar-react\";\r\n\r\nexport interface InterfaceModalProps {\r\n  open: boolean;\r\n  collectionType?: CollectionType;\r\n  onClose: () => void;\r\n}\r\n\r\nconst getGap = (count: number) => {\r\n  return new Array(count).fill(0).reduce((a, b) => a + \" \", \"\");\r\n};\r\n\r\nconst getType = (type: FieldType, ident: number, identStep: number = 3): string => {\r\n  const docType = (fields: FieldType[], multiple: boolean = false) => {\r\n    return fields.length\r\n      ? `{\\n${fields.reduce(\r\n          (a, b) =>\r\n            a +\r\n            `${getGap(ident)}${\r\n              b.id.includes(\" \") || b.id.includes(\"-\") ? `\"${b.id}\"` : b.id\r\n            }: ${getType(b, ident + identStep)};\\n`,\r\n          \"\"\r\n        )}${getGap(ident - identStep)}${multiple ? \"}[]\" : \"}\"}`\r\n      : multiple\r\n      ? \"any[]\"\r\n      : \"null\";\r\n  };\r\n\r\n  const types = {\r\n    password: () => \"string\",\r\n    string: () => \"string\",\r\n    \"rich-text\": () => \"string\",\r\n    json: () => \"object\",\r\n    map: () => \"object\",\r\n    array: () => \"any[]\",\r\n    media: (x: FieldType) => (x.mediaSingle ? \"string\" : \"string[]\"),\r\n    date: () => \"string\",\r\n    enum: () => \"string[]\",\r\n    number: () => \"number\",\r\n    boolean: () => \"boolean\",\r\n    relation: (x: FieldType) => (x.relationOneToOne ? \"string\" : \"string[]\"),\r\n    collection: (x: FieldType) => docType(x.collectionFields, true),\r\n    document: (x: FieldType) => docType(x.documentFields),\r\n    script: () => \"object\",\r\n    \"script-V2\": () => \"object\",\r\n    any: () => \"any\",\r\n  };\r\n  return `${types[type.type](type)}`;\r\n};\r\n\r\nexport const generateInterface = (colType: CollectionType) => {\r\n  const docType: any = {\r\n    type: \"document\",\r\n    documentFields: colType.fields,\r\n  };\r\n\r\n  const intface = `interface Document ${getType(docType, 3)}`;\r\n  return intface;\r\n};\r\n\r\nconst InterfaceModal: React.FC<InterfaceModalProps> = ({ open, collectionType, onClose }) => {\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const interfaceString = collectionType ? generateInterface(collectionType) : \"\";\r\n\r\n  return !collectionType ? null : (\r\n    <Modal open={open} hideBackdrop>\r\n      <div\r\n        className=\"fixed left-0 top-0 w-full h-full flex overflow-auto bg-black bg-opacity-40 p-9\"\r\n        onMouseDown={onClose}\r\n      >\r\n        <div\r\n          className=\"bg-white p-7 m-auto rounded md:max-w-lg max-w-sm w-full relative animate-littlemoveup\"\r\n          onMouseDown={(e) => e.stopPropagation()}\r\n        >\r\n          <CloseRounded\r\n            className=\"absolute top-0 right-0 cursor-pointer\"\r\n            onClick={onClose}\r\n          ></CloseRounded>\r\n          <div className=\"mb-7 text-22px capitalize font-medium\">\r\n            {collectionType.name} interface\r\n          </div>\r\n          <div className=\"relative rounded overflow-hidden\">\r\n            {copied ? (\r\n              <div className=\"absolute z-20 text-white top-1 animate-littlemoveup right-1 cursor-pointer h-6 px-2 text-xs font-medium\">\r\n                Copied!\r\n              </div>\r\n            ) : (\r\n              <Button\r\n                onClick={() => {\r\n                  navigator.clipboard.writeText(interfaceString);\r\n                  setCopied(true);\r\n                  setTimeout(() => {\r\n                    setCopied(false);\r\n                  }, 2000);\r\n                }}\r\n                className=\"absolute min-w-unset z-20 top-1 right-1 text-xs cursor-pointer h-6 px-3 bg-fireck-4 hover:bg-fireck-4-hover\"\r\n              >\r\n                Copy\r\n              </Button>\r\n            )}\r\n\r\n            <TypescriptSyntax code={interfaceString}></TypescriptSyntax>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default InterfaceModal;\r\n","import Button from \"components/Button\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\nimport { RootState } from \"store\";\r\nimport EditOutlined from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlineOutlined from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport CollectionModal from \"./CollectionModal\";\r\nimport FieldTypes from \"components/FieldTypes\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport { useNotify } from \"components/NotificationsProvider\";\r\nimport SpecifyFieldDetails, { SpecifyFieldDetailsProps } from \"./SpecifyFieldDetails\";\r\nimport SelectFieldType, { SelectFieldTypeProps } from \"./SelectFieldType\";\r\nimport { callComponent } from \"api/callComponent\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport DragIndicatorRounded from \"@material-ui/icons/DragIndicatorRounded\";\r\nimport InterfaceModal from \"./InterfaceModal\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport AddRounded from \"@material-ui/icons/AddRounded\";\r\nimport SettingsPage from \"components/SettingsPage\";\r\nimport { updateDocument } from \"api/collections\";\r\nimport { CollectionType, FieldInputType, FieldType } from \"api/collectionTypes\";\r\n\r\nexport interface CollectionsBuilderProps {}\r\n\r\nexport const reorder = (list: any[], startIndex: number, endIndex: number) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst COLLECTION_ID = \"CollectionTypesReservedCollection\";\r\n\r\nconst CollectionsBuilder: React.FC<CollectionsBuilderProps> = () => {\r\n  const [collectionModalOpen, setCollectionModalOpen] = React.useState(false as boolean);\r\n  const dispatch = useDispatch();\r\n  const notify = useNotify();\r\n  const [editingCollectionDocId, setEditingCollectionDocId] = React.useState(\"\");\r\n  const [selectedCollection, setSelectedCollection] = React.useState(\"\");\r\n  const [interfaceColType, setInterfaceColType] = React.useState<CollectionType>();\r\n\r\n  const collections = useSelector(\r\n    (state: RootState) => state.collectionTypes.filter((x) => !x.isSystem),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    console.log(\"col updat\");\r\n    if (collections.length) {\r\n      setSelectedCollection(collections[0].docId);\r\n    }\r\n  }, [collections]);\r\n\r\n  const editField = async (fieldType: FieldInputType, selectedField: number) => {\r\n    const collection = collections.find((x) => x.docId === selectedCollection);\r\n    if (!collection) return;\r\n    let res = await callComponent<SpecifyFieldDetailsProps, FieldType | boolean>({\r\n      Component: SpecifyFieldDetails,\r\n      props: {\r\n        fieldType,\r\n        editableField: collection.fields[selectedField],\r\n        zLevel: 0,\r\n        goBack: (closer) => closer(),\r\n      },\r\n    });\r\n\r\n    if (!(typeof res === \"boolean\")) {\r\n      let newFields = JSON.parse(JSON.stringify(collection.fields));\r\n      newFields[selectedField] = { ...res };\r\n      dispatch({ type: \"UPDATE_COLLECTION_FIELDS\", payload: newFields, docId: collection.docId });\r\n      let res1 = await updateDocument(COLLECTION_ID, collection.docId, {\r\n        ...collection,\r\n        fields: newFields,\r\n      });\r\n      if (!res1.error) {\r\n        return { success: true };\r\n      }\r\n    }\r\n\r\n    return { success: false };\r\n  };\r\n\r\n  const addField = async () => {\r\n    const collection = collections.find((x) => x.docId === selectedCollection);\r\n    if (!collection) return;\r\n    let res = await callComponent<SelectFieldTypeProps, FieldInputType | boolean>({\r\n      Component: SelectFieldType,\r\n      props: {},\r\n    });\r\n\r\n    if (!(typeof res === \"boolean\")) {\r\n      const fieldType = res;\r\n      let res1 = await callComponent<SpecifyFieldDetailsProps, Omit<FieldType, \"type\"> | boolean>({\r\n        Component: SpecifyFieldDetails,\r\n        props: {\r\n          fieldType,\r\n          existingFieldNames: collection.fields.map((x) => x.id),\r\n          zLevel: 0,\r\n          goBack: (closer) => {\r\n            closer();\r\n            addField();\r\n          },\r\n        },\r\n      });\r\n      if (!(typeof res1 === \"boolean\")) {\r\n        const newFields = [...collection.fields, { type: fieldType, ...res1 }];\r\n        dispatch({ type: \"UPDATE_COLLECTION_FIELDS\", payload: newFields, docId: collection.docId });\r\n        let res2 = await updateDocument(COLLECTION_ID, collection.docId, {\r\n          ...collection,\r\n          fields: newFields,\r\n        });\r\n        if (!res2.error) {\r\n          notify(\"Field added!\", { variant: \"success\" });\r\n          return { success: true };\r\n        } else {\r\n          notify(\"Field was not added\", { variant: \"error\" });\r\n        }\r\n      }\r\n    }\r\n\r\n    return { success: false };\r\n  };\r\n\r\n  const onDragEnd = async (result: any) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    let col = collections.find((x) => x.docId === selectedCollection);\r\n    if (!col) return;\r\n\r\n    const fields = reorder(col.fields, result.source.index, result.destination.index);\r\n\r\n    dispatch({ type: \"UPDATE_COLLECTION_FIELDS\", payload: fields, docId: col.docId });\r\n    updateDocument(COLLECTION_ID, col.docId, {\r\n      ...col,\r\n      fields,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SettingsPage\r\n        entityContent={\r\n          <div className=\"h-full bg-white rounded overflow-hidden\">\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"droppable\">\r\n                {(provided, snapshot) => (\r\n                  <SimpleBar\r\n                    className=\"overflow-auto w-full h-full scrollbar-light scrollbar-thin py-0.5\"\r\n                    autoHide={false}\r\n                  >\r\n                    <div\r\n                      className=\"min-w-430px\"\r\n                      {...provided.droppableProps}\r\n                      ref={provided.innerRef as any}\r\n                    >\r\n                      {collections\r\n                        .find((x) => x.docId === selectedCollection)\r\n                        ?.fields.map((x, i) => {\r\n                          const Badge = FieldTypes.find((t) => t.type === x.type)?.Badge;\r\n                          return (\r\n                            <Draggable key={x.id} draggableId={x.id} index={i}>\r\n                              {(provided, snapshot) => (\r\n                                <div\r\n                                  data-testid={`field-id-${x.id}`}\r\n                                  key={`field-${i}`}\r\n                                  className=\"bg-white hover:bg-fireck-4 flex mb-2 items-center px-2 py-0.5\"\r\n                                  ref={provided.innerRef}\r\n                                  {...provided.draggableProps}\r\n                                >\r\n                                  <div {...provided.dragHandleProps}>\r\n                                    <DragIndicatorRounded fontSize=\"inherit\" className=\"text-lg\" />\r\n                                  </div>\r\n\r\n                                  <div className=\"line-clamp-1 w-5/12 px-3\">{x.id}</div>\r\n                                  <div className=\"flex w-4/12 flex-shrink-0 items-center\">\r\n                                    {Badge ? <Badge></Badge> : null}\r\n                                    <span className=\"ml-3 hidden sm:block line-clamp-1\">\r\n                                      {x.type}\r\n                                    </span>\r\n                                  </div>\r\n                                  {x.isDefault ? null : (\r\n                                    <div className=\"flex items-center flex-grow justify-end\">\r\n                                      <div\r\n                                        data-testid={`edit-for-field-${x.id}`}\r\n                                        className=\"h-5 w-5 flex items-center justify-center rounded cursor-pointer hover:bg-white\"\r\n                                        onClick={() => {\r\n                                          editField(x.type, i);\r\n                                        }}\r\n                                      >\r\n                                        <EditOutlined\r\n                                          fontSize=\"inherit\"\r\n                                          classes={{ root: \"pointer-events-none text-lg\" }}\r\n                                        ></EditOutlined>\r\n                                      </div>\r\n                                      <div\r\n                                        className=\"h-5 w-5 flex items-center justify-center rounded cursor-pointer hover:bg-red-FF0000 hover:text-white\"\r\n                                        data-testid={`delete-for-field-${x.id}`}\r\n                                        onClick={async () => {\r\n                                          let res = await confirm({\r\n                                            confirmation: \"Delete field?\",\r\n                                          });\r\n                                          if (res) {\r\n                                            let updatedCollection = JSON.parse(\r\n                                              JSON.stringify(\r\n                                                collections.find(\r\n                                                  (x) => x.docId === selectedCollection\r\n                                                )\r\n                                              )\r\n                                            );\r\n                                            updatedCollection.fields.splice(i, 1);\r\n                                            dispatch({\r\n                                              type: \"UPDATE_COLLECTION_FIELDS\",\r\n                                              payload: updatedCollection.fields,\r\n                                              docId: selectedCollection,\r\n                                            });\r\n\r\n                                            updateDocument(\r\n                                              COLLECTION_ID,\r\n                                              selectedCollection,\r\n                                              updatedCollection\r\n                                            );\r\n                                          }\r\n                                        }}\r\n                                      >\r\n                                        <DeleteOutlineOutlined\r\n                                          classes={{ root: \"pointer-events-none text-lg\" }}\r\n                                          fontSize=\"inherit\"\r\n                                        ></DeleteOutlineOutlined>\r\n                                      </div>\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          );\r\n                        })}\r\n                      {provided.placeholder}\r\n                    </div>\r\n                  </SimpleBar>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n          </div>\r\n        }\r\n        selectedEntityId={selectedCollection}\r\n        entity=\"collection\"\r\n        enitityPlural=\"collections\"\r\n        entities={collections}\r\n        onSelectEntity={(docId) => setSelectedCollection(docId)}\r\n        onAddEntity={() => setCollectionModalOpen(true)}\r\n        onInvokeEntityEdit={() => {\r\n          setEditingCollectionDocId(selectedCollection);\r\n          setCollectionModalOpen(true);\r\n        }}\r\n        entityButtons={\r\n          <div className=\"flex flex-wrap\">\r\n            <Button\r\n              data-testid=\"view-interface-btn\"\r\n              onClick={() =>\r\n                setInterfaceColType(collections.find((x) => x.docId === selectedCollection))\r\n              }\r\n              className=\"border border-white h-28px text-white mr-3 mb-3 px-5 min-w-unset\"\r\n            >\r\n              <div className=\"flex items-center pointer-events-none\">Interface</div>\r\n            </Button>\r\n            <Button\r\n              data-testid=\"add-new-field-btn\"\r\n              onClick={async () => {\r\n                addField();\r\n              }}\r\n              className=\"bg-fireck-4 hover:bg-fireck-4-hover mb-3 h-28px pl-3 min-w-unset\"\r\n            >\r\n              <div className=\"flex items-center pointer-events-none\">\r\n                <AddRounded className=\"mr-2 text-lg\" fontSize=\"inherit\"></AddRounded>\r\n                <span>Add field</span>\r\n              </div>\r\n            </Button>\r\n          </div>\r\n        }\r\n      ></SettingsPage>\r\n\r\n      <CollectionModal\r\n        editingCollectionDocId={editingCollectionDocId}\r\n        collections={collections}\r\n        onCreate={(val) => dispatch({ type: \"ADD_COLLECTION_TYPE\", payload: val })}\r\n        onUpdate={(val) => {\r\n          dispatch({ type: \"UPDATE_COLLECTION_TYPE\", payload: val, docId: val.docId });\r\n        }}\r\n        onDelete={(docId) => {\r\n          setSelectedCollection(\"\");\r\n          setEditingCollectionDocId(\"\");\r\n          dispatch({ type: \"DELETE_COLLECTION_TYPE\", payload: docId });\r\n        }}\r\n        open={collectionModalOpen}\r\n        onClose={() => {\r\n          setCollectionModalOpen(false);\r\n          setEditingCollectionDocId(\"\");\r\n        }}\r\n      ></CollectionModal>\r\n      <InterfaceModal\r\n        onClose={() => setInterfaceColType(undefined)}\r\n        open={interfaceColType ? true : false}\r\n        collectionType={interfaceColType}\r\n      ></InterfaceModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CollectionsBuilder;\r\n"],"sourceRoot":""}