{"version":3,"sources":["api/collections.ts","components/Select.tsx","../node_modules/@material-ui/icons/EditRounded.js","components/SettingsPage.tsx","api/roles.ts","pages/Roles/RoleEditor.tsx","pages/Roles/RoleModal.tsx","pages/Roles/index.tsx"],"names":["getAuthHeader","user","store","getState","token","getCollection","signal","collectionId","orderBy","startAt","startAfter","where","limit","populateRef","url","window","location","origin","fetch","headers","Authorization","then","x","json","catch","error","code","toString","addDocument","doc","method","body","JSON","stringify","deleteDocument","docId","getDocument","updateDocument","collectionType","WarningIcon","React","forwardRef","props","ref","className","size","Select","options","groundColor","classNames","spellCheck","map","i","data-testid","value","label","title","placement","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","CollectionsBuilder","entity","enitityPlural","onAddEntity","entities","onSelectEntity","entityButtons","onInvokeEntityEdit","entityContent","selectedEntityId","noMinWidth","onClick","fontSize","length","autoHide","name","find","onChange","e","target","permissions","RoleEditor","roleCopy","collections","setRoleCopy","sorter","a","b","Checkbox","classes","checked","root","c","perms","forEach","sort","prev","selectAll","p","includes","permission","existingKeys","keys","push","filter","cp","selectColumn","colDocId","selectRow","pi","index","findIndex","perm","splice","RoleModal","open","onClose","editRole","onDelete","onSave","onCreate","useFormik","onSubmit","vals","enableReinitialize","initialValues","defaultPermissions","validate","errors","values","isSubmitting","submitCount","handleChange","setFieldValue","handleSubmit","Modal","hideBackdrop","style","maxWidth","Input","disabled","FormControlLabel","control","toLowerCase","Button","Roles","useState","roleModalOpen","setRoleModalOpen","roles","setRoles","selectedRole","setSelectedRole","setEditRole","collectionTypes","useSelector","state","notify","useNotify","dispatch","useDispatch","isSaving","setIsSaving","role","hasBeenChanged","useEffect","parse","type","payload","res","console","log","undefined","onUpdate","newRole","variant","arr","confirm","confirmation","ind","SettingsPage"],"mappings":"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","file":"static/js/15.f9725f35.chunk.js","sourcesContent":["import store from \"store\";\r\n\r\nconst getAuthHeader = () => {\r\n  const user = store.getState().user;\r\n  const token = user ? user.token : null;\r\n  return \"Bearer \" + token;\r\n};\r\n\r\nexport interface Document {\r\n  docId: string;\r\n  created_at: string;\r\n  modified_at: string;\r\n  [index: string]: any;\r\n}\r\n\r\nexport interface GetCollectionOptions {\r\n  collectionId: string;\r\n  orderBy?: string;\r\n  startAt?: number | string;\r\n  startAfter?: number | string;\r\n  where?: string;\r\n  limit?: number;\r\n  populateRef?: boolean;\r\n}\r\n\r\nexport const getCollection = (\r\n  {\r\n    collectionId,\r\n    orderBy,\r\n    startAt,\r\n    startAfter,\r\n    where,\r\n    limit = 10,\r\n    populateRef = true,\r\n  }: GetCollectionOptions,\r\n  signal?: AbortSignal\r\n) => {\r\n  const url = `${\r\n    window.location.origin\r\n  }/api/${collectionId}?limit=${limit}&populateRef=${populateRef}${\r\n    orderBy ? `&orderBy=${orderBy}` : \"\"\r\n  }${startAt ? `&startAt=${startAt}` : startAfter ? `&startAfter=${startAfter}` : \"\"}${\r\n    where ? `&where=${where}` : \"\"\r\n  }`;\r\n  return fetch(url, { headers: { Authorization: getAuthHeader() }, signal })\r\n    .then((x) => x.json())\r\n    .catch((error: any) => {\r\n      if (error.code && error.code === 20) {\r\n        return { error: \"aborted\" };\r\n      }\r\n      return { error: error.toString() };\r\n    });\r\n};\r\n\r\nexport const addDocument = (collectionId: string, doc: { [index: string]: any }) => {\r\n  try {\r\n    return fetch(window.location.origin + `/api/${collectionId}`, {\r\n      method: \"POST\",\r\n      headers: { Authorization: getAuthHeader() },\r\n      body: JSON.stringify(doc),\r\n    }).then((x) => x.json());\r\n  } catch (error) {\r\n    return { error };\r\n  }\r\n};\r\n\r\nexport const deleteDocument = (collectionId: string, docId: string) => {\r\n  try {\r\n    return fetch(window.location.origin + `/api/${collectionId}/${docId}`, {\r\n      method: \"DELETE\",\r\n      headers: { Authorization: getAuthHeader() },\r\n    }).then((x) => x.json());\r\n  } catch (error) {\r\n    return { error };\r\n  }\r\n};\r\n\r\nexport const getDocument = (collectionId: string, docId: string) => {\r\n  try {\r\n    return fetch(\r\n      window.location.origin + `/api/${collectionId}${docId ? `/${docId}` : \"\"}?populateRef=false`,\r\n      {\r\n        headers: { Authorization: getAuthHeader() },\r\n      }\r\n    ).then((x) => x.json());\r\n  } catch (error) {\r\n    return { error };\r\n  }\r\n};\r\n\r\nexport const updateDocument = (\r\n  collectionType: string,\r\n  docId: string,\r\n  doc: { [index: string]: any }\r\n) => {\r\n  try {\r\n    return fetch(window.location.origin + `/api/${collectionType}/${docId}`, {\r\n      method: \"PUT\",\r\n      headers: { Authorization: getAuthHeader() },\r\n      body: JSON.stringify(doc),\r\n    }).then((x) => x.json());\r\n  } catch (error) {\r\n    return { error };\r\n  }\r\n};\r\n","import { IoAlertCircleOutline } from \"react-icons/io5\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport React, { SelectHTMLAttributes } from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <IoAlertCircleOutline className=\"text-red-FF0000\" size={20}></IoAlertCircleOutline>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport interface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n  options: { label: string; value: string | number }[];\r\n  error?: string | boolean;\r\n  groundColor: \"white\" | \"black\";\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({\r\n  className = \"\",\r\n  options,\r\n  error,\r\n  groundColor,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={`${className} relative flex items-center`}>\r\n      <select\r\n        className={classNames(\"px-3 h-full border-2 border-solid w-full rounded outline-none\", {\r\n          \"border-red-FF0000\": error,\r\n          \"focus:border-fireck-4\": !error,\r\n          \"border-gray-300 bg-gray-300\": groundColor === \"white\",\r\n          \"border-white bg-white\": groundColor === \"black\",\r\n        })}\r\n        {...props}\r\n        spellCheck={false}\r\n      >\r\n        {options.map((x, i) => (\r\n          <option data-testid={`select-option-${x.value}`} key={\"opt-\" + i} value={x.value}>\r\n            {x.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.46v3.04c0 .28.22.5.5.5h3.04c.13 0 .26-.05.35-.15L17.81 9.94l-3.75-3.75L3.15 17.1c-.1.1-.15.22-.15.36zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'EditRounded');\n\nexports.default = _default;","import Button from \"components/Button\";\r\nimport React, { ReactElement, useState } from \"react\";\r\nimport Edit from \"@material-ui/icons/EditRounded\";\r\nimport Select from \"components/Select\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport AddRounded from \"@material-ui/icons/AddRounded\";\r\n\r\nexport interface CollectionsBuilderProps {\r\n  entity: string;\r\n  enitityPlural: string;\r\n  onAddEntity?: () => void;\r\n  entities: { name: string; docId: string }[];\r\n  onSelectEntity: (id: string) => void;\r\n  entityButtons: ReactElement;\r\n  onInvokeEntityEdit?: () => void;\r\n  entityContent: ReactElement;\r\n  selectedEntityId: string;\r\n}\r\n\r\nexport const reorder = (list: any[], startIndex: number, endIndex: number) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst CollectionsBuilder: React.FC<CollectionsBuilderProps> = ({\r\n  entity,\r\n  enitityPlural,\r\n  onAddEntity,\r\n  entities,\r\n  onSelectEntity,\r\n  entityButtons,\r\n  onInvokeEntityEdit,\r\n  entityContent,\r\n  selectedEntityId,\r\n}) => {\r\n  return (\r\n    <div className=\"h-full flex flex-col\">\r\n      <div className=\"flex flex-wrap justify-between mb-4\">\r\n        <div className=\"font-medium text-27px leading-none mb-4 mr-4 text-white capitalize\">\r\n          {enitityPlural}\r\n        </div>\r\n        {!onAddEntity ? null : (\r\n          <Button\r\n            noMinWidth\r\n            data-testid=\"add-collection-btn\"\r\n            onClick={onAddEntity}\r\n            className=\"bg-fireck-4 hover:bg-fireck-4-hover mb-4\"\r\n          >\r\n            <div className=\"flex items-center pointer-events-none h-34px\">\r\n              <AddRounded className=\"mr-2 text-lg\" fontSize=\"inherit\"></AddRounded>\r\n              <span className=\"hidden md:block\">Add {entity}</span>\r\n              <span className=\"md:hidden\">Add</span>\r\n            </div>\r\n          </Button>\r\n        )}\r\n      </div>\r\n      {!entities.length ? (\r\n        <div></div>\r\n      ) : (\r\n        <div className=\"flex flex-wrap lg:flex-nowrap w-full flex-grow\">\r\n          <SimpleBar\r\n            className=\"max-w-192px w-full flex-shrink-0 mr-4 hidden lg:block max-h-96 scrollbar-dark pr-3\"\r\n            autoHide={false}\r\n          >\r\n            {entities.map((x) => (\r\n              <div\r\n                data-testid={`entity-name-${x.name}`}\r\n                onClick={() => {\r\n                  onSelectEntity(x.docId);\r\n                }}\r\n                key={`entity-${x.docId}`}\r\n                className={`mb-1 capitalize truncate select-none cursor-pointer ${\r\n                  selectedEntityId === x.docId\r\n                    ? \"bg-fireck-4\"\r\n                    : \"hover:bg-fireck-1-hover text-white\"\r\n                } rounded h-28px leading-28px px-3`}\r\n              >\r\n                {x.name}\r\n              </div>\r\n            ))}\r\n          </SimpleBar>\r\n\r\n          <div className=\"lg:flex-grow w-full rounded-lg bg-fireck-3 p-7 flex flex-col\">\r\n            <div className=\"flex justify-between mb-3 flex-wrap\">\r\n              <div className=\"font-medium text-22px capitalize mb-3 mr-3 text-white\">\r\n                <span className=\"hidden lg:inline-block\">\r\n                  {entities.find((x) => x.docId === selectedEntityId)?.name || \"\"}\r\n                </span>\r\n                <div className=\"lg:hidden inline-block text-black text-base\">\r\n                  <Select\r\n                    className=\"h-28px\"\r\n                    groundColor=\"black\"\r\n                    onChange={(e) => onSelectEntity(e.target.value)}\r\n                    value={selectedEntityId}\r\n                    options={entities.map((x) => ({ label: x.name, value: x.docId }))}\r\n                  ></Select>\r\n                </div>\r\n                {!onInvokeEntityEdit ? null : (\r\n                  <Edit\r\n                    data-testid=\"edit-collection-btn\"\r\n                    onClick={onInvokeEntityEdit}\r\n                    className=\"ml-3 text-lg cursor-pointer\"\r\n                    fontSize=\"inherit\"\r\n                  ></Edit>\r\n                )}\r\n              </div>\r\n              {entityButtons}\r\n            </div>\r\n\r\n            <div className=\"flex-grow h-0\">{entityContent}</div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CollectionsBuilder;\r\n","export type RoleType = \"admin\" | \"user\";\r\nexport type CollectionPermission =\r\n  | \"find\"\r\n  | \"find one\"\r\n  | \"count\"\r\n  | \"create\"\r\n  | \"update\"\r\n  | \"delete\"\r\n  | \"type\";\r\n\r\nexport const permissions: CollectionPermission[] = [\r\n  \"find\",\r\n  \"find one\",\r\n  \"count\",\r\n  \"create\",\r\n  \"update\",\r\n  \"delete\",\r\n  \"type\",\r\n];\r\n\r\nexport type RoleDocument = {\r\n  docId: string;\r\n  name: string;\r\n  defaultPermissions: CollectionPermission[];\r\n  permissions: { [collectionName: string]: CollectionPermission[] };\r\n};\r\n","import React, { Dispatch, SetStateAction } from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { permissions, RoleDocument, CollectionPermission } from \"api/roles\";\r\nimport { CollectionType } from \"api/collectionTypes\";\r\nimport SimpleBar from \"simplebar-react\";\r\n\r\nexport interface RoleEditorProps {\r\n  roleCopy: RoleDocument | undefined;\r\n  setRoleCopy: Dispatch<SetStateAction<RoleDocument | undefined>>;\r\n  collections: CollectionType[];\r\n}\r\n\r\nconst RoleEditor: React.FC<RoleEditorProps> = ({ roleCopy, collections, setRoleCopy }) => {\r\n  const sorter = (a: string, b: string) => (a > b ? 1 : a < b ? -1 : 0);\r\n  //sorter sorts permissions in arrays in order the comparison to work\r\n\r\n  const selectColumn = (checked: boolean, permission: CollectionPermission) => {\r\n    if (!roleCopy) return;\r\n    let perms = { ...roleCopy.permissions };\r\n    let existingKeys = Object.keys(perms);\r\n    collections.forEach((c) => {\r\n      if (checked) {\r\n        if (!existingKeys.includes(c.docId)) {\r\n          perms[c.docId] = [permission];\r\n        } else {\r\n          if (!perms[c.docId].includes(permission)) {\r\n            perms[c.docId].push(permission);\r\n            perms[c.docId].sort(sorter);\r\n          }\r\n        }\r\n      } else {\r\n        if (existingKeys.includes(c.docId) && perms[c.docId].includes(permission)) {\r\n          perms[c.docId] = perms[c.docId].filter((cp) => cp !== permission);\r\n        }\r\n      }\r\n    });\r\n    setRoleCopy((prev) => (!prev ? prev : { ...prev, permissions: perms }));\r\n  };\r\n\r\n  const selectRow = (checked: boolean, colDocId: string) => {\r\n    if (!roleCopy) return;\r\n    let perms = { ...roleCopy.permissions };\r\n    perms[colDocId] = checked ? permissions : [];\r\n    setRoleCopy((prev) => (!prev ? prev : { ...prev, permissions: perms }));\r\n  };\r\n\r\n  const selectAll = (checked: boolean) => {\r\n    if (!roleCopy) return;\r\n    let perms = { ...roleCopy.permissions };\r\n    if (checked) {\r\n      collections.forEach((c) => {\r\n        perms[c.docId] = permissions;\r\n        perms[c.docId].sort(sorter);\r\n      });\r\n    } else {\r\n      perms = {};\r\n    }\r\n    setRoleCopy((prev) => (!prev ? prev : { ...prev, permissions: perms }));\r\n  };\r\n\r\n  return roleCopy ? (\r\n    <div className=\"h-full bg-white rounded overflow-hidden\">\r\n      <SimpleBar className=\"pb-2 scrollbar-light h-full\">\r\n        <table className=\"w-full min-w-544px\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"text-center bg-gray-E1E1E1 sticky top-0 z-10\"></th>\r\n              <th className=\"text-center font-semibold bg-gray-E1E1E1 sticky top-0 z-10\">\r\n                <div>All</div>\r\n                <Checkbox\r\n                  size=\"small\"\r\n                  classes={{ checked: \"text-fireck-1\", root: \"p-0\" }}\r\n                  checked={\r\n                    !collections.find(\r\n                      (c) =>\r\n                        !roleCopy.permissions[c.docId] ||\r\n                        roleCopy.permissions[c.docId].length < permissions.length\r\n                    )\r\n                  }\r\n                  onChange={(e) => selectAll(e.target.checked)}\r\n                ></Checkbox>\r\n              </th>\r\n              {permissions.map((p, i) => (\r\n                <th className=\"font-semibold sticky top-0 bg-gray-E1E1E1 z-10\" key={p}>\r\n                  <div>{p}</div>\r\n                  <Checkbox\r\n                    size=\"small\"\r\n                    classes={{ checked: \"text-fireck-1\", root: \"p-0\" }}\r\n                    checked={!collections.find((c) => !roleCopy.permissions[c.docId]?.includes(p))}\r\n                    onChange={(e) => selectColumn(e.target.checked, p)}\r\n                  ></Checkbox>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {collections.map((c, i) => (\r\n              <tr key={c.docId} className=\"hover:bg-fireck-4\">\r\n                <td>\r\n                  <div className=\"max-w-135px truncate pl-2 capitalize\">{c.name}</div>\r\n                </td>\r\n                <td className=\"text-center\">\r\n                  <Checkbox\r\n                    size=\"small\"\r\n                    classes={{ checked: \"text-fireck-1\", root: \"p-0\" }}\r\n                    checked={\r\n                      roleCopy.permissions[c.docId]\r\n                        ? roleCopy.permissions[c.docId].length === permissions.length\r\n                        : false\r\n                    }\r\n                    onChange={(e) => selectRow(e.target.checked, c.docId)}\r\n                  ></Checkbox>\r\n                </td>\r\n                {permissions.map((p, pi) => (\r\n                  <td key={p + c.docId} className=\"text-center\">\r\n                    <Checkbox\r\n                      size=\"small\"\r\n                      classes={{ checked: \"text-fireck-1\", root: \"p-0\" }}\r\n                      checked={\r\n                        roleCopy.permissions[c.docId]\r\n                          ? roleCopy.permissions[c.docId].includes(p)\r\n                          : false\r\n                      }\r\n                      onChange={(e) =>\r\n                        setRoleCopy((prev) => {\r\n                          if (prev == null) {\r\n                            return prev;\r\n                          }\r\n                          const checked = e.target.checked;\r\n                          let perms = { ...prev.permissions };\r\n                          if (checked) {\r\n                            if (c.docId in perms) {\r\n                              perms[c.docId].push(p);\r\n                              perms[c.docId].sort(sorter);\r\n                            } else {\r\n                              perms[c.docId] = [p];\r\n                            }\r\n                          } else {\r\n                            if (c.docId in perms) {\r\n                              let index = perms[c.docId].findIndex((perm) => perm === p);\r\n                              perms[c.docId].splice(index, 1);\r\n                              if (!perms[c.docId].length) {\r\n                                delete perms[c.docId];\r\n                              }\r\n                            }\r\n                          }\r\n\r\n                          return { ...prev, permissions: perms };\r\n                        })\r\n                      }\r\n                    ></Checkbox>\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </SimpleBar>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default RoleEditor;\r\n","import Modal from \"@material-ui/core/Modal\";\r\nimport Input from \"components/Input\";\r\nimport { RoleDocument, permissions } from \"api/roles\";\r\nimport React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Button from \"components/Button\";\r\nimport CloseRounded from \"@material-ui/icons/CloseRounded\";\r\n\r\nexport interface RoleModalProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  editRole: RoleDocument | undefined;\r\n  onDelete: (docId: string) => void;\r\n  onSave: (r: RoleDocument, notify?: boolean) => void;\r\n  onCreate: (r: RoleDocument) => void;\r\n}\r\n\r\nconst RoleModal: React.FC<RoleModalProps> = ({\r\n  open,\r\n  onClose,\r\n  editRole,\r\n  onDelete,\r\n  onSave,\r\n  onCreate,\r\n}) => {\r\n  const { values, errors, isSubmitting, submitCount, handleChange, setFieldValue, handleSubmit } =\r\n    useFormik<RoleDocument>({\r\n      onSubmit: async (vals) => {\r\n        vals.docId ? await onSave(vals) : await onCreate(vals);\r\n      },\r\n      enableReinitialize: true,\r\n      initialValues: editRole\r\n        ? editRole\r\n        : {\r\n            name: \"\",\r\n            defaultPermissions: [],\r\n            permissions: {},\r\n            docId: \"\",\r\n          },\r\n      validate: (vals) => {\r\n        let errors: Partial<typeof vals> = {};\r\n        if (vals.name.length === 0) {\r\n          errors.name = \"required\";\r\n        }\r\n        return errors;\r\n      },\r\n    });\r\n\r\n  return !open ? null : (\r\n    <Modal open={open} hideBackdrop>\r\n      <div className=\"w-full h-full flex overflow-auto bg-black bg-opacity-40 p-7\">\r\n        <div\r\n          style={{ maxWidth: 570 }}\r\n          className=\"m-auto rounded bg-white w-full p-7 animate-littlemoveup relative\"\r\n        >\r\n          <CloseRounded\r\n            className=\"absolute top-0 right-0 cursor-pointer\"\r\n            onClick={onClose}\r\n          ></CloseRounded>\r\n          <div className=\"mb-9 font-medium text-2xl\">\r\n            {values.docId ? \"Edit role\" : \"Create role\"}\r\n          </div>\r\n          <div className=\"mb-9\">\r\n            <div className=\"mb-2\">Role name</div>\r\n            <Input\r\n              className=\"h-34px\"\r\n              groundColor=\"white\"\r\n              disabled={[\"public\", \"authenticated\"].includes(values.name)}\r\n              onChange={handleChange}\r\n              name=\"name\"\r\n              value={values.name}\r\n              error={errors.name && submitCount > 0 ? errors.name : false}\r\n            ></Input>\r\n          </div>\r\n          <div className=\"mb-2\">Default permissions</div>\r\n          <div className=\"flex flex-wrap mb-9\">\r\n            {permissions.map((p, i) => (\r\n              <div key={p} className=\"sm:w-1/3 w-1/2 flex\">\r\n                <FormControlLabel\r\n                  classes={{ label: \"font-poppins line-clamp-1\" }}\r\n                  control={\r\n                    <Checkbox\r\n                      classes={{ checked: \"text-blue-300\" }}\r\n                      className=\"mr-3\"\r\n                      checked={values.defaultPermissions.includes(p)}\r\n                      onChange={(e) => {\r\n                        let perms = [...values.defaultPermissions];\r\n                        if (e.target.checked) {\r\n                          perms.push(p);\r\n                        } else {\r\n                          const index = perms.findIndex((perm) => perm === p);\r\n                          perms.splice(index, 1);\r\n                        }\r\n                        setFieldValue(\"defaultPermissions\", perms);\r\n                      }}\r\n                    ></Checkbox>\r\n                  }\r\n                  label={p}\r\n                ></FormControlLabel>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {!editRole || [\"public\", \"authenticated\"].includes(editRole.name.toLowerCase()) ? null : (\r\n            <Button\r\n              onClick={() => onDelete(editRole.docId)}\r\n              className=\"border-2 h-34px border-red-FF0000 text-red-FF0000 mb-10 hover:bg-red-FF0000 hover:text-white\"\r\n            >\r\n              Delete role\r\n            </Button>\r\n          )}\r\n          <div className=\"flex justify-between\">\r\n            <Button\r\n              onClick={() => onClose()}\r\n              className=\"bg-blue-300 hover:bg-blue-400 text-white h-34px\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={() => handleSubmit()}\r\n              className=\"bg-fireck-4 hover:bg-fireck-4-hover h-34px\"\r\n            >\r\n              {isSubmitting ? \"Loading...\" : \"Submit\"}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RoleModal;\r\n","import SettingsPage from \"components/SettingsPage\";\r\nimport Button from \"components/Button\";\r\nimport React from \"react\";\r\nimport RoleEditor from \"./RoleEditor\";\r\nimport RoleModal from \"./RoleModal\";\r\nimport { getCollection, updateDocument, addDocument, deleteDocument } from \"api/collections\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"store\";\r\nimport { useNotify } from \"components/NotificationsProvider\";\r\nimport { RoleDocument } from \"api/roles\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport classNames from \"classnames\";\r\n\r\ninterface RolesProps {}\r\n\r\nconst Roles: React.FC<RolesProps> = () => {\r\n  const [roleModalOpen, setRoleModalOpen] = React.useState(false);\r\n  const [roles, setRoles] = React.useState<RoleDocument[]>([]);\r\n  const [selectedRole, setSelectedRole] = React.useState(\"\");\r\n  const [editRole, setEditRole] = React.useState<RoleDocument>();\r\n  const collectionTypes = useSelector((state: RootState) => state.collectionTypes);\r\n  const notify = useNotify();\r\n  const dispatch = useDispatch();\r\n\r\n  const [roleCopy, setRoleCopy] = React.useState<RoleDocument>();\r\n  const [isSaving, setIsSaving] = React.useState(false);\r\n  const role = roles.find((x) => x.docId === selectedRole);\r\n\r\n  const hasBeenChanged = !(JSON.stringify(role) === JSON.stringify(roleCopy));\r\n\r\n  React.useEffect(() => {\r\n    if (role) {\r\n      setRoleCopy(JSON.parse(JSON.stringify(role)));\r\n    }\r\n  }, [role]);\r\n\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        if (dispatch) {\r\n          dispatch({ type: \"SET_LOADING\", payload: true });\r\n          const res = await getCollection({ collectionId: \"RolesReservedCollection\" });\r\n          if (!(\"error\" in res)) {\r\n            setRoles(res);\r\n            if (res.length) {\r\n              setSelectedRole(res[0].docId);\r\n            }\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        dispatch({ type: \"SET_LOADING\", payload: false });\r\n      }\r\n    })();\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    if (editRole) {\r\n      setRoleModalOpen(true);\r\n    }\r\n  }, [editRole]);\r\n\r\n  const onClose = () => {\r\n    setRoleModalOpen(false);\r\n    setEditRole(undefined);\r\n  };\r\n\r\n  const onUpdate = async (newRole: RoleDocument) => {\r\n    const res = await updateDocument(\"RolesReservedCollection\", newRole.docId, newRole);\r\n    if (!(\"error\" in res)) {\r\n      setRoles((prev) => {\r\n        let arr = [...prev];\r\n        let index = arr.findIndex((x) => x.docId === selectedRole);\r\n        if (index === -1) return arr;\r\n        arr[index] = newRole;\r\n        return arr;\r\n      });\r\n      notify(\"Role updated!\", { variant: \"success\" });\r\n    } else {\r\n      notify(res.error, { variant: \"error\" });\r\n    }\r\n    onClose();\r\n  };\r\n\r\n  const onCreate = async (newRole: RoleDocument) => {\r\n    const res = await addDocument(\"RolesReservedCollection\", newRole);\r\n    if (!(\"error\" in res)) {\r\n      setRoles((prev) => [{ ...newRole, docId: res.docId }, ...prev]);\r\n      notify(\"Role created!\", { variant: \"success\" });\r\n    } else {\r\n      notify(res.error, { variant: \"error\" });\r\n    }\r\n    onClose();\r\n  };\r\n\r\n  const onDelete = async (docId: string) => {\r\n    if (\r\n      await confirm({\r\n        confirmation: \"Do you really want to delete this role\",\r\n      })\r\n    ) {\r\n      let res = await deleteDocument(\"RolesReservedCollection\", docId);\r\n      if (!res.error) {\r\n        setRoles((prev) => {\r\n          let arr = [...prev];\r\n          const ind = arr.findIndex((x) => x.docId === docId);\r\n          if (ind === -1) return prev;\r\n          arr.splice(ind, 1);\r\n          return arr;\r\n        });\r\n        notify(\"Role deleted!\", { variant: \"success\" });\r\n      } else {\r\n        notify(\"Role was not deleted\", { variant: \"error\" });\r\n      }\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <RoleModal\r\n        onCreate={onCreate}\r\n        onDelete={onDelete}\r\n        editRole={editRole}\r\n        open={roleModalOpen}\r\n        onSave={onUpdate}\r\n        onClose={() => {\r\n          setRoleModalOpen(false);\r\n          setEditRole(undefined);\r\n        }}\r\n      ></RoleModal>\r\n      <SettingsPage\r\n        selectedEntityId={selectedRole}\r\n        entity=\"role\"\r\n        enitityPlural=\"roles\"\r\n        onAddEntity={() => setRoleModalOpen(true)}\r\n        entities={roles}\r\n        entityButtons={\r\n          <Button\r\n            onClick={async () => {\r\n              if (!roleCopy) return;\r\n              setIsSaving(true);\r\n              await onUpdate(roleCopy);\r\n              setIsSaving(false);\r\n            }}\r\n            noMinWidth\r\n            disabled={!hasBeenChanged || isSaving}\r\n            className={classNames(\"mb-4 h-28px px-7\", {\r\n              \"bg-white cursor-default text-gray-500\": !hasBeenChanged && !isSaving,\r\n              \"bg-fireck-4 hover:bg-fireck-4-hover\": !(!hasBeenChanged && !isSaving),\r\n            })}\r\n          >\r\n            {isSaving ? \"Saving...\" : hasBeenChanged ? \"Save\" : \"Saved!\"}\r\n          </Button>\r\n        }\r\n        onSelectEntity={(docId) => {\r\n          setSelectedRole(docId);\r\n        }}\r\n        onInvokeEntityEdit={() => setEditRole(role)}\r\n        entityContent={\r\n          <RoleEditor\r\n            collections={collectionTypes}\r\n            roleCopy={roleCopy}\r\n            setRoleCopy={setRoleCopy}\r\n          ></RoleEditor>\r\n        }\r\n      ></SettingsPage>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Roles;\r\n"],"sourceRoot":""}