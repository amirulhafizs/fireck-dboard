{"version":3,"sources":["api/callComponent.tsx","components/Select.tsx","components/IconButton.tsx","components/EmptyScreen.tsx","components/Label.tsx","assets/one-to-one.svg","assets/one-to-many.svg","components/ToupleInput.tsx","pages/CollectionTypes/CollectionModal.tsx","assets/subcollection.svg","components/fieldTypes/String.tsx","components/fieldTypes/Number.tsx","components/fieldTypes/Map.tsx","components/fieldTypes/Array.tsx","components/fieldTypes/Boolean.tsx","components/fieldTypes/Date.tsx","components/fieldTypes/Media.tsx","components/fieldTypes/RichText.tsx","components/fieldTypes/Json.tsx","components/fieldTypes/Enum.tsx","components/fieldTypes/Password.tsx","components/fieldTypes/Relation.tsx","components/fieldTypes/index.tsx","components/fieldTypes/Subcollection.tsx","pages/CollectionTypes/SelectFieldType.tsx","pages/CollectionTypes/GetCollectionField.ts","pages/CollectionTypes/SpecifyFieldDetails.tsx","pages/CollectionTypes/InterfaceModal.tsx","pages/CollectionTypes/index.tsx"],"names":["callComponent","Component","props","Promise","resolve","reject","wrapper","document","getElementById","appendChild","createElement","ReactDOM","render","store","proceed","val","unmountComponentAtNode","parentNode","removeChild","WarningIcon","React","forwardRef","ref","className","size","Select","options","error","white","classNames","spellCheck","map","x","i","value","label","title","placement","IconButton","variant","rest","EmptyScreen","onCreate","buttonTitle","onClick","fontSize","Label","children","_path","_circle","_circle2","_extends","Object","assign","target","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgOneToOne","_ref","svgRef","titleId","width","height","viewBox","fill","xmlns","id","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","ForwardRef","_path2","_circle3","SvgOneToMany","ToupleInput","setValue","disabled","opt","icon","createId","string","str","char","toLowerCase","toUpperCase","match","AddNewCollection","open","onClose","collections","editingCollectionIndex","onUpdate","onDelete","notify","useNotify","formIntialState","name","single","draftable","fields","lastIndex","docId","useFormik","enableReinitialize","onSubmit","vals","a","resetForm","updateCollectionType","values","createCollectionType","res","actionType","initialValues","validate","errors","index","findIndex","handleSubmit","handleChange","setFieldValue","isSubmitting","submitCount","Modal","hideBackdrop","onChange","onKeyDown","e","Button","confirm","confirmation","deleteDocId","deleteCollectionType","String","Number","Map","Array","Boolean","Media","Enum","Password","Relation","SvgSubcollection","fieldTypes","type","Badge","Date","RichText","Json","SelectFieldType","useState","fieldType","setFieldType","FieldTypes","replace","getCollectionField","editableField","existingFieldNames","SpecifyFieldDetails","res1","mediaSingle","enumOptions","relatedCollectionTypeDocId","relationOneToOne","displayOnTable","stringLong","collectionFields","enumOption","setEnumOption","SelectedFieldType","find","useSelector","state","collectionTypes","onDragEnd","result","destination","reorder","addEnumOption","arr","push","splice","toString","c","OneToOneIcon","OneToManyIcon","field","droppableId","provided","snapshot","droppableProps","innerRef","t","draggableId","draggableProps","dragHandleProps","f","filter","placeholder","getGap","count","reduce","b","getType","ident","identStep","docType","multiple","includes","types","password","json","array","media","date","enum","number","boolean","relation","collection","documentFields","script","generateInterface","colType","InterfaceModal","collectionType","stopPropagation","list","startIndex","endIndex","from","removed","CollectionsBuilder","collectionModalOpen","setCollectionModalOpen","dispatch","useDispatch","setEditingCollectionIndex","selectedCollection","setSelectedCollection","interfaceColType","setInterfaceColType","editField","selectedField","newFields","JSON","parse","stringify","payload","success","addField","parseInt","autoHide","noMinWidth","isDefault","updatedCollection","CollectionModal","undefined"],"mappings":"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","file":"static/js/12.f81f3da2.chunk.js","sourcesContent":["import ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"store\";\r\n\r\nexport interface CallableComponent<T> {\r\n  proceed: (v: T) => void;\r\n}\r\n\r\ninterface callComponentArgs<T> {\r\n  Component: React.FC<any>;\r\n  props: Omit<T, \"proceed\">;\r\n}\r\n\r\nexport function callComponent<T, RT>({ Component, props }: callComponentArgs<T>): Promise<RT> {\r\n  return new Promise((resolve, reject) => {\r\n    const wrapper = document.getElementById(\"root\")?.appendChild(document.createElement(\"div\"));\r\n    if (wrapper) {\r\n      ReactDOM.render(\r\n        <Provider store={store}>\r\n          <Component\r\n            {...props}\r\n            proceed={(val: RT) => {\r\n              ReactDOM.unmountComponentAtNode(wrapper);\r\n              wrapper.parentNode?.removeChild(wrapper);\r\n              resolve(val);\r\n            }}\r\n          />\r\n        </Provider>,\r\n        wrapper\r\n      );\r\n    }\r\n  });\r\n}\r\n","import { IoAlertCircleOutline } from \"react-icons/io5\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport React, { SelectHTMLAttributes } from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <IoAlertCircleOutline className=\"text-red-500\" size={20}></IoAlertCircleOutline>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport interface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n  options: { label: string; value: string | number }[];\r\n  error?: string | boolean;\r\n  white?: boolean;\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({\r\n  className = \"\",\r\n  options,\r\n  error,\r\n  white = false,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={`${className} relative flex items-center`}>\r\n      <select\r\n        className={classNames(\"px-3 h-34px border-2 border-solid w-full rounded outline-none\", {\r\n          \"border-red-400\": error,\r\n          \"focus:border-blue-300\": !error,\r\n          \"border-gray-300 bg-gray-300\": !white,\r\n          \"border-white bg-white\": white,\r\n        })}\r\n        {...props}\r\n        spellCheck={false}\r\n      >\r\n        {options.map((x, i) => (\r\n          <option key={\"opt-\" + i} value={x.value}>\r\n            {x.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import ButtonBase from \"@material-ui/core/ButtonBase\";\r\n\r\nexport type IconButtonVariant = \"transparent\" | \"standard\";\r\n\r\nexport interface IconButtonProps {\r\n  className?: string;\r\n  variant?: IconButtonVariant;\r\n  [x: string]: any;\r\n}\r\n\r\nconst IconButton: React.FC<IconButtonProps> = ({\r\n  className = \"\",\r\n  variant = \"standard\",\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <ButtonBase\r\n      {...rest}\r\n      className={\r\n        `outline-none h-26px w-26px rounded ${\r\n          variant === \"standard\"\r\n            ? \"bg-orange-300 hover:bg-orange-301\"\r\n            : \"hover:bg-black hover:bg-opacity-5\"\r\n        }  ` + className\r\n      }\r\n    ></ButtonBase>\r\n  );\r\n};\r\n\r\nexport default IconButton;\r\n","import Button from \"components/Button\";\r\n\r\nexport interface EmptyScreenProps {\r\n  title: string;\r\n  buttonTitle: string;\r\n  onCreate: () => void;\r\n}\r\n\r\nconst EmptyScreen: React.FC<EmptyScreenProps> = ({ title, onCreate, buttonTitle }) => {\r\n  return (\r\n    <div className=\"h-96 bg-gray-300 rounded-md flex w-full p-12\">\r\n      <div className=\"m-auto\">\r\n        <div className=\"text-22px mb-5 font-medium text-center\">{title}</div>\r\n        <Button className=\"mx-auto bg-orange-300 hover:bg-orange-301 block\" onClick={onCreate}>\r\n          {buttonTitle}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyScreen;\r\n","import React from \"react\";\r\nimport ErrorRounded from \"@material-ui/icons/ErrorRounded\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nexport interface LabelProps {\r\n  error?: string | undefined | null;\r\n  className?: string;\r\n  children: any;\r\n}\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <ErrorRounded className=\"text-red-500 text-xl\" fontSize=\"inherit\"></ErrorRounded>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Label: React.FC<LabelProps> = ({ className = \"\", children, error }) => {\r\n  return (\r\n    <div className={`flex justify-between relative ${className}`}>\r\n      <div>{children}</div>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","var _path, _circle, _circle2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgOneToOne(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 40,\n    height: 9,\n    viewBox: \"0 0 40 9\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.36621 4.67223H30.7241M30.7241 4.67223L28.3085 2.25659M30.7241 4.67223L28.3085 7.08786\",\n    stroke: \"black\",\n    strokeWidth: 1.37296,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 4.69562,\n    cy: 4.49835,\n    r: 3.31773,\n    stroke: \"black\",\n    strokeWidth: 1.37296\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 35.3948,\n    cy: 4.49835,\n    r: 3.31773,\n    stroke: \"black\",\n    strokeWidth: 1.37296\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOneToOne);\nexport default __webpack_public_path__ + \"static/media/one-to-one.4a14dbcb.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _circle, _circle2, _circle3;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgOneToMany(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 40,\n    height: 37,\n    viewBox: \"0 0 40 37\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.5875 18.8431L30.4119 7.39751M30.4119 7.39751L26.8752 6.44984M30.4119 7.39751L29.4643 10.9342\",\n    stroke: \"black\",\n    strokeWidth: 1.47153,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.5873 18.8433L30.4117 30.2889M30.4117 30.2889L29.4641 26.7522M30.4117 30.2889L26.875 31.2366\",\n    stroke: \"black\",\n    strokeWidth: 1.47153,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 5.00165,\n    cy: 18.7858,\n    r: 3.55593,\n    stroke: \"black\",\n    strokeWidth: 1.47153\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 35.2653,\n    cy: 32.5311,\n    r: 3.55593,\n    stroke: \"black\",\n    strokeWidth: 1.47153\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 35.2653,\n    cy: 5.15558,\n    r: 3.55593,\n    stroke: \"black\",\n    strokeWidth: 1.47153\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOneToMany);\nexport default __webpack_public_path__ + \"static/media/one-to-many.5e6efcfb.svg\";\nexport { ForwardRef as ReactComponent };","export interface ToupleInputProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  setValue: (a: any) => void;\r\n  options: {\r\n    value: any;\r\n    label: string;\r\n    icon?: React.FunctionComponent<React.SVGProps<SVGSVGElement>>;\r\n  }[];\r\n  value: any;\r\n  disabled?: boolean;\r\n}\r\n\r\nconst ToupleInput: React.FC<ToupleInputProps> = ({\r\n  className = \"\",\r\n  options,\r\n  value,\r\n  setValue,\r\n  disabled,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <div className={\"flex -mx-2 flex-wrap sm:flex-nowrap mb-10 \" + className} {...rest}>\r\n      {options.map((opt, i) => (\r\n        <div\r\n          key={opt.value}\r\n          onClick={() => setValue(opt.value)}\r\n          className={`sm:w-1/2 w-full mx-2 mb-3 sm:mb-0 py-7 select-none ${\r\n            disabled ? \"cursor-default\" : \"cursor-pointer\"\r\n          } flex items-center justify-center rounded ${\r\n            value === opt.value\r\n              ? \"border-4 border-orange-300\"\r\n              : `bg-gray-300 ${disabled ? \"\" : \"hover:bg-gray-301\"}`\r\n          }`}\r\n        >\r\n          <div className=\"flex items-center\">\r\n            <div className={opt.icon ? \"mr-7\" : \"\"}>{opt.label}</div>\r\n            {opt.icon ? <opt.icon></opt.icon> : null}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToupleInput;\r\n","import Modal from \"@material-ui/core/Modal\";\r\nimport Input from \"components/GrayInput\";\r\nimport React from \"react\";\r\nimport Button from \"components/Button\";\r\nimport {\r\n  createCollectionType,\r\n  updateCollectionType,\r\n  CollectionType,\r\n  deleteCollectionType,\r\n} from \"api/collectionTypes\";\r\nimport { useNotify } from \"components/NotificationsProvider\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport { useFormik } from \"formik\";\r\nimport ToupleInput from \"components/ToupleInput\";\r\n\r\nexport interface AddNewCollectionProps {\r\n  open: boolean;\r\n  onClose: Function;\r\n  collections: Array<CollectionType>;\r\n  editingCollectionIndex: number;\r\n  onCreate: (val: CollectionType) => void;\r\n  onUpdate: (val: Partial<CollectionType>) => void;\r\n  onDelete: (docId: string) => void;\r\n}\r\n\r\nfunction isNumeric(char: any) {\r\n  return char >= \"0\" && char <= \"9\";\r\n}\r\n\r\nfunction isLetter(str: any) {\r\n  return str.length === 1 && str.match(/[a-z]/i);\r\n}\r\n\r\nconst createId = (string: string) => {\r\n  let id = \"\";\r\n  for (let i = 0; i < string.length; i++) {\r\n    if (string[i] === \" \") {\r\n      id += \"-\";\r\n    } else if (\r\n      i > 0 &&\r\n      string[i - 1].toLowerCase() === string[i - 1] &&\r\n      string[i - 1] !== \" \" &&\r\n      string[i].toUpperCase() === string[i] &&\r\n      !isNumeric(string[i]) &&\r\n      isLetter(string[i])\r\n    ) {\r\n      id += \"-\" + string[i].toLowerCase();\r\n    } else {\r\n      id += string[i].toLowerCase();\r\n    }\r\n  }\r\n  return id;\r\n};\r\n\r\nconst AddNewCollection: React.FC<AddNewCollectionProps> = ({\r\n  open,\r\n  onClose,\r\n  collections,\r\n  editingCollectionIndex,\r\n  onCreate,\r\n  onUpdate,\r\n  onDelete,\r\n}) => {\r\n  const initialData = {\r\n    name: \"\",\r\n    id: \"\",\r\n    single: false,\r\n    draftable: true,\r\n    fields: [],\r\n    size: 0,\r\n    lastIndex: 0,\r\n    docId: \"\",\r\n  } as CollectionType;\r\n\r\n  const notify = useNotify();\r\n\r\n  const formIntialState =\r\n    editingCollectionIndex >= 0 ? collections[editingCollectionIndex] : initialData;\r\n\r\n  const { values, errors, handleSubmit, handleChange, setFieldValue, isSubmitting, submitCount } =\r\n    useFormik({\r\n      enableReinitialize: true,\r\n      onSubmit: async (vals, { resetForm }) => {\r\n        const id = createId(vals.name);\r\n\r\n        const res =\r\n          editingCollectionIndex > -1\r\n            ? await updateCollectionType(values.docId, { ...values, id })\r\n            : await createCollectionType({ ...values, id });\r\n        const actionType = editingCollectionIndex > -1 ? \"updated\" : \"created\";\r\n        if (!res.error) {\r\n          if (editingCollectionIndex > -1) {\r\n            onUpdate(res);\r\n          } else {\r\n            onCreate(res);\r\n          }\r\n          resetForm();\r\n          onClose();\r\n          notify(\"Collection type \" + actionType + \"!\", { variant: \"success\" });\r\n        } else {\r\n          notify(\"Collection type was not \" + actionType, { variant: \"error\" });\r\n        }\r\n      },\r\n      initialValues: formIntialState,\r\n      validate: (vals) => {\r\n        let errors: { [key: string]: string } = {};\r\n        if (!vals.name) {\r\n          errors.name = \"Collection name is required\";\r\n        } else {\r\n          const id = createId(vals.name);\r\n          const index = collections.findIndex((x) => x.id === id);\r\n          if (index !== -1 && index !== editingCollectionIndex) {\r\n            errors.name = \"There is collection with the same name\";\r\n          }\r\n        }\r\n        return errors;\r\n      },\r\n    });\r\n\r\n  return (\r\n    <Modal open={open} hideBackdrop>\r\n      <div className=\"w-full h-full flex overflow-auto bg-black bg-opacity-40\">\r\n        <div className=\"m-auto rounded bg-white max-w-644px w-full p-9\">\r\n          <div className=\"text-22px font-medium mb-12\">\r\n            {editingCollectionIndex > -1 ? \"Edit\" : \"Create\"} collection type\r\n          </div>\r\n          <div className=\"flex flex-wrap mb-7\">\r\n            <div className=\"mb-3 sm:w-1/2 w-full sm:pr-2\">\r\n              <div className=\"mb-2\">Collection name</div>\r\n              <Input\r\n                error={submitCount > 0 && errors.name ? errors.name : false}\r\n                value={values.name}\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    handleSubmit();\r\n                  }\r\n                }}\r\n              ></Input>\r\n            </div>\r\n            <div className=\"mb-3 sm:w-1/2 w-full sm:pl-2\">\r\n              <div className=\"mb-2\">UID</div>\r\n              <Input disabled value={createId(values.name)} name=\"id\"></Input>\r\n            </div>\r\n          </div>\r\n          <ToupleInput\r\n            disabled={editingCollectionIndex !== -1}\r\n            value={values.single}\r\n            options={[\r\n              { value: false, label: \"Multiple elements\" },\r\n              { value: true, label: \"Single element\" },\r\n            ]}\r\n            setValue={(val) => (editingCollectionIndex === -1 ? setFieldValue(\"single\", val) : {})}\r\n          ></ToupleInput>\r\n          {editingCollectionIndex > -1 ? (\r\n            <Button\r\n              onClick={async () => {\r\n                if (\r\n                  await confirm({\r\n                    confirmation: \"Do you really want to delete collection type?\",\r\n                  })\r\n                ) {\r\n                  const deleteDocId = collections[editingCollectionIndex].docId;\r\n                  let res = await deleteCollectionType(deleteDocId);\r\n                  if (!res.error) {\r\n                    onClose();\r\n                    onDelete(deleteDocId);\r\n                    notify(\"Collection type deleted!\", { variant: \"success\" });\r\n                  } else {\r\n                    notify(\"Collection type was not deleted\", { variant: \"error\" });\r\n                  }\r\n                  onClose();\r\n                }\r\n              }}\r\n              className=\"border-2 border-red-500 text-red-500 mb-10 hover:bg-red-500 hover:text-white\"\r\n            >\r\n              Delete collection\r\n            </Button>\r\n          ) : null}\r\n\r\n          <div className=\"flex justify-between\">\r\n            <Button onClick={() => onClose()} className=\"bg-blue-300 hover:bg-blue-400 text-white\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              disabled={isSubmitting}\r\n              onClick={() => handleSubmit()}\r\n              className=\"bg-orange-300 hover:bg-orange-301\"\r\n            >\r\n              {isSubmitting ? \"Loading...\" : \"Submit\"}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewCollection;\r\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSubcollection(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 19 19\",\n    fill: \"white\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.570312 0.778809H6.57031V4.77881H0.570312V0.778809ZM12.5703 7.77881H18.5703V11.7788H12.5703V7.77881ZM12.5703 14.7788H18.5703V18.7788H12.5703V14.7788ZM10.5703 10.7788H4.57031V15.7788H10.5703V17.7788H4.57031H2.57031V6.77881H4.57031V8.77881H10.5703V10.7788Z\",\n    fill: \"white\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSubcollection);\nexport default __webpack_public_path__ + \"static/media/subcollection.68a53ff9.svg\";\nexport { ForwardRef as ReactComponent };","const String: React.FC = () => {\r\n  return (\r\n    <div className=\"w-42px rounded h-28px bg-orange-300 text-center leading-28px text-xs font-medium\">\r\n      Ab\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default String;\r\n","const Number: React.FC = () => {\r\n  return (\r\n    <div className=\"w-42px rounded h-28px bg-orange-300 text-center leading-28px text-xs font-medium\">\r\n      123\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Number;\r\n","const Map: React.FC = () => {\r\n  return (\r\n    <div className=\"w-42px rounded h-28px bg-orange-300 text-center leading-28px text-xs font-medium\">\r\n      {\"{ }\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","const Array: React.FC = () => {\r\n  return (\r\n    <div className=\"w-42px rounded h-28px bg-orange-300 text-center leading-28px text-xs font-medium\">\r\n      [ ]\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Array;\r\n","import ToggleOnOutlinedIcon from \"@material-ui/icons/ToggleOnOutlined\";\r\n\r\nconst Boolean: React.FC = () => {\r\n  return (\r\n    <div className=\"w-42px rounded h-28px bg-orange-300 text-center leading-28px text-xs font-medium\">\r\n      <ToggleOnOutlinedIcon fontSize=\"inherit\" className=\"text-lg\"></ToggleOnOutlinedIcon>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Boolean;\r\n","import CalendarTodayOutlinedIcon from \"@material-ui/icons/CalendarTodayOutlined\";\r\n\r\nconst Boolean: React.FC = () => {\r\n  return (\r\n    <div className=\"w-42px rounded h-28px bg-orange-300 text-center leading-28px text-xs font-medium\">\r\n      <CalendarTodayOutlinedIcon\r\n        fontSize=\"inherit\"\r\n        className=\"text-base\"\r\n      ></CalendarTodayOutlinedIcon>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Boolean;\r\n","import PanoramaOutlinedIcon from \"@material-ui/icons/PanoramaOutlined\";\r\n\r\nconst Media: React.FC = () => {\r\n  return (\r\n    <div className=\"w-42px rounded h-28px bg-blue-300 text-white text-center leading-28px text-xs font-medium\">\r\n      <PanoramaOutlinedIcon fontSize=\"inherit\" className=\"text-base\"></PanoramaOutlinedIcon>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Media;\r\n","import NotesIcon from \"@material-ui/icons/Notes\";\r\n\r\nconst Media: React.FC = () => {\r\n  return (\r\n    <div className=\"w-42px rounded h-28px bg-blue-300 text-white text-center leading-28px text-xs font-medium\">\r\n      <NotesIcon fontSize=\"inherit\" className=\"text-base\"></NotesIcon>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Media;\r\n","const Boolean: React.FC = () => {\r\n  return (\r\n    <div className=\"w-42px rounded h-28px bg-blue-300 text-center text-white leading-28px text-xs font-medium\">\r\n      JSON\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Boolean;\r\n","import ListRounded from \"@material-ui/icons/ListRounded\";\r\n\r\nconst Enum: React.FC = () => {\r\n  return (\r\n    <div className=\"w-42px rounded h-28px bg-blue-300 text-center text-white leading-28px text-xs font-medium\">\r\n      <ListRounded fontSize=\"inherit\" className=\"text-xl\"></ListRounded>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Enum;\r\n","import VpnKeyRounded from \"@material-ui/icons/VpnKeyRounded\";\r\n\r\nconst Password: React.FC = () => {\r\n  return (\r\n    <div className=\"w-42px rounded h-28px bg-blue-300 text-white text-center leading-28px text-xs font-medium\">\r\n      <VpnKeyRounded fontSize=\"inherit\" className=\"text-base\"></VpnKeyRounded>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Password;\r\n","import Link from \"@material-ui/icons/Link\";\r\n\r\nconst Relation: React.FC = () => {\r\n  return (\r\n    <div className=\"w-42px rounded h-28px bg-blue-300 text-white text-center leading-28px text-xs font-medium\">\r\n      <Link fontSize=\"inherit\" className=\"text-xl\"></Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Relation;\r\n","import String from \"./String\";\r\nimport Number from \"./Number\";\r\nimport Map from \"./Map\";\r\nimport Array from \"./Array\";\r\nimport Boolean from \"./Boolean\";\r\nimport Date from \"./Date\";\r\nimport Media from \"./Media\";\r\nimport RichText from \"./RichText\";\r\nimport Json from \"./Json\";\r\nimport Enum from \"./Enum\";\r\nimport Password from \"./Password\";\r\nimport Relation from \"./Relation\";\r\nimport Subcollection from \"./Subcollection\";\r\n\r\nconst fieldTypes = [\r\n  { type: \"string\", Badge: String },\r\n  { type: \"number\", Badge: Number },\r\n  { type: \"map\", Badge: Map },\r\n  { type: \"array\", Badge: Array },\r\n  { type: \"boolean\", Badge: Boolean },\r\n  { type: \"date\", Badge: Date },\r\n  { type: \"media\", Badge: Media },\r\n  { type: \"rich-text\", Badge: RichText },\r\n  { type: \"json\", Badge: Json },\r\n  { type: \"enum\", Badge: Enum },\r\n  { type: \"password\", Badge: Password },\r\n  { type: \"relation\", Badge: Relation },\r\n  { type: \"collection\", Badge: Subcollection },\r\n];\r\n\r\nexport default fieldTypes;\r\n","import { ReactComponent as SubColIcon } from \"assets/subcollection.svg\";\r\n\r\nconst Media: React.FC = () => {\r\n  return (\r\n    <div className=\"flex-shrink-0 flex w-42px rounded h-28px bg-blue-300 text-white text-center leading-28px text-xs font-medium\">\r\n      <SubColIcon className=\"m-auto\"></SubColIcon>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Media;\r\n","import FieldTypes from \"components/fieldTypes\";\r\nimport React from \"react\";\r\nimport { FieldInputType } from \"api/collectionTypes\";\r\nimport Button from \"components/Button\";\r\n\r\nexport interface SelectFieldTypeProps {\r\n  proceed: Function;\r\n}\r\n\r\nconst SelectFieldType: React.FC<SelectFieldTypeProps> = ({ proceed }) => {\r\n  const [fieldType, setFieldType] = React.useState(\"string\" as FieldInputType);\r\n\r\n  return (\r\n    <div className=\"fixed left-0 top-0 w-full h-full flex overflow-auto bg-black bg-opacity-40\">\r\n      <div className=\"m-auto rounded bg-white p-9 max-w-600px w-full\">\r\n        <div className=\"text-22px font-medium mb-9\">Select field type</div>\r\n        <div className=\"mb-12\">\r\n          <div className=\"flex flex-wrap\">\r\n            {FieldTypes.map((x, i) => (\r\n              <div\r\n                onClick={() => setFieldType(x.type as FieldInputType)}\r\n                key={`field-type-${i}`}\r\n                className={`flex md:w-1/3 sm:w-1/2 w-full select-none p-4 border-4 border-solid border-white items-center cursor-pointer rounded  ${\r\n                  fieldType === x.type\r\n                    ? \"border-orange-300\"\r\n                    : \"hover:border-gray-300 hover:bg-gray-300\"\r\n                }`}\r\n              >\r\n                <x.Badge></x.Badge>\r\n                <span className=\"capitalize ml-2 line-clamp-1\">{x.type.replace(\"-\", \" \")}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"flex justify-between\">\r\n          <Button\r\n            onClick={() => {\r\n              proceed(false);\r\n            }}\r\n            className=\"bg-blue-300 hover:bg-blue-400 text-white\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              proceed(fieldType);\r\n            }}\r\n            className=\"bg-orange-300 hover:bg-orange-301\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectFieldType;\r\n","import { callComponent } from \"api/callComponent\";\r\nimport { FieldInputType, FieldType } from \"api/collectionTypes\";\r\nimport SelectFieldType, { SelectFieldTypeProps } from \"./SelectFieldType\";\r\nimport SpecifyFieldDetails, { SpecifyFieldDetailsProps } from \"./SpecifyFieldDetails\";\r\n\r\nexport const getCollectionField = async ({\r\n  editableField,\r\n  existingFieldNames,\r\n}: {\r\n  editableField?: FieldType;\r\n  existingFieldNames?: string[];\r\n}) => {\r\n  let res = editableField\r\n    ? editableField.type\r\n    : await callComponent<SelectFieldTypeProps, FieldInputType | boolean>({\r\n        Component: SelectFieldType,\r\n        props: {},\r\n      });\r\n\r\n  if (typeof res === \"boolean\") return null;\r\n\r\n  const fieldType = res;\r\n  let res1 = await callComponent<SpecifyFieldDetailsProps, Omit<FieldType, \"type\"> | boolean>({\r\n    Component: SpecifyFieldDetails,\r\n    props: {\r\n      fieldType,\r\n      editableField,\r\n      existingFieldNames,\r\n    },\r\n  });\r\n  if (typeof res1 === \"boolean\") return null;\r\n\r\n  return { ...res1, type: res };\r\n};\r\n","import React from \"react\";\r\nimport Input from \"components/GrayInput\";\r\nimport Button from \"components/Button\";\r\nimport { FieldInputType, FieldType } from \"api/collectionTypes\";\r\nimport FieldTypes from \"components/fieldTypes\";\r\nimport Select from \"components/Select\";\r\nimport { ReactComponent as OneToOneIcon } from \"assets/one-to-one.svg\";\r\nimport { ReactComponent as OneToManyIcon } from \"assets/one-to-many.svg\";\r\nimport Label from \"components/Label\";\r\nimport ToupleInput from \"components/ToupleInput\";\r\nimport { useFormik } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"store\";\r\nimport AddCircleOutlineRounded from \"@material-ui/icons/AddCircleOutlineRounded\";\r\nimport IconButton from \"components/IconButton\";\r\nimport EditOutlined from \"@material-ui/icons/EditOutlined\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport Delete from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport { getCollectionField } from \"./GetCollectionField\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { reorder } from \".\";\r\n\r\nexport interface SpecifyFieldDetailsProps {\r\n  editableField?: FieldType;\r\n  existingFieldNames?: string[];\r\n  fieldType: FieldInputType;\r\n  proceed: Function;\r\n}\r\n\r\nconst SpecifyFieldDetails: React.FC<SpecifyFieldDetailsProps> = ({\r\n  editableField,\r\n  existingFieldNames,\r\n  proceed,\r\n  fieldType,\r\n}) => {\r\n  const initialValues = {\r\n    id: \"\",\r\n    mediaSingle: false,\r\n    enumOptions: [] as Array<string>,\r\n    relatedCollectionTypeDocId: \"\",\r\n    relationOneToOne: true,\r\n    displayOnTable: true,\r\n    stringLong: false,\r\n    collectionFields: [] as FieldType[],\r\n  };\r\n  const { values, errors, handleChange, handleSubmit, setFieldValue, submitCount } = useFormik({\r\n    onSubmit: (vals) => {\r\n      proceed(vals);\r\n    },\r\n    initialValues: editableField ? { ...initialValues, ...editableField } : initialValues,\r\n    validate: (vals) => {\r\n      const errors: any = {};\r\n\r\n      if (!vals.id) {\r\n        errors.id = \"Field name is required\";\r\n      } else if (existingFieldNames && existingFieldNames.findIndex((x) => x === vals.id) > -1) {\r\n        errors.id = \"There is field with the same name\";\r\n      }\r\n\r\n      if (fieldType === \"enum\" && vals.enumOptions.length < 2) {\r\n        errors.enumOptions = \"Enum requires at least two options\";\r\n      }\r\n\r\n      if (fieldType === \"relation\" && vals.relatedCollectionTypeDocId === \"\") {\r\n        errors.relatedCollectionTypeDocId = \"Select related collection\";\r\n      }\r\n\r\n      return errors;\r\n    },\r\n  });\r\n  const [enumOption, setEnumOption] = React.useState(\"\");\r\n\r\n  const SelectedFieldType = FieldTypes.find((x) => x.type === fieldType);\r\n  const collections = useSelector((state: RootState) => state.collectionTypes);\r\n\r\n  const onDragEnd = async (result: any) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    const fields = reorder(values.collectionFields, result.source.index, result.destination.index);\r\n    setFieldValue(\"collectionFields\", fields);\r\n  };\r\n\r\n  const addEnumOption = () => {\r\n    if (enumOption) {\r\n      let arr = [...values.enumOptions];\r\n      arr.push(enumOption);\r\n      setFieldValue(\"enumOptions\", arr);\r\n      setEnumOption(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed left-0 top-0 w-full h-full flex overflow-auto bg-black bg-opacity-40\">\r\n      <div className=\"m-auto rounded bg-white p-9 max-w-600px w-full\">\r\n        <div className=\"text-22px font-medium mb-9 flex items-center\">\r\n          {SelectedFieldType ? <SelectedFieldType.Badge></SelectedFieldType.Badge> : null}\r\n          <span className=\"ml-3\">\r\n            {editableField ? \"Edit\" : \"Add\"} {SelectedFieldType ? SelectedFieldType.type : \"\"} field\r\n          </span>\r\n        </div>\r\n        <div className=\"mb-9\">\r\n          <div className=\"mb-2\">Field name</div>\r\n          <Input\r\n            error={submitCount > 0 ? errors.id : \"\"}\r\n            value={values.id}\r\n            name=\"id\"\r\n            onChange={handleChange}\r\n            onKeyDown={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                handleSubmit();\r\n              }\r\n            }}\r\n          ></Input>\r\n        </div>\r\n\r\n        {fieldType === \"media\" ? (\r\n          <ToupleInput\r\n            options={[\r\n              { value: false, label: \"Multiple media\" },\r\n              { value: true, label: \"Single media\" },\r\n            ]}\r\n            value={values.mediaSingle}\r\n            setValue={(val) => setFieldValue(\"mediaSingle\", val)}\r\n          ></ToupleInput>\r\n        ) : fieldType === \"enum\" ? (\r\n          <div className=\"mb-10\">\r\n            <div className=\"mb-2\">Options</div>\r\n            <div className=\"flex flex-wrap\">\r\n              {values.enumOptions.map((x, i) => (\r\n                <div\r\n                  key={`enum-option-${i}`}\r\n                  className=\"bg-gray-300 rounded flex items-center px-3 h-34px mr-3 mb-3\"\r\n                >\r\n                  <div className=\"mr-4\">{x}</div>\r\n                  <div\r\n                    className=\"cursor-pointer text-xs\"\r\n                    onClick={() => {\r\n                      let arr = [...values.enumOptions];\r\n                      arr.splice(i, 1);\r\n                      setFieldValue(\"enumOptions\", arr);\r\n                    }}\r\n                  >\r\n                    ✕\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"flex\">\r\n              <Input\r\n                className=\"mr-3\"\r\n                error={submitCount > 0 ? errors.enumOptions?.toString() : \"\"}\r\n                type=\"text\"\r\n                value={enumOption}\r\n                onChange={(e) => setEnumOption(e.target.value)}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    addEnumOption();\r\n                  }\r\n                }}\r\n              ></Input>\r\n              <Button onClick={addEnumOption} className=\"bg-orange-300 hover:bg-orange-301\">\r\n                Add option\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        ) : fieldType === \"relation\" ? (\r\n          <div className=\"mb-10\">\r\n            <div className=\"mb-9\">\r\n              <Label\r\n                error={submitCount > 0 ? errors.relatedCollectionTypeDocId : \"\"}\r\n                className=\"mb-2\"\r\n              >\r\n                Related collection\r\n              </Label>\r\n              <Select\r\n                options={[\r\n                  { value: \"\", label: \"Select\" },\r\n                  ...collections.map((c) => ({ label: c.id, value: c.docId })),\r\n                ]}\r\n                value={values.relatedCollectionTypeDocId}\r\n                onChange={(e) => setFieldValue(\"relatedCollectionTypeDocId\", e.target.value)}\r\n              ></Select>\r\n            </div>\r\n            <div className=\"mb-2\">Relation type</div>\r\n            <ToupleInput\r\n              value={values.relationOneToOne}\r\n              setValue={(val) => setFieldValue(\"relationOneToOne\", val)}\r\n              options={[\r\n                { value: true, label: \"One to one\", icon: OneToOneIcon },\r\n                { value: false, label: \"One to many\", icon: OneToManyIcon },\r\n              ]}\r\n            ></ToupleInput>\r\n          </div>\r\n        ) : fieldType === \"string\" ? (\r\n          <ToupleInput\r\n            value={values.stringLong}\r\n            setValue={(val) => setFieldValue(\"stringLong\", val)}\r\n            options={[\r\n              { label: \"Short text\", value: false },\r\n              { label: \"Long text\", value: true },\r\n            ]}\r\n          ></ToupleInput>\r\n        ) : fieldType === \"collection\" ? (\r\n          <div className=\"mb-9\">\r\n            <div className=\"flex mb-2\">\r\n              <div className=\"mr-2\">Fields</div>\r\n              <AddCircleOutlineRounded\r\n                className=\"cursor-pointer\"\r\n                onClick={async () => {\r\n                  const field = await getCollectionField({\r\n                    existingFieldNames: values.collectionFields.map((x) => x.id),\r\n                  });\r\n                  if (!field) return;\r\n                  const fields = [...values.collectionFields, field];\r\n                  setFieldValue(\"collectionFields\", fields);\r\n                }}\r\n              ></AddCircleOutlineRounded>\r\n            </div>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"droppable-sub\">\r\n                {(provided, snapshot) => (\r\n                  <div\r\n                    className=\" max-h-247px overflow-auto\"\r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                  >\r\n                    {values.collectionFields.map((x, i) => {\r\n                      const Badge = FieldTypes.find((t) => t.type === x.type)?.Badge;\r\n                      return (\r\n                        <Draggable key={x.id} draggableId={x.id + 1} index={i}>\r\n                          {(provided, snapshot) => (\r\n                            <div\r\n                              key={`field-${i}`}\r\n                              className=\"rounded bg-gray-300 px-3 py-2 flex mb-2 items-center\"\r\n                              ref={provided.innerRef}\r\n                              {...provided.draggableProps}\r\n                              {...provided.dragHandleProps}\r\n                            >\r\n                              <div className=\"line-clamp-1 w-5/12 px-3\">{x.id}</div>\r\n                              <div className=\"flex w-4/12 flex-shrink-0\">\r\n                                {Badge ? <Badge></Badge> : null}\r\n                                <span className=\"ml-3 hidden sm:block line-clamp-1\">{x.type}</span>\r\n                              </div>\r\n                              <div className=\"flex items-center flex-grow justify-end\">\r\n                                <IconButton\r\n                                  variant=\"transparent\"\r\n                                  onClick={async () => {\r\n                                    const field = await getCollectionField({\r\n                                      editableField: x,\r\n                                      existingFieldNames: values.collectionFields\r\n                                        .map((f) => f.id)\r\n                                        .filter((f) => f !== x.id),\r\n                                    });\r\n\r\n                                    if (!field) return;\r\n\r\n                                    let fields = [...values.collectionFields];\r\n                                    fields[i] = { ...x, ...field };\r\n                                    setFieldValue(\"collectionFields\", fields);\r\n                                  }}\r\n                                >\r\n                                  <EditOutlined fontSize=\"small\"></EditOutlined>\r\n                                </IconButton>\r\n                                <IconButton\r\n                                  variant=\"transparent\"\r\n                                  onClick={async () => {\r\n                                    let res = await confirm({\r\n                                      confirmation: \"Do you really want to delete the field?\",\r\n                                    });\r\n                                    if (res) {\r\n                                      const fields = [...values.collectionFields];\r\n                                      fields.splice(i, 1);\r\n                                      setFieldValue(\"collectionFields\", fields);\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  <Delete fontSize=\"small\"></Delete>\r\n                                </IconButton>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </Draggable>\r\n                      );\r\n                    })}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n          </div>\r\n        ) : null}\r\n        <div className=\"flex justify-between\">\r\n          <Button\r\n            onClick={() => {\r\n              proceed(false);\r\n            }}\r\n            className=\"bg-blue-300 hover:bg-blue-400 text-white\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            onClick={() => handleSubmit()}\r\n            className=\"bg-orange-300 hover:bg-orange-301\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpecifyFieldDetails;\r\n","import Modal from \"@material-ui/core/Modal\";\r\nimport { CollectionType, FieldType } from \"api/collectionTypes\";\r\n\r\nexport interface InterfaceModalProps {\r\n  open: boolean;\r\n  collectionType?: CollectionType;\r\n  onClose: () => void;\r\n}\r\n\r\nconst getGap = (count: number) => {\r\n  return new Array(count).fill(0).reduce((a, b) => a + \" \", \"\");\r\n};\r\n\r\nconst getType = (type: FieldType, ident: number, identStep: number = 3): string => {\r\n  const docType = (fields: FieldType[], multiple: boolean = false) => {\r\n    return fields.length\r\n      ? `{\\n${fields.reduce(\r\n          (a, b) =>\r\n            a +\r\n            `${getGap(ident)}${b.id.includes(\" \") ? `\"${b.id}\"` : b.id}: ${getType(\r\n              b,\r\n              ident + identStep\r\n            )};\\n`,\r\n          \"\"\r\n        )}${getGap(ident - identStep)}${multiple ? \"}[]\" : \"}\"}`\r\n      : multiple\r\n      ? \"any[]\"\r\n      : \"null\";\r\n  };\r\n\r\n  const types = {\r\n    password: () => \"string\",\r\n    string: () => \"string\",\r\n    \"rich-text\": () => \"string\",\r\n    json: () => \"object\",\r\n    map: () => \"object\",\r\n    array: () => \"any[]\",\r\n    media: (x: FieldType) => (x.mediaSingle ? \"string\" : \"string[]\"),\r\n    date: () => \"string\",\r\n    enum: () => \"string[]\",\r\n    number: () => \"number\",\r\n    boolean: () => \"boolean\",\r\n    relation: (x: FieldType) => (x.relationOneToOne ? \"string\" : \"string[]\"),\r\n    collection: (x: FieldType) => docType(x.collectionFields, true),\r\n    document: (x: FieldType) => docType(x.documentFields),\r\n    script: () => \"object\",\r\n    \"script-V2\": () => \"object\",\r\n  };\r\n  return `${types[type.type](type)}`;\r\n};\r\n\r\nexport const generateInterface = (colType: CollectionType) => {\r\n  const docType: any = {\r\n    type: \"document\",\r\n    documentFields: colType.fields,\r\n  };\r\n\r\n  const intface = `interface Document ${getType(docType, 3)}`;\r\n  return intface;\r\n};\r\n\r\nconst InterfaceModal: React.FC<InterfaceModalProps> = ({ open, collectionType, onClose }) => {\r\n  return !collectionType ? null : (\r\n    <Modal open={open} hideBackdrop>\r\n      <div\r\n        className=\"fixed left-0 top-0 w-full h-full overflow-auto flex bg-black bg-opacity-40\"\r\n        onClick={onClose}\r\n      >\r\n        <div\r\n          className=\"bg-white p-7 m-auto rounded-md md:max-w-lg max-w-sm w-full\"\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          <div className=\"mb-7 text-22px capitalize font-medium\">\r\n            {collectionType.name} interface\r\n          </div>\r\n          <div className=\"rounded bg-gray-300 p-7 overflow-auto\">\r\n            <pre>{generateInterface(collectionType)}</pre>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default InterfaceModal;\r\n","import Button from \"components/Button\";\r\nimport { IoAdd } from \"react-icons/io5\";\r\nimport React from \"react\";\r\nimport {\r\n  updateCollectionType,\r\n  FieldInputType,\r\n  FieldType,\r\n  CollectionType,\r\n} from \"api/collectionTypes\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"store\";\r\nimport Edit from \"@material-ui/icons/EditRounded\";\r\nimport EditOutlined from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport CollectionModal from \"./CollectionModal\";\r\nimport FieldTypes from \"components/fieldTypes\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport { useNotify } from \"components/NotificationsProvider\";\r\nimport SpecifyFieldDetails, { SpecifyFieldDetailsProps } from \"./SpecifyFieldDetails\";\r\nimport SelectFieldType, { SelectFieldTypeProps } from \"./SelectFieldType\";\r\nimport { callComponent } from \"api/callComponent\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport DragIndicatorRounded from \"@material-ui/icons/DragIndicatorRounded\";\r\nimport IconButton from \"components/IconButton\";\r\nimport Select from \"components/Select\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport InterfaceModal from \"./InterfaceModal\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport EmptyScreen from \"components/EmptyScreen\";\r\n\r\nexport interface CollectionsBuilderProps {}\r\n\r\nexport const reorder = (list: any[], startIndex: number, endIndex: number) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst CollectionsBuilder: React.FC<CollectionsBuilderProps> = () => {\r\n  const [collectionModalOpen, setCollectionModalOpen] = React.useState(false as boolean);\r\n  const dispatch = useDispatch();\r\n  const notify = useNotify();\r\n  const [editingCollectionIndex, setEditingCollectionIndex] = React.useState(-1);\r\n  const [selectedCollection, setSelectedCollection] = React.useState(0);\r\n  const [interfaceColType, setInterfaceColType] = React.useState<CollectionType>();\r\n\r\n  const { collections } = useSelector((state: RootState) => ({\r\n    collections: state.collectionTypes,\r\n  }));\r\n\r\n  const editField = async (fieldType: FieldInputType, selectedField: number) => {\r\n    const collection = collections[selectedCollection];\r\n    let res = await callComponent<SpecifyFieldDetailsProps, FieldType | boolean>({\r\n      Component: SpecifyFieldDetails,\r\n      props: { fieldType, editableField: collection.fields[selectedField] },\r\n    });\r\n\r\n    if (!(typeof res === \"boolean\")) {\r\n      let newFields = JSON.parse(JSON.stringify(collection.fields));\r\n      newFields[selectedField] = { ...res };\r\n      dispatch({ type: \"UPDATE_COLLECTION_FIELDS\", payload: newFields, docId: collection.docId });\r\n      let res1 = await updateCollectionType(collection.docId, {\r\n        ...collection,\r\n        fields: newFields,\r\n      });\r\n      if (!res1.error) {\r\n        return { success: true };\r\n      }\r\n    }\r\n\r\n    return { success: false };\r\n  };\r\n\r\n  const addField = async () => {\r\n    const collection = collections[selectedCollection];\r\n    let res = await callComponent<SelectFieldTypeProps, FieldInputType | boolean>({\r\n      Component: SelectFieldType,\r\n      props: {},\r\n    });\r\n\r\n    if (!(typeof res === \"boolean\")) {\r\n      const fieldType = res;\r\n      let res1 = await callComponent<SpecifyFieldDetailsProps, Omit<FieldType, \"type\"> | boolean>({\r\n        Component: SpecifyFieldDetails,\r\n        props: {\r\n          fieldType,\r\n          existingFieldNames: collection.fields.map((x) => x.id),\r\n        },\r\n      });\r\n      if (!(typeof res1 === \"boolean\")) {\r\n        const newFields = [...collection.fields, { type: fieldType, ...res1 }];\r\n        dispatch({ type: \"UPDATE_COLLECTION_FIELDS\", payload: newFields, docId: collection.docId });\r\n        let res2 = await updateCollectionType(collection.docId, {\r\n          ...collection,\r\n          fields: newFields,\r\n        });\r\n        if (!res2.error) {\r\n          notify(\"Field added!\", { variant: \"success\" });\r\n          return { success: true };\r\n        } else {\r\n          notify(\"Field was not added\", { variant: \"error\" });\r\n        }\r\n      }\r\n    }\r\n\r\n    return { success: false };\r\n  };\r\n\r\n  const onDragEnd = async (result: any) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const fields = reorder(\r\n      collections[selectedCollection].fields,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n\r\n    const collection = collections[selectedCollection];\r\n    dispatch({ type: \"UPDATE_COLLECTION_FIELDS\", payload: fields, docId: collection.docId });\r\n    updateCollectionType(collection.docId, {\r\n      ...collection,\r\n      fields,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex flex-wrap justify-between mb-6\">\r\n        <div className=\"font-medium text-36px leading-none mb-4 mr-4\">Collections</div>\r\n        <Button\r\n          onClick={() => setCollectionModalOpen(true)}\r\n          className=\"bg-orange-300 hover:bg-orange-301 mb-4\"\r\n        >\r\n          <div className=\"flex items-center\">\r\n            <IoAdd className=\"mr-3\" size={18}></IoAdd>\r\n            <span>Add collection</span>\r\n          </div>\r\n        </Button>\r\n      </div>\r\n      {!collections.length ? (\r\n        <EmptyScreen\r\n          buttonTitle=\"Create\"\r\n          title=\"There are no collections\"\r\n          onCreate={() => setCollectionModalOpen(true)}\r\n        ></EmptyScreen>\r\n      ) : (\r\n        <div className=\"flex flex-wrap lg:flex-nowrap\">\r\n          <div className=\"max-w-192px mb-3 mr-4 block lg:hidden w-full\">\r\n            <Select\r\n              onChange={(e) => setSelectedCollection(parseInt(e.target.value))}\r\n              value={selectedCollection}\r\n              options={collections.map((x, i) => ({ label: x.name, value: i }))}\r\n            ></Select>\r\n          </div>\r\n          <SimpleBar\r\n            className=\"max-w-192px w-full flex-shrink-0 mr-4 hidden lg:block max-h-96 scrollbar-dark pr-3\"\r\n            autoHide={false}\r\n          >\r\n            {collections.map((x, i) => (\r\n              <div\r\n                onClick={() => setSelectedCollection(i)}\r\n                key={`collection-${i}`}\r\n                className={`mb-1 capitalize truncate cursor-pointer ${\r\n                  selectedCollection === i ? \"bg-orange-300\" : \"hover:bg-gray-300\"\r\n                } rounded h-34px leading-34px px-3`}\r\n              >\r\n                {x.name}\r\n              </div>\r\n            ))}\r\n          </SimpleBar>\r\n\r\n          <div className=\"lg:flex-grow w-full rounded-lg bg-gray-300 p-7\">\r\n            <div className=\"flex justify-between mb-3 flex-wrap\">\r\n              <div className=\"font-medium text-22px capitalize mb-3 mr-3\">\r\n                {selectedCollection < collections.length\r\n                  ? collections[selectedCollection].name\r\n                  : \"\"}\r\n                <Edit\r\n                  onClick={() => {\r\n                    setEditingCollectionIndex(selectedCollection);\r\n                    setCollectionModalOpen(true);\r\n                  }}\r\n                  className=\"ml-3 text-lg cursor-pointer\"\r\n                  fontSize=\"inherit\"\r\n                ></Edit>\r\n              </div>\r\n              <div className=\"flex flex-wrap\">\r\n                <Button\r\n                  onClick={() => setInterfaceColType(collections[selectedCollection])}\r\n                  noMinWidth\r\n                  className=\"bg-blue-300 hover:bg-blue-400 text-white mr-3 mb-3\"\r\n                >\r\n                  <div className=\"flex items-center\">\r\n                    <Visibility className=\"mr-3\"></Visibility>\r\n                    Interface\r\n                  </div>\r\n                </Button>\r\n                <Button\r\n                  onClick={async () => {\r\n                    addField();\r\n                  }}\r\n                  className=\" bg-blue-300 hover:bg-blue-400 text-white mb-3\"\r\n                >\r\n                  <div className=\"flex items-center\">\r\n                    <IoAdd className=\"mr-3\" size={18}></IoAdd>\r\n                    <span>Add new field</span>\r\n                  </div>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"-mr-4\">\r\n              <DragDropContext onDragEnd={onDragEnd}>\r\n                <Droppable droppableId=\"droppable\">\r\n                  {(provided, snapshot) => (\r\n                    <SimpleBar\r\n                      className=\"overflow-auto w-full sm:max-h-30vw max-h-96 scrollbar-dark pr-4\"\r\n                      autoHide={false}\r\n                    >\r\n                      <div\r\n                        className=\"min-w-430px\"\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef as any}\r\n                      >\r\n                        {selectedCollection < collections.length\r\n                          ? collections[selectedCollection].fields.map((x, i) => {\r\n                              const Badge = FieldTypes.find((t) => t.type === x.type)?.Badge;\r\n                              return (\r\n                                <Draggable key={x.id} draggableId={x.id} index={i}>\r\n                                  {(provided, snapshot) => (\r\n                                    <div\r\n                                      key={`field-${i}`}\r\n                                      className=\"rounded bg-white px-3 py-2 flex mb-2 items-center\"\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      {...provided.dragHandleProps}\r\n                                    >\r\n                                      <DragIndicatorRounded className=\"text-gray-400\" />\r\n                                      <div className=\"line-clamp-1 w-5/12 px-3\">{x.id}</div>\r\n                                      <div className=\"flex w-4/12 flex-shrink-0\">\r\n                                        {Badge ? <Badge></Badge> : null}\r\n                                        <span className=\"ml-3 hidden sm:block line-clamp-1\">\r\n                                          {x.type}\r\n                                        </span>\r\n                                      </div>\r\n                                      {x.isDefault ? null : (\r\n                                        <div className=\"flex items-center flex-grow justify-end\">\r\n                                          <IconButton\r\n                                            variant=\"transparent\"\r\n                                            onClick={() => {\r\n                                              editField(x.type, i);\r\n                                            }}\r\n                                          >\r\n                                            <EditOutlined fontSize=\"small\"></EditOutlined>\r\n                                          </IconButton>\r\n                                          <IconButton\r\n                                            variant=\"transparent\"\r\n                                            onClick={async () => {\r\n                                              let res = await confirm({\r\n                                                confirmation:\r\n                                                  \"Do you really want to delete the field?\",\r\n                                              });\r\n                                              if (res) {\r\n                                                let updatedCollection = JSON.parse(\r\n                                                  JSON.stringify(collections[selectedCollection])\r\n                                                );\r\n                                                updatedCollection.fields.splice(i, 1);\r\n                                                dispatch({\r\n                                                  type: \"UPDATE_COLLECTION_FIELDS\",\r\n                                                  payload: updatedCollection.fields,\r\n                                                  docId: updatedCollection.docId,\r\n                                                });\r\n\r\n                                                updateCollectionType(\r\n                                                  collections[selectedCollection].docId,\r\n                                                  updatedCollection\r\n                                                );\r\n                                              }\r\n                                            }}\r\n                                          >\r\n                                            <DeleteIcon fontSize=\"small\"></DeleteIcon>\r\n                                          </IconButton>\r\n                                        </div>\r\n                                      )}\r\n                                    </div>\r\n                                  )}\r\n                                </Draggable>\r\n                              );\r\n                            })\r\n                          : null}\r\n                        {provided.placeholder}\r\n                      </div>\r\n                    </SimpleBar>\r\n                  )}\r\n                </Droppable>\r\n              </DragDropContext>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <CollectionModal\r\n        editingCollectionIndex={editingCollectionIndex}\r\n        collections={collections}\r\n        onCreate={(val) => dispatch({ type: \"ADD_COLLECTION_TYPE\", payload: val })}\r\n        onUpdate={(val) => {\r\n          dispatch({ type: \"UPDATE_COLLECTION_TYPE\", payload: val, docId: val.docId });\r\n        }}\r\n        onDelete={(docId) => {\r\n          setSelectedCollection(0);\r\n          setEditingCollectionIndex(-1);\r\n          dispatch({ type: \"DELETE_COLLECTION_TYPE\", payload: docId });\r\n        }}\r\n        open={collectionModalOpen}\r\n        onClose={() => {\r\n          setCollectionModalOpen(false);\r\n          setEditingCollectionIndex(-1);\r\n        }}\r\n      ></CollectionModal>\r\n      <InterfaceModal\r\n        onClose={() => setInterfaceColType(undefined)}\r\n        open={interfaceColType ? true : false}\r\n        collectionType={interfaceColType}\r\n      ></InterfaceModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CollectionsBuilder;\r\n"],"sourceRoot":""}