{"version":3,"sources":["components/Select.tsx","api/callComponent.tsx","components/Label.tsx","components/TableElements/CreateIndex.tsx","hooks/useFetch.ts","components/TableElements/CollectionTable.tsx","components/TableElements/AddFilter.tsx","components/TooltipChild.tsx","components/TableElements/FilesCell/MediaField.tsx","components/TableElements/FilesCell/index.tsx","../node_modules/@material-ui/icons/EditRounded.js","components/SettingsPage.tsx","pages/Webhooks/WebhookModal.tsx","pages/Webhooks/index.tsx"],"names":["WarningIcon","React","forwardRef","props","ref","className","size","Select","options","error","groundColor","classNames","spellCheck","map","x","i","data-testid","value","label","title","placement","callComponent","Component","Promise","resolve","reject","wrapper","document","getElementById","appendChild","createElement","ReactDOM","render","store","proceed","val","unmountComponentAtNode","parentNode","removeChild","fontSize","Label","children","CreateIndexModal","url","onMouseDown","e","stopPropagation","Button","onClick","window","open","useFetch","collectionId","filters","orderBy","inView","useState","docs","setDocs","inViewRef","useRef","endReached","filterSortTriggered","notify","useNotify","loading","setLoading","abortController","AbortController","filterSortCounter","setFilterSortCounter","getOptions","useCallback","data","forEach","f","where","fieldId","operator","direction","length","startAfter","populateRef","onError","message","includes","split","variant","useEffect","current","a","triggeredBySortFilter","getCollection","signal","newData","prev","limit","fetcher","abort","Table","collectionType","onPick","blackList","singleSelect","valueFormatters","_filters","_onEdit","onEdit","hideFilters","history","useHistory","setFilters","fields","filter","field","displayOnTable","selected","setSelected","setOrderBy","endIsInView","setEndIsInView","id","onDeleteSelected","confirm","confirmation","deleteDocument","docId","doc","push","onOrder","undefined","selectHandler","checked","arr","index","findIndex","splice","formatValue","type","moment","format","toString","substring","AddFilter","onValue","hidden","disabled","autoHide","Checkbox","classes","root","onChange","select","target","j","mediaSingle","FilesCell","file","files","AddFilterModal","setOpen","useFormik","onSubmit","vals","resetForm","initialValues","validate","errors","Object","keys","values","handleChange","submitCount","handleSubmit","isSubmitting","style","maxWidth","name","onKeyDown","key","preventDefault","placeholder","TooltipChild","MediaField","src","Tooltip","arrow","alt","tooltip","backgroundImage","Files","Math","random","slice","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","_default","d","SettingsPage","memo","entity","enitityPlural","onAddEntity","entities","onSelectEntity","entityButtons","onInvokeEntityEdit","entityContent","selectedEntityId","search","setSearch","width","maxHeight","toLowerCase","find","events","methods","WebhookModal","initialValue","onClose","collectionTypeDocId","enableReinitialize","event","method","Modal","Input","COLLECTION_ID","Webhooks","collectionTypes","useSelector","state","webhookColType","modalOpen","setModalOpen","editWebhook","setEditWebhook","tableRefreshCounter","setTableRefreshCounter","setCollectionTypeDocId","colType","updateDocument","res","addDocument","CollectionTable"],"mappings":"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","file":"static/js/13.11b52532.chunk.js","sourcesContent":["import { IoAlertCircleOutline } from \"react-icons/io5\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport React, { SelectHTMLAttributes } from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <IoAlertCircleOutline className=\"text-red-FF0000\" size={20}></IoAlertCircleOutline>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport interface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n  options: { label: string; value: string | number }[];\r\n  error?: string | boolean;\r\n  groundColor: \"white\" | \"black\";\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({\r\n  className = \"\",\r\n  options,\r\n  error,\r\n  groundColor,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={`${className} relative flex items-center`}>\r\n      <select\r\n        className={classNames(\"px-3 h-full border-2 border-solid w-full rounded outline-none\", {\r\n          \"border-red-FF0000\": error,\r\n          \"focus:border-fireck-4\": !error,\r\n          \"border-gray-300 bg-gray-300\": groundColor === \"white\",\r\n          \"border-white bg-white\": groundColor === \"black\",\r\n        })}\r\n        {...props}\r\n        spellCheck={false}\r\n      >\r\n        {options.map((x, i) => (\r\n          <option data-testid={`select-option-${x.value}`} key={\"opt-\" + i} value={x.value}>\r\n            {x.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"store\";\r\nimport NotificationsProvider from \"components/NotificationsProvider\";\r\n\r\nexport interface CallableComponent<T> {\r\n  proceed: (v: T) => void;\r\n}\r\n\r\ninterface callComponentArgs<T> {\r\n  Component: React.FC<any>;\r\n  props: Omit<T, \"proceed\">;\r\n}\r\n\r\nexport function callComponent<T, RT>({ Component, props }: callComponentArgs<T>): Promise<RT> {\r\n  return new Promise((resolve, reject) => {\r\n    const wrapper = document.getElementById(\"root\")?.appendChild(document.createElement(\"div\"));\r\n\r\n    if (wrapper) {\r\n      ReactDOM.render(\r\n        <Provider store={store}>\r\n          <NotificationsProvider>\r\n            <Component\r\n              {...props}\r\n              proceed={(val: RT) => {\r\n                ReactDOM.unmountComponentAtNode(wrapper);\r\n                wrapper.parentNode?.removeChild(wrapper);\r\n                resolve(val);\r\n              }}\r\n            />\r\n          </NotificationsProvider>\r\n        </Provider>,\r\n        wrapper\r\n      );\r\n    }\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport ErrorRounded from \"@material-ui/icons/ErrorRounded\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport classNames from \"classnames\";\r\n\r\nexport interface LabelProps {\r\n  error?: string | undefined | null;\r\n  className?: string;\r\n  children: any;\r\n  groundColor: \"black\" | \"white\";\r\n}\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <ErrorRounded className=\"text-red-500 text-xl\" fontSize=\"inherit\"></ErrorRounded>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Label: React.FC<LabelProps> = ({ className = \"\", children, error, groundColor }) => {\r\n  return (\r\n    <div\r\n      className={classNames(`flex justify-between relative ${className}`, {\r\n        \"text-white\": groundColor === \"black\",\r\n        \"text-black\": groundColor === \"white\",\r\n      })}\r\n    >\r\n      <div>{children}</div>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import { callComponent } from \"api/callComponent\";\r\nimport Button from \"components/Button\";\r\n\r\nexport interface CreateIndexModalProps {\r\n  proceed: Function;\r\n  url: string;\r\n}\r\n\r\nconst CreateIndexModal: React.FC<CreateIndexModalProps> = ({ proceed, url }) => {\r\n  return (\r\n    <div\r\n      className=\"fixed left-0 top-0 w-full h-full flex bg-black bg-opacity-40\"\r\n      onMouseDown={() => proceed(false)}\r\n    >\r\n      <div onMouseDown={(e) => e.stopPropagation()} className=\"bg-white rounded p-7  m-auto\">\r\n        <div className=\"mb-12\">This query requires creating an index.</div>\r\n        <div className=\"flex justify-between\">\r\n          <Button\r\n            className=\"bg-fireck-5 hover:bg-fireck-5-hover min-w-unset text-white h-28px\"\r\n            onClick={() => proceed(false)}\r\n          >\r\n            Later\r\n          </Button>\r\n          <Button\r\n            className=\"bg-fireck-4 hover:bg-fireck-4-hover min-w-unset h-28px\"\r\n            onClick={() => {\r\n              window.open(url, \"_blank\");\r\n              proceed(false);\r\n            }}\r\n          >\r\n            Create\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateIndexModal;\r\n\r\nexport const createIndex = (url: string) => {\r\n  callComponent<CreateIndexModalProps, boolean>({ Component: CreateIndexModal, props: { url } });\r\n};\r\n","import { Document, getCollection, GetCollectionOptions } from \"api/collections\";\r\nimport { useNotify } from \"components/NotificationsProvider\";\r\nimport { FilterType } from \"components/TableElements/CollectionTable\";\r\nimport { createIndex } from \"components/TableElements/CreateIndex\";\r\nimport { useEffect, useRef, useState, useCallback } from \"react\";\r\n\r\ninterface UseFetchProps {\r\n  collectionId: string;\r\n  filters?: FilterType[];\r\n  orderBy?: { fieldId: string; direction: \"asc\" | \"desc\" };\r\n  inView: boolean;\r\n}\r\n\r\nconst useFetch = ({ collectionId, filters = [], orderBy, inView }: UseFetchProps) => {\r\n  const [docs, setDocs] = useState<Document[]>([]);\r\n  const inViewRef = useRef(false);\r\n  const endReached = useRef(false);\r\n  const filterSortTriggered = useRef(false);\r\n  const notify = useNotify();\r\n  const [loading, setLoading] = useState(false);\r\n  const abortController = useRef(new AbortController());\r\n  const [filterSortCounter, setFilterSortCounter] = useState(0);\r\n\r\n  const getOptions = useCallback(\r\n    (data: Document[]) => {\r\n      let options: GetCollectionOptions = { collectionId };\r\n\r\n      options.where = \"\";\r\n      options.orderBy = \"\";\r\n\r\n      filters.forEach((f, i) => {\r\n        options.where += (i > 0 ? \";\" : \"\") + f.fieldId + \",\" + f.operator + \",\" + f.value;\r\n        if (orderBy && orderBy.fieldId !== f.fieldId) {\r\n          options.orderBy += (options.orderBy ? \";\" : \"\") + f.fieldId;\r\n        }\r\n      });\r\n\r\n      if (orderBy) {\r\n        options.orderBy += (options.orderBy ? \";\" : \"\") + `${orderBy.fieldId},${orderBy.direction}`;\r\n      }\r\n      if (!orderBy && !filters.length) {\r\n        options.orderBy = \"createdAt,asc\";\r\n      }\r\n\r\n      if (data.length) {\r\n        options.startAfter = data[data.length - 1][orderBy ? orderBy.fieldId : \"createdAt\"];\r\n      }\r\n      options.populateRef = false;\r\n\r\n      return options;\r\n    },\r\n    [orderBy, filters, collectionId]\r\n  );\r\n\r\n  const onError = (message: string) => {\r\n    if (message.includes(\"FAILED_PRECONDITION\")) {\r\n      createIndex(message.split(\"it here:\")[1]);\r\n    } else {\r\n      notify(message, { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    inViewRef.current = inView;\r\n    const fetcher = async () => {\r\n      if ((!endReached.current && inViewRef.current) || filterSortTriggered.current) {\r\n        let triggeredBySortFilter = filterSortTriggered.current;\r\n        filterSortTriggered.current = false;\r\n\r\n        let options = getOptions(triggeredBySortFilter ? [] : docs);\r\n        setLoading(true);\r\n\r\n        const newData = await getCollection(options, abortController.current.signal);\r\n\r\n        if (newData.error) {\r\n          if (newData.error !== \"aborted\") {\r\n            onError(newData.error);\r\n          }\r\n        } else {\r\n          setDocs((prev) => (triggeredBySortFilter ? newData : [...prev, ...newData]));\r\n          if (newData.length < (options.limit || 10)) {\r\n            endReached.current = true;\r\n          }\r\n        }\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetcher();\r\n\r\n    return () => {\r\n      abortController.current.abort();\r\n      abortController.current = new AbortController();\r\n    };\r\n  }, [inView, docs, filterSortCounter]);\r\n\r\n  useEffect(() => {\r\n    filterSortTriggered.current = true;\r\n    endReached.current = false;\r\n    setFilterSortCounter((prev) => prev + 1);\r\n  }, [filters, orderBy]);\r\n\r\n  return { docs, setDocs, loading };\r\n};\r\n\r\nexport default useFetch;\r\n","import { Document } from \"api/collections\";\r\nimport { CollectionType, AnyField } from \"api/collectionTypes\";\r\nimport { deleteDocument } from \"api/collections\";\r\nimport FilesCell from \"./FilesCell\";\r\nimport React, { useEffect } from \"react\";\r\nimport ExpandMoreRounded from \"@material-ui/icons/ExpandMoreRounded\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport AddFilter from \"./AddFilter\";\r\nimport Button from \"components/Button\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport classNames from \"classnames\";\r\nimport useFetch from \"hooks/useFetch\";\r\nimport { InView } from \"react-intersection-observer\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport moment from \"moment\";\r\n\r\nexport interface TableProps {\r\n  collectionType: CollectionType;\r\n  onPick?: (a: Document[]) => void;\r\n  blackList?: string[];\r\n  singleSelect?: boolean;\r\n  valueFormatters?: { [key: string]: (val: any) => any };\r\n  groundColor: \"white\" | \"black\";\r\n  filters?: FilterType[];\r\n  onEdit?: (doc: Document) => void;\r\n  hideFilters?: boolean;\r\n}\r\n\r\nexport type FilterType = { fieldId: string; operator: string; value: string; hidden?: boolean };\r\n\r\nconst Table: React.FC<TableProps> = ({\r\n  collectionType,\r\n  onPick,\r\n  blackList = [],\r\n  singleSelect = false,\r\n  valueFormatters,\r\n  groundColor,\r\n  filters: _filters = [],\r\n  onEdit: _onEdit,\r\n  hideFilters = false,\r\n}) => {\r\n  const history = useHistory();\r\n\r\n  const [filters, setFilters] = React.useState<FilterType[]>([]);\r\n  const fields = collectionType.fields.filter((field) => field.displayOnTable);\r\n  const [selected, setSelected] = React.useState<string[]>([]);\r\n  const [orderBy, setOrderBy] = React.useState<{ fieldId: string; direction: \"asc\" | \"desc\" }>();\r\n  const [endIsInView, setEndIsInView] = React.useState(false);\r\n\r\n  const { docs, setDocs } = useFetch({\r\n    collectionId: collectionType.id,\r\n    filters,\r\n    orderBy,\r\n    inView: endIsInView,\r\n  });\r\n\r\n  const onDeleteSelected = async () => {\r\n    if (await confirm({ confirmation: `Delete ${selected.length} documents?` })) {\r\n      selected.forEach((x) => {\r\n        deleteDocument(collectionType.id, x);\r\n      });\r\n      setDocs((prev) => prev.filter((x) => !selected.includes(x.docId)));\r\n      setSelected([]);\r\n    }\r\n  };\r\n\r\n  const onEdit =\r\n    _onEdit ||\r\n    ((doc: Document) => {\r\n      history.push(`/collections/${collectionType.id}/edit/${doc.docId}`);\r\n    });\r\n\r\n  const onOrder = (field: AnyField) =>\r\n    orderBy?.fieldId !== field.id\r\n      ? () => {\r\n          setOrderBy({ fieldId: field.id, direction: \"asc\" });\r\n        }\r\n      : orderBy?.direction !== \"asc\"\r\n      ? () => setOrderBy(undefined)\r\n      : () => setOrderBy({ fieldId: field.id, direction: \"desc\" });\r\n\r\n  const selectAll = (select: boolean) => setSelected(select ? docs.map((x) => x.docId) : []);\r\n\r\n  const selectHandler = (docId: string, checked: boolean) => {\r\n    if (checked) {\r\n      if (singleSelect) {\r\n        setSelected([docId]);\r\n      } else {\r\n        setSelected((prev) => [...prev, docId]);\r\n      }\r\n\r\n      return;\r\n    }\r\n    setSelected((prev) => {\r\n      let arr = [...prev];\r\n      let index = arr.findIndex((x) => x === docId);\r\n      if (index != null) {\r\n        arr.splice(index, 1);\r\n      }\r\n      return arr;\r\n    });\r\n  };\r\n\r\n  const formatValue = (field: AnyField, value: any) => {\r\n    return field.type === \"date\"\r\n      ? moment(value).format(\"YYYY-MM-DD HH:mm\")\r\n      : valueFormatters && field.id in valueFormatters\r\n      ? valueFormatters[field.id](value)\r\n      : value.toString().substring(0, 40);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (_filters.length) {\r\n      setFilters((prev) => [...prev, ..._filters]);\r\n    }\r\n  }, [_filters]);\r\n\r\n  return (\r\n    <div className=\"h-full w-full flex-col flex\">\r\n      <div className=\"flex justify-between mb-3\">\r\n        {hideFilters ? null : (\r\n          <div className=\"flex flex-wrap\">\r\n            <AddFilter\r\n              collectionType={collectionType}\r\n              onValue={(val: FilterType) => setFilters((prev) => [val, ...prev])}\r\n            ></AddFilter>\r\n            {filters.map((f, i) =>\r\n              f.hidden ? null : (\r\n                <div\r\n                  key={`f-${i}`}\r\n                  className={classNames(\r\n                    \"rounded min-h-28px border leading-28px pl-3 text-sm pr-3 flex mr-3 mb-3 relative\",\r\n                    { \"text-white border-white\": groundColor === \"black\" },\r\n                    { \"text-black border-black\": groundColor === \"white\" }\r\n                  )}\r\n                >\r\n                  {f.fieldId} {f.operator} {f.value}{\" \"}\r\n                  <span\r\n                    onClick={() =>\r\n                      setFilters((prev) => {\r\n                        let arr = [...prev];\r\n                        arr.splice(i, 1);\r\n                        return arr;\r\n                      })\r\n                    }\r\n                    className=\"text-xs leading-28px ml-3 cursor-pointer\"\r\n                  >\r\n                    ✕\r\n                  </span>\r\n                </div>\r\n              )\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {!onPick ? (\r\n          <Button\r\n            onClick={onDeleteSelected}\r\n            disabled={selected.length === 0}\r\n            className={`px-7 mb-3 min-w-unset h-28px ${\r\n              selected.length === 0\r\n                ? \"bg-gray-E1E1E1 text-gray-6C6C6C cursor-default\"\r\n                : \"bg-red-FF0000 hover:bg-red-FF0000-hover text-white\"\r\n            } `}\r\n          >\r\n            Delete\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            onClick={() => onPick(docs.filter((x) => selected.includes(x.docId)))}\r\n            className={`h-28px min-w-unset mb-3 px-7 ${\r\n              selected.length === 0\r\n                ? \"bg-gray-300 text-gray-500 cursor-default\"\r\n                : \"bg-fireck-4 hover:bg-fireck-4-hover\"\r\n            } `}\r\n          >\r\n            Select\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <div\r\n        className={classNames(\"flex-grow h-0 -mt-3 rounded overflow-hidden bg-white\", {\r\n          \"shadow-border-gray\": groundColor === \"white\",\r\n        })}\r\n      >\r\n        <SimpleBar className={\"relative scrollbar-light h-full\"} autoHide={false}>\r\n          <table className=\"w-full text-center\">\r\n            <thead>\r\n              <tr className=\"whitespace-nowrap\">\r\n                <th className=\"sticky top-0 bg-gray-E1E1E1 z-10 px-1\">\r\n                  {singleSelect ? null : (\r\n                    <Checkbox\r\n                      size=\"small\"\r\n                      classes={{ checked: \"text-fireck-1\", root: \"p-0\" }}\r\n                      checked={selected.length === docs.length}\r\n                      onChange={(e) => selectAll(e.target.checked)}\r\n                    ></Checkbox>\r\n                  )}\r\n                </th>\r\n                {fields.map((field, i) => (\r\n                  <th className=\"font-semibold sticky top-0 bg-gray-E1E1E1\" key={`th-${i}`}>\r\n                    <div className=\"flex items-center justify-center\">\r\n                      <div className=\"w-5\"></div>\r\n                      <div className=\"cursor-pointer select-none\" onClick={onOrder(field)}>\r\n                        {field.id}\r\n                      </div>\r\n                      <div className=\"w-5\">\r\n                        {orderBy?.fieldId === field.id ? (\r\n                          <ExpandMoreRounded\r\n                            fontSize=\"small\"\r\n                            className={`${\r\n                              orderBy?.direction === \"asc\" ? \"transform rotate-180\" : \"\"\r\n                            }`}\r\n                          ></ExpandMoreRounded>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {docs.map((doc, i) =>\r\n                blackList.includes(doc.docId) ? null : (\r\n                  <tr\r\n                    onClick={() =>\r\n                      onPick ? selectHandler(doc.docId, !selected.includes(doc.docId)) : onEdit(doc)\r\n                    }\r\n                    key={`row-${i}`}\r\n                    className={\"cursor-pointer hover:bg-fireck-4\"}\r\n                  >\r\n                    <td className=\"px-1\" onClick={(e) => e.stopPropagation()}>\r\n                      <Checkbox\r\n                        size=\"small\"\r\n                        classes={{ checked: \"text-fireck-1\", root: \"p-0\" }}\r\n                        checked={selected.includes(doc.docId)}\r\n                        onChange={(e) => selectHandler(doc.docId, e.target.checked)}\r\n                      ></Checkbox>\r\n                    </td>\r\n                    {fields.map((field, j) => (\r\n                      <td key={`row-${i}-col-${j}`} className=\"px-2\">\r\n                        {doc[field.id] != null ? (\r\n                          field.type === \"media\" ? (\r\n                            field.mediaSingle ? (\r\n                              <FilesCell file={doc[field.id]}></FilesCell>\r\n                            ) : (\r\n                              <FilesCell files={doc[field.id]} />\r\n                            )\r\n                          ) : (\r\n                            <div className=\"whitespace-nowrap\">\r\n                              {formatValue(field, doc[field.id])}\r\n                            </div>\r\n                          )\r\n                        ) : null}\r\n                      </td>\r\n                    ))}\r\n                  </tr>\r\n                )\r\n              )}\r\n            </tbody>\r\n          </table>\r\n          <InView\r\n            onChange={async (inView) => {\r\n              setEndIsInView(inView);\r\n            }}\r\n          >\r\n            <div className=\"w-full\"></div>\r\n          </InView>\r\n          <div></div>\r\n        </SimpleBar>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import Modal from \"@material-ui/core/Modal\";\r\nimport Input from \"components/Input\";\r\nimport Select from \"components/Select\";\r\nimport Button from \"components/Button\";\r\nimport { CollectionType } from \"api/collectionTypes\";\r\nimport React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Label from \"components/Label\";\r\nimport CloseRounded from \"@material-ui/icons/CloseRounded\";\r\n\r\nexport interface AddFilterModalProps {\r\n  collectionType: Pick<CollectionType, \"fields\">;\r\n  onValue: Function;\r\n  groundColor?: \"black\" | \"white\";\r\n}\r\n\r\nconst AddFilterModal: React.FC<AddFilterModalProps> = ({\r\n  collectionType,\r\n  onValue,\r\n  groundColor = \"white\",\r\n}) => {\r\n  const operators = [\r\n    \"<\",\r\n    \"<=\",\r\n    \"==\",\r\n    \">\",\r\n    \">=\",\r\n    \"!=\",\r\n    \"array-contains\",\r\n    \"array-contains-any\",\r\n    \"in\",\r\n    \"not-in\",\r\n  ];\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const { values, errors, handleChange, submitCount, handleSubmit, isSubmitting } = useFormik({\r\n    onSubmit: async (vals, { resetForm }) => {\r\n      onValue(vals);\r\n      setOpen(false);\r\n      resetForm();\r\n    },\r\n    initialValues: {\r\n      value: \"\",\r\n      operator: \"\",\r\n      fieldId: \"\",\r\n    },\r\n    validate: (vals: any) => {\r\n      let errors: any = {};\r\n      Object.keys(vals).forEach((x) => {\r\n        if (!vals[x]) {\r\n          errors[x] = \"Required\";\r\n        }\r\n      });\r\n      return errors;\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => setOpen(true)}\r\n        className=\"bg-fireck-4 hover:bg-fireck-4-hover min-w-unset flex items-center justify-center h-28px px-7 rounded text-sm mr-3 mb-3\"\r\n      >\r\n        Filters\r\n      </Button>\r\n      {!open ? null : (\r\n        <Modal open={open}>\r\n          <div\r\n            className=\"fixed left-0 top-0 w-full h-full flex p-7\"\r\n            onMouseDown={() => setOpen(false)}\r\n          >\r\n            <div\r\n              onMouseDown={(e) => e.stopPropagation()}\r\n              className=\"bg-white rounded p-7 m-auto relative animate-littlemoveup\"\r\n              style={{ maxWidth: 600 }}\r\n            >\r\n              <CloseRounded\r\n                className=\"absolute top-0 right-0 cursor-pointer\"\r\n                onClick={() => setOpen(false)}\r\n              ></CloseRounded>\r\n              <div className=\"flex flex-wrap -mx-2 mb-4\">\r\n                <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n                  <Label\r\n                    groundColor={groundColor}\r\n                    className=\"mb-2\"\r\n                    error={submitCount > 0 ? errors.fieldId : null}\r\n                  >\r\n                    Field\r\n                  </Label>\r\n                  <Select\r\n                    className=\"h-34px\"\r\n                    groundColor=\"white\"\r\n                    name=\"fieldId\"\r\n                    onChange={handleChange}\r\n                    value={values.fieldId}\r\n                    options={[\r\n                      { value: \"\", label: \"Select\" },\r\n                      ...collectionType.fields.map((x) => ({ value: x.id, label: x.id })),\r\n                    ]}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n                  <Label\r\n                    groundColor={groundColor}\r\n                    className=\"mb-2\"\r\n                    error={submitCount > 0 ? errors.operator : null}\r\n                  >\r\n                    Operator\r\n                  </Label>\r\n                  <Select\r\n                    className=\"h-34px\"\r\n                    groundColor=\"white\"\r\n                    name=\"operator\"\r\n                    onChange={handleChange}\r\n                    value={values.operator}\r\n                    options={[\r\n                      { value: \"\", label: \"Select\" },\r\n                      ...operators.map((x) => ({ value: x, label: x })),\r\n                    ]}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n                  <Label\r\n                    groundColor={groundColor}\r\n                    className=\"mb-2 text-black\"\r\n                    error={submitCount > 0 ? errors.value : null}\r\n                  >\r\n                    Value\r\n                  </Label>\r\n                  <Input\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === \"Enter\") {\r\n                        e.preventDefault();\r\n                        handleSubmit();\r\n                      }\r\n                    }}\r\n                    groundColor=\"white\"\r\n                    placeholder={\r\n                      [\"in\", \"not in\", \"array-contains-any\"].includes(values.operator)\r\n                        ? \"value, value, value\"\r\n                        : \"value\"\r\n                    }\r\n                    className=\"placeholder-black h-34px\"\r\n                    value={values.value}\r\n                    onChange={handleChange}\r\n                    name=\"value\"\r\n                  ></Input>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex justify-end\">\r\n                <Button\r\n                  disabled={isSubmitting}\r\n                  onClick={() => handleSubmit()}\r\n                  className=\"bg-fireck-4 hover:bg-fireck-4-hover h-34px\"\r\n                >\r\n                  Add\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddFilterModal;\r\n","import { forwardRef } from \"react\";\r\n\r\nconst TooltipChild = forwardRef(function MyComponent(props: any, ref: any) {\r\n  return <div {...props} ref={ref}></div>;\r\n});\r\n\r\nexport default TooltipChild;\r\n","import TooltipChild from \"components/TooltipChild\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\ninterface MediaFieldProps {\r\n  src: string;\r\n}\r\n\r\nconst MediaField: React.FC<MediaFieldProps> = ({ src }) => {\r\n  return (\r\n    <Tooltip\r\n      arrow\r\n      title={\r\n        <div className=\"p-1\">\r\n          <img src={src} className=\"max-w-136px max-h-136px w-auto h-auto\" alt=\"\" />\r\n        </div>\r\n      }\r\n      placement=\"top\"\r\n      classes={{\r\n        tooltip: \"font-poppins text-xs p-0 rounded bg-fireck-1\",\r\n        arrow: \"text-fireck-1\",\r\n      }}\r\n    >\r\n      <TooltipChild>\r\n        <div className=\"group w-4 h-4 relative flex items-center justify-center rounded hover:bg-gray-535371 hover:bg-opacity-5 cursor-pointer\">\r\n          <div\r\n            className=\"relative w-4 h-4 rounded-full bg-center bg-cover pointer-events-none\"\r\n            style={{ backgroundImage: `url(${src})` }}\r\n          ></div>\r\n        </div>\r\n      </TooltipChild>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default MediaField;\r\n","import React from \"react\";\r\nimport MediaField from \"./MediaField\";\r\n\r\nexport interface FilesProps {\r\n  files?: string[];\r\n  file?: string;\r\n}\r\n\r\nconst Files: React.FC<FilesProps> = ({ files, file }) => {\r\n  const id = React.useRef<number>(Math.random());\r\n\r\n  return (\r\n    <div className=\"flex justify-center\">\r\n      {(files ? files : file ? [file] : []).slice(0, 4).map((f, i) => (\r\n        <div key={`${id}-file-${i}`} className=\"mr-0.5\">\r\n          <MediaField src={f}></MediaField>\r\n        </div>\r\n      ))}\r\n      {files && files.length > 4 ? (\r\n        <div className=\"relative\">\r\n          <div className=\"w-4 h-4 rounded-full bg-fireck-4 text-10px flex items-center justify-center\">\r\n            {files.length - 4}+\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Files;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.46v3.04c0 .28.22.5.5.5h3.04c.13 0 .26-.05.35-.15L17.81 9.94l-3.75-3.75L3.15 17.1c-.1.1-.15.22-.15.36zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'EditRounded');\n\nexports.default = _default;","import Button from \"components/Button\";\r\nimport React, { ReactElement, useState } from \"react\";\r\nimport Edit from \"@material-ui/icons/EditRounded\";\r\nimport Select from \"components/Select\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport AddRounded from \"@material-ui/icons/AddRounded\";\r\nimport SearchRounded from \"@material-ui/icons/SearchRounded\";\r\n\r\nexport interface SettingsPageProps {\r\n  entity: string;\r\n  enitityPlural: string;\r\n  onAddEntity?: () => void;\r\n  entities: { name: string; docId: string }[];\r\n  onSelectEntity: (id: string) => void;\r\n  entityButtons: ReactElement;\r\n  onInvokeEntityEdit?: () => void;\r\n  entityContent: ReactElement;\r\n  selectedEntityId: string;\r\n}\r\n\r\nexport const reorder = (list: any[], startIndex: number, endIndex: number) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst SettingsPage: React.FC<SettingsPageProps> = React.memo(\r\n  ({\r\n    entity,\r\n    enitityPlural,\r\n    onAddEntity,\r\n    entities,\r\n    onSelectEntity,\r\n    entityButtons,\r\n    onInvokeEntityEdit,\r\n    entityContent,\r\n    selectedEntityId,\r\n  }) => {\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    return (\r\n      <div className=\"h-full flex flex-col\">\r\n        <div className=\"flex flex-wrap justify-between mb-4\">\r\n          <div className=\"font-medium text-27px leading-none mb-4 mr-4 text-white capitalize\">\r\n            {enitityPlural}\r\n          </div>\r\n          {!onAddEntity ? null : (\r\n            <Button\r\n              data-testid=\"add-collection-btn\"\r\n              onClick={onAddEntity}\r\n              className=\"bg-fireck-4 hover:bg-fireck-4-hover mb-4 min-w-unset\"\r\n            >\r\n              <div className=\"flex items-center pointer-events-none h-34px\">\r\n                <AddRounded className=\"mr-2 text-lg\" fontSize=\"inherit\"></AddRounded>\r\n                <span className=\"hidden md:block\">Add {entity}</span>\r\n                <span className=\"md:hidden\">Add</span>\r\n              </div>\r\n            </Button>\r\n          )}\r\n        </div>\r\n        {!entities.length ? (\r\n          <div></div>\r\n        ) : (\r\n          <div className=\"flex flex-wrap lg:flex-nowrap w-full flex-grow\">\r\n            <div>\r\n              <div className=\"relative mr-4 hidden lg:block\" style={{ width: 180 }}>\r\n                <SearchRounded\r\n                  fontSize=\"inherit\"\r\n                  className=\"absolute text-base left-1 top-1 text-gray-500 pointer-events-none\"\r\n                ></SearchRounded>\r\n                <input\r\n                  type=\"search\"\r\n                  spellCheck={false}\r\n                  placeholder=\"Search\"\r\n                  className=\"text-white placeholder-gray-500 pl-7 hover:bg-fireck-2 focus:bg-fireck-2 w-full text-sm mb-3 px-2 border-white rounded bg-transparent outline-none focus:outline-none\"\r\n                  value={search}\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                ></input>\r\n              </div>\r\n              <SimpleBar\r\n                style={{ maxHeight: 230 }}\r\n                className=\"max-w-192px w-full flex-shrink-0 mr-4 hidden lg:block scrollbar-dark pr-3\"\r\n                autoHide={false}\r\n              >\r\n                {entities\r\n                  .filter((x) => !search || x.name.toLowerCase().includes(search.toLowerCase()))\r\n                  .map((x) => (\r\n                    <div\r\n                      data-testid={`entity-name-${x.name}`}\r\n                      onClick={() => {\r\n                        onSelectEntity(x.docId);\r\n                      }}\r\n                      key={`entity-${x.docId}`}\r\n                      className={`mb-1 capitalize truncate select-none cursor-pointer ${\r\n                        selectedEntityId === x.docId\r\n                          ? \"bg-fireck-4\"\r\n                          : \"hover:bg-fireck-1-hover text-white\"\r\n                      } rounded h-28px leading-28px px-3`}\r\n                    >\r\n                      {x.name}\r\n                    </div>\r\n                  ))}\r\n              </SimpleBar>\r\n            </div>\r\n\r\n            <div className=\"lg:flex-grow w-full rounded-lg bg-fireck-3 p-7 flex flex-col\">\r\n              <div className=\"flex justify-between mb-3 flex-wrap\">\r\n                <div className=\"font-medium text-22px capitalize mb-3 mr-3 text-white\">\r\n                  <span className=\"hidden lg:inline-block\">\r\n                    {entities.find((x) => x.docId === selectedEntityId)?.name || \"\"}\r\n                  </span>\r\n                  <div className=\"lg:hidden inline-block text-black text-base\">\r\n                    <Select\r\n                      className=\"h-28px\"\r\n                      groundColor=\"black\"\r\n                      onChange={(e) => onSelectEntity(e.target.value)}\r\n                      value={selectedEntityId}\r\n                      options={entities.map((x) => ({ label: x.name, value: x.docId }))}\r\n                    ></Select>\r\n                  </div>\r\n                  {!onInvokeEntityEdit ? null : (\r\n                    <Edit\r\n                      data-testid=\"edit-collection-btn\"\r\n                      onClick={onInvokeEntityEdit}\r\n                      className=\"ml-3 text-lg cursor-pointer\"\r\n                      fontSize=\"inherit\"\r\n                    ></Edit>\r\n                  )}\r\n                </div>\r\n                {entityButtons}\r\n              </div>\r\n\r\n              <div className=\"flex-grow h-0\">{entityContent}</div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default SettingsPage;\r\n","import Modal from \"@material-ui/core/Modal\";\r\nimport Input from \"components/Input\";\r\nimport Select from \"components/Select\";\r\nimport Button from \"components/Button\";\r\nimport { WebhookDocument } from \"api/collectionTypes\";\r\nimport React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Label from \"components/Label\";\r\nimport CloseRounded from \"@material-ui/icons/CloseRounded\";\r\n\r\nexport interface WebhookModalProps {\r\n  onValue: (val: Partial<WebhookDocument>) => void;\r\n  initialValue?: WebhookDocument;\r\n  open: boolean;\r\n  onClose: () => void;\r\n  collectionTypeDocId: string;\r\n}\r\n\r\nconst events = [\"find\", \"find one\", \"create\", \"update\", \"delete\"];\r\nconst methods = [\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\"];\r\n\r\nconst WebhookModal: React.FC<WebhookModalProps> = ({\r\n  onValue,\r\n  initialValue,\r\n  open,\r\n  onClose,\r\n  collectionTypeDocId,\r\n}) => {\r\n  const { values, errors, handleChange, submitCount, handleSubmit, isSubmitting } = useFormik({\r\n    onSubmit: async (vals, { resetForm }) => {\r\n      onValue(vals);\r\n      onClose();\r\n      resetForm();\r\n    },\r\n    enableReinitialize: true,\r\n    initialValues: initialValue || {\r\n      event: \"\",\r\n      method: \"\",\r\n      url: \"\",\r\n      collectionTypeDocId: collectionTypeDocId,\r\n    },\r\n    validate: (vals: any) => {\r\n      let errors: any = {};\r\n      Object.keys(vals).forEach((x) => {\r\n        if (!vals[x]) {\r\n          errors[x] = \"Required\";\r\n        }\r\n      });\r\n      return errors;\r\n    },\r\n  });\r\n\r\n  return !open ? null : (\r\n    <Modal open={open}>\r\n      <div className=\"fixed left-0 top-0 w-full h-full flex p-7\" onMouseDown={onClose}>\r\n        <div\r\n          onMouseDown={(e) => e.stopPropagation()}\r\n          className=\"bg-white rounded p-7 m-auto relative animate-littlemoveup\"\r\n          style={{ maxWidth: 600 }}\r\n        >\r\n          <CloseRounded\r\n            className=\"absolute top-0 right-0 cursor-pointer\"\r\n            onClick={onClose}\r\n          ></CloseRounded>\r\n          <div className=\"flex flex-wrap -mx-2 mb-4\">\r\n            <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n              <Label\r\n                groundColor=\"white\"\r\n                className=\"mb-2\"\r\n                error={submitCount > 0 ? errors.event : null}\r\n              >\r\n                Event\r\n              </Label>\r\n              <Select\r\n                groundColor=\"white\"\r\n                className=\"h-34px\"\r\n                name=\"event\"\r\n                onChange={handleChange}\r\n                value={values.event}\r\n                options={[\r\n                  { value: \"\", label: \"Select\" },\r\n                  ...events.map((x) => ({ value: x, label: x })),\r\n                ]}\r\n              ></Select>\r\n            </div>\r\n            <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n              <Label\r\n                groundColor=\"white\"\r\n                className=\"mb-2\"\r\n                error={submitCount > 0 ? errors.method : null}\r\n              >\r\n                Method\r\n              </Label>\r\n              <Select\r\n                className=\"h-34px\"\r\n                groundColor=\"white\"\r\n                name=\"method\"\r\n                onChange={handleChange}\r\n                value={values.method}\r\n                options={[\r\n                  { value: \"\", label: \"Select\" },\r\n                  ...methods.map((x) => ({ value: x, label: x })),\r\n                ]}\r\n              ></Select>\r\n            </div>\r\n            <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n              <Label\r\n                groundColor=\"white\"\r\n                className=\"mb-2 text-black\"\r\n                error={submitCount > 0 ? errors.url : null}\r\n              >\r\n                Url\r\n              </Label>\r\n              <Input\r\n                onKeyDown={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    e.preventDefault();\r\n                    handleSubmit();\r\n                  }\r\n                }}\r\n                groundColor=\"white\"\r\n                placeholder={\"url\"}\r\n                className=\"placeholder-black h-34px\"\r\n                value={values.url}\r\n                onChange={handleChange}\r\n                name=\"url\"\r\n              ></Input>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex justify-end\">\r\n            <Button\r\n              disabled={isSubmitting}\r\n              onClick={() => handleSubmit()}\r\n              className=\"bg-fireck-4 hover:bg-fireck-4-hover h-34px\"\r\n            >\r\n              {initialValue ? \"Save\" : \"Add\"}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default WebhookModal;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"store\";\r\nimport { WebhookDocument } from \"api/collectionTypes\";\r\nimport SettingsPage from \"components/SettingsPage\";\r\nimport CollectionTable, { FilterType } from \"components/TableElements/CollectionTable\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"components/Button\";\r\nimport WebhookModal from \"./WebhookModal\";\r\nimport { addDocument, updateDocument } from \"api/collections\";\r\nimport { useNotify } from \"components/NotificationsProvider\";\r\n\r\nexport interface WebhooksProps {}\r\n\r\nconst COLLECTION_ID = \"WebhooksReservedCollection\";\r\n\r\nconst Webhooks: React.FC<WebhooksProps> = () => {\r\n  const collectionTypes = useSelector((state: RootState) => state.collectionTypes);\r\n  const webhookColType = collectionTypes.find((x) => x.docId === \"WebhooksReservedCollection\");\r\n  const history = useHistory();\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [editWebhook, setEditWebhook] = useState<WebhookDocument>();\r\n  const [tableRefreshCounter, setTableRefreshCounter] = useState(0);\r\n  const [filters, setFilters] = useState<FilterType[]>([]);\r\n\r\n  const [collectionTypeDocId, setCollectionTypeDocId] = useState(\"\");\r\n  const colType = collectionTypes.find((x) => x.docId === collectionTypeDocId);\r\n  const notify = useNotify();\r\n\r\n  useEffect(() => {\r\n    if (collectionTypes.length) {\r\n      setCollectionTypeDocId(collectionTypes[0].docId);\r\n    }\r\n  }, [collectionTypes]);\r\n\r\n  useEffect(() => {\r\n    setFilters(\r\n      collectionTypeDocId\r\n        ? [\r\n            {\r\n              fieldId: \"collectionTypeDocId\",\r\n              operator: \"==\",\r\n              value: collectionTypeDocId,\r\n              hidden: true,\r\n            },\r\n          ]\r\n        : []\r\n    );\r\n  }, [colType]);\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n    setEditWebhook(undefined);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!colType ? null : (\r\n        <WebhookModal\r\n          collectionTypeDocId={collectionTypeDocId}\r\n          open={modalOpen}\r\n          initialValue={editWebhook}\r\n          onClose={closeModal}\r\n          onValue={async (val) => {\r\n            let res;\r\n            if (val.docId) {\r\n              res = await updateDocument(COLLECTION_ID, val.docId, val);\r\n            } else {\r\n              res = await addDocument(COLLECTION_ID, val);\r\n            }\r\n            if (res.error) {\r\n              notify(res.error, { variant: \"error\" });\r\n            } else {\r\n              setTableRefreshCounter((prev) => prev + 1);\r\n            }\r\n          }}\r\n        ></WebhookModal>\r\n      )}\r\n      <SettingsPage\r\n        entityContent={\r\n          webhookColType ? (\r\n            <CollectionTable\r\n              key={`webhooks-table-${\r\n                filters.length ? filters[0].value : \"\"\r\n              }-${tableRefreshCounter}`}\r\n              onEdit={(doc) => {\r\n                setEditWebhook(doc as WebhookDocument);\r\n                setModalOpen(true);\r\n              }}\r\n              groundColor=\"black\"\r\n              collectionType={webhookColType}\r\n              filters={filters}\r\n            ></CollectionTable>\r\n          ) : (\r\n            <div></div>\r\n          )\r\n        }\r\n        selectedEntityId={collectionTypeDocId}\r\n        entities={collectionTypes}\r\n        onSelectEntity={(docId) => setCollectionTypeDocId(docId)}\r\n        entity=\"webhook\"\r\n        enitityPlural=\"webhooks\"\r\n        entityButtons={\r\n          <div className=\"flex\">\r\n            <Button\r\n              type=\"button\"\r\n              onClick={() => setModalOpen(true)}\r\n              className=\"bg-fireck-4 hover:bg-fireck-4-hover h-28px px-6 min-w-unset\"\r\n            >\r\n              Add hook\r\n            </Button>\r\n          </div>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Webhooks;\r\n"],"sourceRoot":""}