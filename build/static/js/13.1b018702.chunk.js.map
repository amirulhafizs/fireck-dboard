{"version":3,"sources":["api/callComponent.tsx","components/Select.tsx","components/EmptyScreen.tsx","components/Label.tsx","components/IconButton.tsx","assets/one-to-one.svg","assets/one-to-many.svg","components/ToupleInput.tsx","pages/CollectionTypes/CollectionModal.tsx","assets/subcollection.svg","components/fieldTypes/Wrapper.tsx","components/fieldTypes/String.tsx","components/fieldTypes/Number.tsx","components/fieldTypes/Map.tsx","components/fieldTypes/Array.tsx","components/fieldTypes/Boolean.tsx","components/fieldTypes/Date.tsx","components/fieldTypes/Media.tsx","components/fieldTypes/RichText.tsx","components/fieldTypes/Json.tsx","components/fieldTypes/Enum.tsx","components/fieldTypes/Password.tsx","components/fieldTypes/Relation.tsx","components/fieldTypes/index.tsx","components/fieldTypes/Subcollection.tsx","pages/CollectionTypes/SelectFieldType.tsx","pages/CollectionTypes/GetCollectionField.ts","pages/CollectionTypes/SpecifyFieldDetails.tsx","pages/CollectionTypes/InterfaceModal.tsx","pages/CollectionTypes/index.tsx"],"names":["callComponent","Component","props","Promise","resolve","reject","wrapper","document","getElementById","appendChild","createElement","ReactDOM","render","store","proceed","val","unmountComponentAtNode","parentNode","removeChild","WarningIcon","React","forwardRef","ref","className","size","Select","options","error","white","classNames","spellCheck","map","x","i","data-testid","value","label","title","placement","EmptyScreen","onCreate","buttonTitle","onClick","fontSize","Label","children","IconButton","variant","rest","_path","_circle","_circle2","_extends","Object","assign","target","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgOneToOne","_ref","svgRef","titleId","width","height","viewBox","fill","xmlns","id","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","ForwardRef","_path2","_circle3","SvgOneToMany","ToupleInput","setValue","disabled","opt","icon","createId","string","str","char","toLowerCase","toUpperCase","match","AddNewCollection","open","onClose","collections","editingCollectionIndex","onUpdate","onDelete","notify","useNotify","formIntialState","name","single","draftable","fields","lastIndex","docId","useFormik","enableReinitialize","onSubmit","vals","a","resetForm","updateCollectionType","values","createCollectionType","res","actionType","initialValues","validate","errors","index","findIndex","handleSubmit","handleChange","setFieldValue","isSubmitting","submitCount","Modal","hideBackdrop","onChange","onKeyDown","e","Button","confirm","confirmation","deleteDocId","deleteCollectionType","Wrapper","String","Number","Map","Array","Boolean","Media","Enum","Password","Relation","SvgSubcollection","fieldTypes","type","Badge","Date","RichText","Json","SelectFieldType","useState","fieldType","setFieldType","FieldTypes","replace","getCollectionField","editableField","existingFieldNames","zLevel","SpecifyFieldDetails","res1","mediaSingle","enumOptions","relatedCollectionTypeDocId","relationOneToOne","displayOnTable","stringLong","collectionFields","enumOption","setEnumOption","SelectedFieldType","find","useSelector","state","collectionTypes","onDragEnd","result","destination","reorder","addEnumOption","arr","push","splice","toString","c","OneToOneIcon","OneToManyIcon","field","droppableId","provided","snapshot","droppableProps","innerRef","t","draggableId","draggableProps","dragHandleProps","f","filter","placeholder","getGap","count","reduce","b","getType","ident","identStep","docType","multiple","includes","types","password","json","array","media","date","enum","number","boolean","relation","collection","documentFields","script","generateInterface","colType","InterfaceModal","collectionType","stopPropagation","list","startIndex","endIndex","from","removed","CollectionsBuilder","collectionModalOpen","setCollectionModalOpen","dispatch","useDispatch","setEditingCollectionIndex","selectedCollection","setSelectedCollection","interfaceColType","setInterfaceColType","editField","selectedField","newFields","JSON","parse","stringify","payload","success","addField","parseInt","autoHide","noMinWidth","isDefault","classes","root","updatedCollection","CollectionModal","undefined"],"mappings":"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","file":"static/js/13.1b018702.chunk.js","sourcesContent":["import ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"store\";\r\n\r\nexport interface CallableComponent<T> {\r\n  proceed: (v: T) => void;\r\n}\r\n\r\ninterface callComponentArgs<T> {\r\n  Component: React.FC<any>;\r\n  props: Omit<T, \"proceed\">;\r\n}\r\n\r\nexport function callComponent<T, RT>({ Component, props }: callComponentArgs<T>): Promise<RT> {\r\n  return new Promise((resolve, reject) => {\r\n    const wrapper = document.getElementById(\"root\")?.appendChild(document.createElement(\"div\"));\r\n    if (wrapper) {\r\n      ReactDOM.render(\r\n        <Provider store={store}>\r\n          <Component\r\n            {...props}\r\n            proceed={(val: RT) => {\r\n              ReactDOM.unmountComponentAtNode(wrapper);\r\n              wrapper.parentNode?.removeChild(wrapper);\r\n              resolve(val);\r\n            }}\r\n          />\r\n        </Provider>,\r\n        wrapper\r\n      );\r\n    }\r\n  });\r\n}\r\n","import { IoAlertCircleOutline } from \"react-icons/io5\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport React, { SelectHTMLAttributes } from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <IoAlertCircleOutline className=\"text-red-500\" size={20}></IoAlertCircleOutline>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport interface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n  options: { label: string; value: string | number }[];\r\n  error?: string | boolean;\r\n  white?: boolean;\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({\r\n  className = \"\",\r\n  options,\r\n  error,\r\n  white = false,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={`${className} relative flex items-center`}>\r\n      <select\r\n        className={classNames(\"px-3 h-34px border-2 border-solid w-full rounded outline-none\", {\r\n          \"border-red-400\": error,\r\n          \"focus:border-blue-300\": !error,\r\n          \"border-gray-300 bg-gray-300\": !white,\r\n          \"border-white bg-white\": white,\r\n        })}\r\n        {...props}\r\n        spellCheck={false}\r\n      >\r\n        {options.map((x, i) => (\r\n          <option data-testid={`select-option-${x.value}`} key={\"opt-\" + i} value={x.value}>\r\n            {x.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import Button from \"components/Button\";\r\n\r\nexport interface EmptyScreenProps {\r\n  title: string;\r\n  buttonTitle: string;\r\n  onCreate: () => void;\r\n}\r\n\r\nconst EmptyScreen: React.FC<EmptyScreenProps> = ({ title, onCreate, buttonTitle }) => {\r\n  return (\r\n    <div className=\"h-96 bg-gray-300 rounded-md flex w-full p-12\">\r\n      <div className=\"m-auto\">\r\n        <div className=\"text-22px mb-5 font-medium text-center\">{title}</div>\r\n        <Button\r\n          data-testid=\"empty-screen-btn\"\r\n          className=\"mx-auto bg-orange-300 hover:bg-orange-301 block\"\r\n          onClick={onCreate}\r\n        >\r\n          {buttonTitle}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyScreen;\r\n","import React from \"react\";\r\nimport ErrorRounded from \"@material-ui/icons/ErrorRounded\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nexport interface LabelProps {\r\n  error?: string | undefined | null;\r\n  className?: string;\r\n  children: any;\r\n}\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <ErrorRounded className=\"text-red-500 text-xl\" fontSize=\"inherit\"></ErrorRounded>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Label: React.FC<LabelProps> = ({ className = \"\", children, error }) => {\r\n  return (\r\n    <div className={`flex justify-between text-white relative ${className}`}>\r\n      <div>{children}</div>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import ButtonBase from \"@material-ui/core/ButtonBase\";\r\n\r\nexport type IconButtonVariant = \"transparent\" | \"standard\";\r\n\r\nexport interface IconButtonProps {\r\n  className?: string;\r\n  variant?: IconButtonVariant;\r\n  [x: string]: any;\r\n}\r\n\r\nconst IconButton: React.FC<IconButtonProps> = ({\r\n  className = \"\",\r\n  variant = \"standard\",\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <ButtonBase\r\n      {...rest}\r\n      className={\r\n        `outline-none h-26px w-26px rounded ${\r\n          variant === \"standard\"\r\n            ? \"bg-orange-300 hover:bg-orange-301\"\r\n            : \"hover:bg-black hover:bg-opacity-5\"\r\n        }  ` + className\r\n      }\r\n    ></ButtonBase>\r\n  );\r\n};\r\n\r\nexport default IconButton;\r\n","var _path, _circle, _circle2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgOneToOne(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 40,\n    height: 9,\n    viewBox: \"0 0 40 9\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.36621 4.67223H30.7241M30.7241 4.67223L28.3085 2.25659M30.7241 4.67223L28.3085 7.08786\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.37296,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 4.69562,\n    cy: 4.49835,\n    r: 3.31773,\n    stroke: \"currentColor\",\n    strokeWidth: 1.37296\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 35.3948,\n    cy: 4.49835,\n    r: 3.31773,\n    stroke: \"currentColor\",\n    strokeWidth: 1.37296\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOneToOne);\nexport default __webpack_public_path__ + \"static/media/one-to-one.19766dd4.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _circle, _circle2, _circle3;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgOneToMany(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 40,\n    height: 37,\n    viewBox: \"0 0 40 37\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.5875 18.8431L30.4119 7.39751M30.4119 7.39751L26.8752 6.44984M30.4119 7.39751L29.4643 10.9342\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.47153,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.5873 18.8433L30.4117 30.2889M30.4117 30.2889L29.4641 26.7522M30.4117 30.2889L26.875 31.2366\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.47153,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 5.00165,\n    cy: 18.7858,\n    r: 3.55593,\n    stroke: \"currentColor\",\n    strokeWidth: 1.47153\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 35.2653,\n    cy: 32.5311,\n    r: 3.55593,\n    stroke: \"currentColor\",\n    strokeWidth: 1.47153\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 35.2653,\n    cy: 5.15558,\n    r: 3.55593,\n    stroke: \"currentColor\",\n    strokeWidth: 1.47153\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOneToMany);\nexport default __webpack_public_path__ + \"static/media/one-to-many.ace4634d.svg\";\nexport { ForwardRef as ReactComponent };","export interface ToupleInputProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  setValue: (a: any) => void;\r\n  options: {\r\n    value: any;\r\n    label: string;\r\n    icon?: React.FunctionComponent<React.SVGProps<SVGSVGElement>>;\r\n  }[];\r\n  value: any;\r\n  disabled?: boolean;\r\n}\r\n\r\nconst ToupleInput: React.FC<ToupleInputProps> = ({\r\n  className = \"\",\r\n  options,\r\n  value,\r\n  setValue,\r\n  disabled,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <div className={\"flex -mx-2 flex-wrap sm:flex-nowrap mb-10 \" + className} {...rest}>\r\n      {options.map((opt, i) => (\r\n        <div\r\n          data-testid={`touple-option-${opt.value}`}\r\n          key={opt.value}\r\n          onClick={() => setValue(opt.value)}\r\n          className={`sm:w-1/2 w-full mx-2 mb-3 sm:mb-0 py-7 select-none ${\r\n            disabled ? \"cursor-default\" : \"cursor-pointer\"\r\n          } flex items-center justify-center rounded ${\r\n            value === opt.value\r\n              ? \"border-4 border-orange-300\"\r\n              : `bg-gray-300 ${disabled ? \"\" : \"hover:bg-gray-301\"}`\r\n          }`}\r\n        >\r\n          <div className=\"flex items-center pointer-events-none\">\r\n            <div className={opt.icon ? \"mr-7\" : \"\"}>{opt.label}</div>\r\n            {opt.icon ? <opt.icon></opt.icon> : null}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToupleInput;\r\n","import Modal from \"@material-ui/core/Modal\";\r\nimport Input from \"components/GrayInput\";\r\nimport React from \"react\";\r\nimport Button from \"components/Button\";\r\nimport {\r\n  createCollectionType,\r\n  updateCollectionType,\r\n  CollectionType,\r\n  deleteCollectionType,\r\n} from \"api/collectionTypes\";\r\nimport { useNotify } from \"components/NotificationsProvider\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport { useFormik } from \"formik\";\r\nimport ToupleInput from \"components/ToupleInput\";\r\n\r\nexport interface AddNewCollectionProps {\r\n  open: boolean;\r\n  onClose: Function;\r\n  collections: Array<CollectionType>;\r\n  editingCollectionIndex: number;\r\n  onCreate: (val: CollectionType) => void;\r\n  onUpdate: (val: Partial<CollectionType>) => void;\r\n  onDelete: (docId: string) => void;\r\n}\r\n\r\nfunction isNumeric(char: any) {\r\n  return char >= \"0\" && char <= \"9\";\r\n}\r\n\r\nfunction isLetter(str: any) {\r\n  return str.length === 1 && str.match(/[a-z]/i);\r\n}\r\n\r\nconst createId = (string: string) => {\r\n  let id = \"\";\r\n  for (let i = 0; i < string.length; i++) {\r\n    if (string[i] === \" \") {\r\n      id += \"-\";\r\n    } else if (\r\n      i > 0 &&\r\n      string[i - 1].toLowerCase() === string[i - 1] &&\r\n      string[i - 1] !== \" \" &&\r\n      string[i].toUpperCase() === string[i] &&\r\n      !isNumeric(string[i]) &&\r\n      isLetter(string[i])\r\n    ) {\r\n      id += \"-\" + string[i].toLowerCase();\r\n    } else {\r\n      id += string[i].toLowerCase();\r\n    }\r\n  }\r\n  return id;\r\n};\r\n\r\nconst AddNewCollection: React.FC<AddNewCollectionProps> = ({\r\n  open,\r\n  onClose,\r\n  collections,\r\n  editingCollectionIndex,\r\n  onCreate,\r\n  onUpdate,\r\n  onDelete,\r\n}) => {\r\n  const initialData = {\r\n    name: \"\",\r\n    id: \"\",\r\n    single: false,\r\n    draftable: true,\r\n    fields: [],\r\n    size: 0,\r\n    lastIndex: 0,\r\n    docId: \"\",\r\n  } as CollectionType;\r\n\r\n  const notify = useNotify();\r\n\r\n  const formIntialState =\r\n    editingCollectionIndex >= 0 ? collections[editingCollectionIndex] : initialData;\r\n\r\n  const { values, errors, handleSubmit, handleChange, setFieldValue, isSubmitting, submitCount } =\r\n    useFormik({\r\n      enableReinitialize: true,\r\n      onSubmit: async (vals, { resetForm }) => {\r\n        const id = createId(vals.name);\r\n\r\n        const res =\r\n          editingCollectionIndex > -1\r\n            ? await updateCollectionType(values.docId, { ...values, id })\r\n            : await createCollectionType({ ...values, id });\r\n        const actionType = editingCollectionIndex > -1 ? \"updated\" : \"created\";\r\n        if (!res.error) {\r\n          if (editingCollectionIndex > -1) {\r\n            onUpdate(res);\r\n          } else {\r\n            onCreate(res);\r\n          }\r\n          resetForm();\r\n          onClose();\r\n          notify(\"Collection type \" + actionType + \"!\", { variant: \"success\" });\r\n        } else {\r\n          notify(\"Collection type was not \" + actionType, { variant: \"error\" });\r\n        }\r\n      },\r\n      initialValues: formIntialState,\r\n      validate: (vals) => {\r\n        let errors: { [key: string]: string } = {};\r\n        if (!vals.name) {\r\n          errors.name = \"Collection name is required\";\r\n        } else {\r\n          const id = createId(vals.name);\r\n          const index = collections.findIndex((x) => x.id === id);\r\n          if (index !== -1 && index !== editingCollectionIndex) {\r\n            errors.name = \"There is collection with the same name\";\r\n          }\r\n        }\r\n        return errors;\r\n      },\r\n    });\r\n\r\n  return (\r\n    <Modal open={open} hideBackdrop>\r\n      <div className=\"w-full h-full flex overflow-auto bg-black bg-opacity-40\">\r\n        <div className=\"m-auto rounded bg-white max-w-644px w-full p-9\">\r\n          <div className=\"text-22px font-medium mb-12\">\r\n            {editingCollectionIndex > -1 ? \"Edit\" : \"Create\"} collection type\r\n          </div>\r\n          <div className=\"flex flex-wrap mb-7\">\r\n            <div className=\"mb-3 sm:w-1/2 w-full sm:pr-2\">\r\n              <div className=\"mb-2\">Collection name</div>\r\n              <Input\r\n                data-testid={`collection-name-input`}\r\n                error={submitCount > 0 && errors.name ? errors.name : false}\r\n                value={values.name}\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    handleSubmit();\r\n                  }\r\n                }}\r\n              ></Input>\r\n            </div>\r\n            <div className=\"mb-3 sm:w-1/2 w-full sm:pl-2\">\r\n              <div className=\"mb-2\">UID</div>\r\n              <Input disabled value={createId(values.name)} name=\"id\"></Input>\r\n            </div>\r\n          </div>\r\n          <ToupleInput\r\n            disabled={editingCollectionIndex !== -1}\r\n            value={values.single}\r\n            options={[\r\n              { value: false, label: \"Multiple elements\" },\r\n              { value: true, label: \"Single element\" },\r\n            ]}\r\n            setValue={(val) => (editingCollectionIndex === -1 ? setFieldValue(\"single\", val) : {})}\r\n          ></ToupleInput>\r\n          {editingCollectionIndex > -1 ? (\r\n            <Button\r\n              data-testid=\"delete-collection-btn\"\r\n              onClick={async () => {\r\n                if (\r\n                  await confirm({\r\n                    confirmation: \"Do you really want to delete collection type?\",\r\n                  })\r\n                ) {\r\n                  const deleteDocId = collections[editingCollectionIndex].docId;\r\n                  let res = await deleteCollectionType(deleteDocId);\r\n                  if (!res.error) {\r\n                    onClose();\r\n                    onDelete(deleteDocId);\r\n                    notify(\"Collection type deleted!\", { variant: \"success\" });\r\n                  } else {\r\n                    notify(\"Collection type was not deleted\", { variant: \"error\" });\r\n                  }\r\n                  onClose();\r\n                }\r\n              }}\r\n              className=\"border-2 border-red-500 text-red-500 mb-10 hover:bg-red-500 hover:text-white\"\r\n            >\r\n              Delete collection\r\n            </Button>\r\n          ) : null}\r\n\r\n          <div className=\"flex justify-between\">\r\n            <Button onClick={() => onClose()} className=\"bg-blue-300 hover:bg-blue-400 text-white\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              data-testid=\"submit-btn\"\r\n              disabled={isSubmitting}\r\n              onClick={() => handleSubmit()}\r\n              className=\"bg-orange-300 hover:bg-orange-301\"\r\n            >\r\n              {isSubmitting ? \"Loading...\" : \"Submit\"}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewCollection;\r\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSubcollection(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 13,\n    height: 13,\n    viewBox: \"0 0 19 19\",\n    fill: \"currentColor\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.570312 0.778809H6.57031V4.77881H0.570312V0.778809ZM12.5703 7.77881H18.5703V11.7788H12.5703V7.77881ZM12.5703 14.7788H18.5703V18.7788H12.5703V14.7788ZM10.5703 10.7788H4.57031V15.7788H10.5703V17.7788H4.57031H2.57031V6.77881H4.57031V8.77881H10.5703V10.7788Z\",\n    fill: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSubcollection);\nexport default __webpack_public_path__ + \"static/media/subcollection.77afabec.svg\";\nexport { ForwardRef as ReactComponent };","interface WrapperProps {}\r\n\r\nconst Wrapper: React.FC<WrapperProps> = (props) => {\r\n  return (\r\n    <div\r\n      {...props}\r\n      className=\"w-8 rounded h-5 bg-fireck-4 text-center flex justify-center items-center text-xs font-medium\"\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n","import Wrapper from \"./Wrapper\";\r\n\r\nconst String: React.FC = () => {\r\n  return <Wrapper>Ab</Wrapper>;\r\n};\r\n\r\nexport default String;\r\n","import Wrapper from \"./Wrapper\";\r\n\r\nconst Number: React.FC = () => {\r\n  return <Wrapper>123</Wrapper>;\r\n};\r\n\r\nexport default Number;\r\n","import Wrapper from \"./Wrapper\";\r\n\r\nconst Map: React.FC = () => {\r\n  return <Wrapper>{\"{ }\"}</Wrapper>;\r\n};\r\n\r\nexport default Map;\r\n","import Wrapper from \"./Wrapper\";\r\n\r\nconst Array: React.FC = () => {\r\n  return <Wrapper>[ ]</Wrapper>;\r\n};\r\n\r\nexport default Array;\r\n","import ToggleOnOutlinedIcon from \"@material-ui/icons/ToggleOnOutlined\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Boolean: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <ToggleOnOutlinedIcon fontSize=\"inherit\" className=\"text-lg\"></ToggleOnOutlinedIcon>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Boolean;\r\n","import CalendarTodayOutlinedIcon from \"@material-ui/icons/CalendarTodayOutlined\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Boolean: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <CalendarTodayOutlinedIcon fontSize=\"inherit\" className=\"text-sm\"></CalendarTodayOutlinedIcon>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Boolean;\r\n","import PanoramaOutlinedIcon from \"@material-ui/icons/PanoramaOutlined\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Media: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <PanoramaOutlinedIcon fontSize=\"inherit\" className=\"text-base\"></PanoramaOutlinedIcon>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Media;\r\n","import NotesIcon from \"@material-ui/icons/Notes\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Media: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <NotesIcon fontSize=\"inherit\" className=\"text-base\"></NotesIcon>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Media;\r\n","import Wrapper from \"./Wrapper\";\r\n\r\nconst Boolean: React.FC = () => {\r\n  return <Wrapper>JSON</Wrapper>;\r\n};\r\n\r\nexport default Boolean;\r\n","import ListRounded from \"@material-ui/icons/ListRounded\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Enum: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <ListRounded fontSize=\"inherit\" className=\"text-xl\"></ListRounded>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Enum;\r\n","import VpnKeyRounded from \"@material-ui/icons/VpnKeyRounded\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Password: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <VpnKeyRounded fontSize=\"inherit\" className=\"text-base\"></VpnKeyRounded>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Password;\r\n","import Link from \"@material-ui/icons/Link\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Relation: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Link fontSize=\"inherit\" className=\"text-xl\"></Link>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Relation;\r\n","import String from \"./String\";\r\nimport Number from \"./Number\";\r\nimport Map from \"./Map\";\r\nimport Array from \"./Array\";\r\nimport Boolean from \"./Boolean\";\r\nimport Date from \"./Date\";\r\nimport Media from \"./Media\";\r\nimport RichText from \"./RichText\";\r\nimport Json from \"./Json\";\r\nimport Enum from \"./Enum\";\r\nimport Password from \"./Password\";\r\nimport Relation from \"./Relation\";\r\nimport Subcollection from \"./Subcollection\";\r\n\r\nconst fieldTypes = [\r\n  { type: \"string\", Badge: String },\r\n  { type: \"number\", Badge: Number },\r\n  { type: \"map\", Badge: Map },\r\n  { type: \"array\", Badge: Array },\r\n  { type: \"boolean\", Badge: Boolean },\r\n  { type: \"date\", Badge: Date },\r\n  { type: \"media\", Badge: Media },\r\n  { type: \"rich-text\", Badge: RichText },\r\n  { type: \"json\", Badge: Json },\r\n  { type: \"enum\", Badge: Enum },\r\n  { type: \"password\", Badge: Password },\r\n  { type: \"relation\", Badge: Relation },\r\n  { type: \"collection\", Badge: Subcollection },\r\n];\r\n\r\nexport default fieldTypes;\r\n","import { ReactComponent as SubColIcon } from \"assets/subcollection.svg\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Media: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <SubColIcon className=\"m-auto\"></SubColIcon>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Media;\r\n","import FieldTypes from \"components/fieldTypes\";\r\nimport React from \"react\";\r\nimport { FieldInputType } from \"api/collectionTypes\";\r\nimport Button from \"components/Button\";\r\n\r\nexport interface SelectFieldTypeProps {\r\n  proceed: Function;\r\n}\r\n\r\nconst SelectFieldType: React.FC<SelectFieldTypeProps> = ({ proceed }) => {\r\n  const [fieldType, setFieldType] = React.useState(\"string\" as FieldInputType);\r\n\r\n  return (\r\n    <div className=\"fixed left-0 top-0 w-full h-full flex overflow-auto bg-black bg-opacity-40\">\r\n      <div className=\"m-auto rounded bg-white p-9 max-w-600px w-full\">\r\n        <div className=\"text-22px font-medium mb-9\">Select field type</div>\r\n        <div className=\"mb-12\">\r\n          <div className=\"flex flex-wrap\">\r\n            {FieldTypes.map((x, i) => (\r\n              <div\r\n                data-testid={`fieldtype-option-${x.type}`}\r\n                onClick={() => setFieldType(x.type as FieldInputType)}\r\n                key={`field-type-${i}`}\r\n                className={`flex md:w-1/3 sm:w-1/2 w-full select-none p-4 border-4 border-solid border-white items-center cursor-pointer rounded  ${\r\n                  fieldType === x.type\r\n                    ? \"border-orange-300\"\r\n                    : \"hover:border-gray-300 hover:bg-gray-300\"\r\n                }`}\r\n              >\r\n                <div className=\"flex items-center pointer-events-none\">\r\n                  <x.Badge></x.Badge>\r\n                  <span className=\"capitalize ml-2 line-clamp-1\">{x.type.replace(\"-\", \" \")}</span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"flex justify-between\">\r\n          <Button\r\n            data-testid=\"cancel-field-type-btn\"\r\n            onClick={() => {\r\n              proceed(false);\r\n            }}\r\n            className=\"bg-blue-300 hover:bg-blue-400 text-white\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            data-testid=\"submit-field-type-btn\"\r\n            onClick={() => {\r\n              proceed(fieldType);\r\n            }}\r\n            className=\"bg-orange-300 hover:bg-orange-301\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectFieldType;\r\n","import { callComponent } from \"api/callComponent\";\r\nimport { FieldInputType, FieldType } from \"api/collectionTypes\";\r\nimport SelectFieldType, { SelectFieldTypeProps } from \"./SelectFieldType\";\r\nimport SpecifyFieldDetails, { SpecifyFieldDetailsProps } from \"./SpecifyFieldDetails\";\r\n\r\nexport const getCollectionField = async ({\r\n  editableField,\r\n  existingFieldNames,\r\n  zLevel,\r\n}: {\r\n  editableField?: FieldType;\r\n  existingFieldNames?: string[];\r\n  zLevel: number;\r\n}) => {\r\n  let res = editableField\r\n    ? editableField.type\r\n    : await callComponent<SelectFieldTypeProps, FieldInputType | boolean>({\r\n        Component: SelectFieldType,\r\n        props: {},\r\n      });\r\n\r\n  if (typeof res === \"boolean\") return null;\r\n\r\n  const fieldType = res;\r\n  let res1 = await callComponent<SpecifyFieldDetailsProps, Omit<FieldType, \"type\"> | boolean>({\r\n    Component: SpecifyFieldDetails,\r\n    props: {\r\n      fieldType,\r\n      editableField,\r\n      existingFieldNames,\r\n      zLevel,\r\n    },\r\n  });\r\n  if (typeof res1 === \"boolean\") return null;\r\n\r\n  return { ...res1, type: res };\r\n};\r\n","import React from \"react\";\r\nimport Input from \"components/GrayInput\";\r\nimport Button from \"components/Button\";\r\nimport { FieldInputType, FieldType } from \"api/collectionTypes\";\r\nimport FieldTypes from \"components/fieldTypes\";\r\nimport Select from \"components/Select\";\r\nimport { ReactComponent as OneToOneIcon } from \"assets/one-to-one.svg\";\r\nimport { ReactComponent as OneToManyIcon } from \"assets/one-to-many.svg\";\r\nimport Label from \"components/Label\";\r\nimport ToupleInput from \"components/ToupleInput\";\r\nimport { useFormik } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"store\";\r\nimport AddCircleOutlineRounded from \"@material-ui/icons/AddCircleOutlineRounded\";\r\nimport IconButton from \"components/IconButton\";\r\nimport EditOutlined from \"@material-ui/icons/EditOutlined\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport Delete from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport { getCollectionField } from \"./GetCollectionField\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { reorder } from \".\";\r\n\r\nexport interface SpecifyFieldDetailsProps {\r\n  editableField?: FieldType;\r\n  existingFieldNames?: string[];\r\n  fieldType: FieldInputType;\r\n  proceed: Function;\r\n  zLevel: number;\r\n}\r\n\r\nconst SpecifyFieldDetails: React.FC<SpecifyFieldDetailsProps> = ({\r\n  editableField,\r\n  existingFieldNames,\r\n  proceed,\r\n  fieldType,\r\n  zLevel,\r\n}) => {\r\n  const initialValues = {\r\n    id: \"\",\r\n    mediaSingle: false,\r\n    enumOptions: [] as Array<string>,\r\n    relatedCollectionTypeDocId: \"\",\r\n    relationOneToOne: true,\r\n    displayOnTable: true,\r\n    stringLong: false,\r\n    collectionFields: [] as FieldType[],\r\n  };\r\n  const { values, errors, handleChange, handleSubmit, setFieldValue, submitCount } = useFormik({\r\n    onSubmit: (vals) => {\r\n      proceed(vals);\r\n    },\r\n    initialValues: editableField ? { ...initialValues, ...editableField } : initialValues,\r\n    validate: (vals) => {\r\n      const errors: any = {};\r\n\r\n      if (!vals.id) {\r\n        errors.id = \"Field name is required\";\r\n      } else if (existingFieldNames && existingFieldNames.findIndex((x) => x === vals.id) > -1) {\r\n        errors.id = \"There is field with the same name\";\r\n      }\r\n\r\n      if (fieldType === \"enum\" && vals.enumOptions.length < 2) {\r\n        errors.enumOptions = \"Enum requires at least two options\";\r\n      }\r\n\r\n      if (fieldType === \"relation\" && vals.relatedCollectionTypeDocId === \"\") {\r\n        errors.relatedCollectionTypeDocId = \"Select related collection\";\r\n      }\r\n\r\n      return errors;\r\n    },\r\n  });\r\n  const [enumOption, setEnumOption] = React.useState(\"\");\r\n\r\n  const SelectedFieldType = FieldTypes.find((x) => x.type === fieldType);\r\n  const collections = useSelector((state: RootState) => state.collectionTypes);\r\n\r\n  const onDragEnd = async (result: any) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    const fields = reorder(values.collectionFields, result.source.index, result.destination.index);\r\n    setFieldValue(\"collectionFields\", fields);\r\n  };\r\n\r\n  const addEnumOption = () => {\r\n    if (enumOption) {\r\n      let arr = [...values.enumOptions];\r\n      arr.push(enumOption);\r\n      setFieldValue(\"enumOptions\", arr);\r\n      setEnumOption(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed left-0 top-0 w-full h-full flex overflow-auto bg-black bg-opacity-40\">\r\n      <div className=\"m-auto rounded bg-white p-9 max-w-600px w-full\">\r\n        <div className=\"text-22px font-medium mb-9 flex items-center\">\r\n          {SelectedFieldType ? <SelectedFieldType.Badge></SelectedFieldType.Badge> : null}\r\n          <span className=\"ml-3\">\r\n            {editableField ? \"Edit\" : \"Add\"} {SelectedFieldType ? SelectedFieldType.type : \"\"} field\r\n          </span>\r\n        </div>\r\n        <div className=\"mb-9\">\r\n          <div className=\"mb-2\">Field name</div>\r\n          <Input\r\n            data-testid={`field-id-input-${zLevel}`}\r\n            error={submitCount > 0 ? errors.id : \"\"}\r\n            value={values.id}\r\n            name=\"id\"\r\n            onChange={handleChange}\r\n            onKeyDown={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                handleSubmit();\r\n              }\r\n            }}\r\n          ></Input>\r\n        </div>\r\n\r\n        {fieldType === \"media\" ? (\r\n          <ToupleInput\r\n            data-testid={`media-touple-${zLevel}`}\r\n            options={[\r\n              { value: false, label: \"Multiple media\" },\r\n              { value: true, label: \"Single media\" },\r\n            ]}\r\n            value={values.mediaSingle}\r\n            setValue={(val) => setFieldValue(\"mediaSingle\", val)}\r\n          ></ToupleInput>\r\n        ) : fieldType === \"enum\" ? (\r\n          <div className=\"mb-10\">\r\n            <div className=\"mb-2\">Options</div>\r\n            <div className=\"flex flex-wrap\">\r\n              {values.enumOptions.map((x, i) => (\r\n                <div\r\n                  data-testid={`enum-option-${x}-${zLevel}`}\r\n                  key={`enum-option-${i}`}\r\n                  className=\"bg-gray-300 rounded flex items-center px-3 h-34px mr-3 mb-3\"\r\n                >\r\n                  <div className=\"mr-4\">{x}</div>\r\n                  <div\r\n                    className=\"cursor-pointer text-xs\"\r\n                    onClick={() => {\r\n                      let arr = [...values.enumOptions];\r\n                      arr.splice(i, 1);\r\n                      setFieldValue(\"enumOptions\", arr);\r\n                    }}\r\n                  >\r\n                    ✕\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"flex\">\r\n              <Input\r\n                data-testid={`enum-option-input-${zLevel}`}\r\n                className=\"mr-3\"\r\n                error={submitCount > 0 ? errors.enumOptions?.toString() : \"\"}\r\n                type=\"text\"\r\n                value={enumOption}\r\n                onChange={(e) => setEnumOption(e.target.value)}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    addEnumOption();\r\n                  }\r\n                }}\r\n              ></Input>\r\n              <Button\r\n                data-testid={`add-enum-option-btn-${zLevel}`}\r\n                onClick={addEnumOption}\r\n                className=\"bg-orange-300 hover:bg-orange-301\"\r\n              >\r\n                Add option\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        ) : fieldType === \"relation\" ? (\r\n          <div className=\"mb-10\">\r\n            <div className=\"mb-9\">\r\n              <Label\r\n                error={submitCount > 0 ? errors.relatedCollectionTypeDocId : \"\"}\r\n                className=\"mb-2\"\r\n              >\r\n                Related collection\r\n              </Label>\r\n              <Select\r\n                data-testid={`related-collection-select-${zLevel}`}\r\n                options={[\r\n                  { value: \"\", label: \"Select\" },\r\n                  ...collections.map((c) => ({ label: c.id, value: c.docId })),\r\n                ]}\r\n                value={values.relatedCollectionTypeDocId}\r\n                onChange={(e) => setFieldValue(\"relatedCollectionTypeDocId\", e.target.value)}\r\n              ></Select>\r\n            </div>\r\n            <div className=\"mb-2\">Relation type</div>\r\n            <ToupleInput\r\n              data-testid={`relation-multiplicity-touple-${zLevel}`}\r\n              value={values.relationOneToOne}\r\n              setValue={(val) => setFieldValue(\"relationOneToOne\", val)}\r\n              options={[\r\n                { value: true, label: \"One to one\", icon: OneToOneIcon },\r\n                { value: false, label: \"One to many\", icon: OneToManyIcon },\r\n              ]}\r\n            ></ToupleInput>\r\n          </div>\r\n        ) : fieldType === \"string\" ? (\r\n          <ToupleInput\r\n            data-testid={`string-type-touple-${zLevel}`}\r\n            value={values.stringLong}\r\n            setValue={(val) => setFieldValue(\"stringLong\", val)}\r\n            options={[\r\n              { label: \"Short text\", value: false },\r\n              { label: \"Long text\", value: true },\r\n            ]}\r\n          ></ToupleInput>\r\n        ) : fieldType === \"collection\" ? (\r\n          <div className=\"mb-9\">\r\n            <div className=\"flex mb-2\">\r\n              <div className=\"mr-2\">Fields</div>\r\n              <AddCircleOutlineRounded\r\n                data-testid={`add-field-for-subcollection-btn-${zLevel}`}\r\n                className=\"cursor-pointer\"\r\n                onClick={async () => {\r\n                  const field = await getCollectionField({\r\n                    existingFieldNames: values.collectionFields.map((x) => x.id),\r\n                    zLevel: zLevel + 1,\r\n                  });\r\n                  if (!field) return;\r\n                  const fields = [...values.collectionFields, field];\r\n                  setFieldValue(\"collectionFields\", fields);\r\n                }}\r\n              ></AddCircleOutlineRounded>\r\n            </div>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"droppable-sub\">\r\n                {(provided, snapshot) => (\r\n                  <div\r\n                    className=\" max-h-247px overflow-auto\"\r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                  >\r\n                    {values.collectionFields.map((x, i) => {\r\n                      const Badge = FieldTypes.find((t) => t.type === x.type)?.Badge;\r\n                      return (\r\n                        <Draggable key={x.id} draggableId={x.id + 1} index={i}>\r\n                          {(provided, snapshot) => (\r\n                            <div\r\n                              key={`field-${i}`}\r\n                              className=\"rounded bg-gray-300 px-3 py-2 flex mb-2 items-center\"\r\n                              ref={provided.innerRef}\r\n                              {...provided.draggableProps}\r\n                              {...provided.dragHandleProps}\r\n                            >\r\n                              <div className=\"line-clamp-1 w-5/12 px-3\">{x.id}</div>\r\n                              <div className=\"flex w-4/12 flex-shrink-0\">\r\n                                {Badge ? <Badge></Badge> : null}\r\n                                <span className=\"ml-3 hidden sm:block line-clamp-1\">{x.type}</span>\r\n                              </div>\r\n                              <div className=\"flex items-center flex-grow justify-end\">\r\n                                <IconButton\r\n                                  variant=\"transparent\"\r\n                                  onClick={async () => {\r\n                                    const field = await getCollectionField({\r\n                                      zLevel: zLevel + 1,\r\n                                      editableField: x,\r\n                                      existingFieldNames: values.collectionFields\r\n                                        .map((f) => f.id)\r\n                                        .filter((f) => f !== x.id),\r\n                                    });\r\n\r\n                                    if (!field) return;\r\n\r\n                                    let fields = [...values.collectionFields];\r\n                                    fields[i] = { ...x, ...field };\r\n                                    setFieldValue(\"collectionFields\", fields);\r\n                                  }}\r\n                                >\r\n                                  <EditOutlined fontSize=\"small\"></EditOutlined>\r\n                                </IconButton>\r\n                                <IconButton\r\n                                  variant=\"transparent\"\r\n                                  onClick={async () => {\r\n                                    let res = await confirm({\r\n                                      confirmation: \"Do you really want to delete the field?\",\r\n                                    });\r\n                                    if (res) {\r\n                                      const fields = [...values.collectionFields];\r\n                                      fields.splice(i, 1);\r\n                                      setFieldValue(\"collectionFields\", fields);\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  <Delete fontSize=\"small\"></Delete>\r\n                                </IconButton>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </Draggable>\r\n                      );\r\n                    })}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n          </div>\r\n        ) : null}\r\n        <div className=\"flex justify-between\">\r\n          <Button\r\n            data-testid={`cancel-field-details-btn-${zLevel}`}\r\n            onClick={() => {\r\n              proceed(false);\r\n            }}\r\n            className=\"bg-blue-300 hover:bg-blue-400 text-white\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            data-testid={`submit-field-details-btn-${zLevel}`}\r\n            type=\"submit\"\r\n            onClick={() => handleSubmit()}\r\n            className=\"bg-orange-300 hover:bg-orange-301\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpecifyFieldDetails;\r\n","import Modal from \"@material-ui/core/Modal\";\r\nimport { CollectionType, FieldType } from \"api/collectionTypes\";\r\n\r\nexport interface InterfaceModalProps {\r\n  open: boolean;\r\n  collectionType?: CollectionType;\r\n  onClose: () => void;\r\n}\r\n\r\nconst getGap = (count: number) => {\r\n  return new Array(count).fill(0).reduce((a, b) => a + \" \", \"\");\r\n};\r\n\r\nconst getType = (type: FieldType, ident: number, identStep: number = 3): string => {\r\n  const docType = (fields: FieldType[], multiple: boolean = false) => {\r\n    return fields.length\r\n      ? `{\\n${fields.reduce(\r\n          (a, b) =>\r\n            a +\r\n            `${getGap(ident)}${b.id.includes(\" \") ? `\"${b.id}\"` : b.id}: ${getType(\r\n              b,\r\n              ident + identStep\r\n            )};\\n`,\r\n          \"\"\r\n        )}${getGap(ident - identStep)}${multiple ? \"}[]\" : \"}\"}`\r\n      : multiple\r\n      ? \"any[]\"\r\n      : \"null\";\r\n  };\r\n\r\n  const types = {\r\n    password: () => \"string\",\r\n    string: () => \"string\",\r\n    \"rich-text\": () => \"string\",\r\n    json: () => \"object\",\r\n    map: () => \"object\",\r\n    array: () => \"any[]\",\r\n    media: (x: FieldType) => (x.mediaSingle ? \"string\" : \"string[]\"),\r\n    date: () => \"string\",\r\n    enum: () => \"string[]\",\r\n    number: () => \"number\",\r\n    boolean: () => \"boolean\",\r\n    relation: (x: FieldType) => (x.relationOneToOne ? \"string\" : \"string[]\"),\r\n    collection: (x: FieldType) => docType(x.collectionFields, true),\r\n    document: (x: FieldType) => docType(x.documentFields),\r\n    script: () => \"object\",\r\n    \"script-V2\": () => \"object\",\r\n  };\r\n  return `${types[type.type](type)}`;\r\n};\r\n\r\nexport const generateInterface = (colType: CollectionType) => {\r\n  const docType: any = {\r\n    type: \"document\",\r\n    documentFields: colType.fields,\r\n  };\r\n\r\n  const intface = `interface Document ${getType(docType, 3)}`;\r\n  return intface;\r\n};\r\n\r\nconst InterfaceModal: React.FC<InterfaceModalProps> = ({ open, collectionType, onClose }) => {\r\n  return !collectionType ? null : (\r\n    <Modal open={open} hideBackdrop>\r\n      <div\r\n        className=\"fixed left-0 top-0 w-full h-full overflow-auto flex bg-black bg-opacity-40\"\r\n        onClick={onClose}\r\n      >\r\n        <div\r\n          className=\"bg-white p-7 m-auto rounded-md md:max-w-lg max-w-sm w-full\"\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          <div className=\"mb-7 text-22px capitalize font-medium\">\r\n            {collectionType.name} interface\r\n          </div>\r\n          <div className=\"rounded bg-gray-300 p-7 overflow-auto\">\r\n            <pre>{generateInterface(collectionType)}</pre>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default InterfaceModal;\r\n","import Button from \"components/Button\";\r\nimport { IoAdd } from \"react-icons/io5\";\r\nimport React from \"react\";\r\nimport {\r\n  updateCollectionType,\r\n  FieldInputType,\r\n  FieldType,\r\n  CollectionType,\r\n} from \"api/collectionTypes\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"store\";\r\nimport Edit from \"@material-ui/icons/EditRounded\";\r\nimport EditOutlined from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlineOutlined from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport CollectionModal from \"./CollectionModal\";\r\nimport FieldTypes from \"components/fieldTypes\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport { useNotify } from \"components/NotificationsProvider\";\r\nimport SpecifyFieldDetails, { SpecifyFieldDetailsProps } from \"./SpecifyFieldDetails\";\r\nimport SelectFieldType, { SelectFieldTypeProps } from \"./SelectFieldType\";\r\nimport { callComponent } from \"api/callComponent\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport DragIndicatorRounded from \"@material-ui/icons/DragIndicatorRounded\";\r\nimport Select from \"components/Select\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport InterfaceModal from \"./InterfaceModal\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport EmptyScreen from \"components/EmptyScreen\";\r\n\r\nexport interface CollectionsBuilderProps {}\r\n\r\nexport const reorder = (list: any[], startIndex: number, endIndex: number) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst CollectionsBuilder: React.FC<CollectionsBuilderProps> = () => {\r\n  const [collectionModalOpen, setCollectionModalOpen] = React.useState(false as boolean);\r\n  const dispatch = useDispatch();\r\n  const notify = useNotify();\r\n  const [editingCollectionIndex, setEditingCollectionIndex] = React.useState(-1);\r\n  const [selectedCollection, setSelectedCollection] = React.useState(0);\r\n  const [interfaceColType, setInterfaceColType] = React.useState<CollectionType>();\r\n\r\n  const { collections } = useSelector((state: RootState) => ({\r\n    collections: state.collectionTypes,\r\n  }));\r\n\r\n  const editField = async (fieldType: FieldInputType, selectedField: number) => {\r\n    const collection = collections[selectedCollection];\r\n    let res = await callComponent<SpecifyFieldDetailsProps, FieldType | boolean>({\r\n      Component: SpecifyFieldDetails,\r\n      props: { fieldType, editableField: collection.fields[selectedField], zLevel: 0 },\r\n    });\r\n\r\n    if (!(typeof res === \"boolean\")) {\r\n      let newFields = JSON.parse(JSON.stringify(collection.fields));\r\n      newFields[selectedField] = { ...res };\r\n      dispatch({ type: \"UPDATE_COLLECTION_FIELDS\", payload: newFields, docId: collection.docId });\r\n      let res1 = await updateCollectionType(collection.docId, {\r\n        ...collection,\r\n        fields: newFields,\r\n      });\r\n      if (!res1.error) {\r\n        return { success: true };\r\n      }\r\n    }\r\n\r\n    return { success: false };\r\n  };\r\n\r\n  const addField = async () => {\r\n    const collection = collections[selectedCollection];\r\n    let res = await callComponent<SelectFieldTypeProps, FieldInputType | boolean>({\r\n      Component: SelectFieldType,\r\n      props: {},\r\n    });\r\n\r\n    if (!(typeof res === \"boolean\")) {\r\n      const fieldType = res;\r\n      let res1 = await callComponent<SpecifyFieldDetailsProps, Omit<FieldType, \"type\"> | boolean>({\r\n        Component: SpecifyFieldDetails,\r\n        props: {\r\n          fieldType,\r\n          existingFieldNames: collection.fields.map((x) => x.id),\r\n          zLevel: 0,\r\n        },\r\n      });\r\n      if (!(typeof res1 === \"boolean\")) {\r\n        const newFields = [...collection.fields, { type: fieldType, ...res1 }];\r\n        dispatch({ type: \"UPDATE_COLLECTION_FIELDS\", payload: newFields, docId: collection.docId });\r\n        let res2 = await updateCollectionType(collection.docId, {\r\n          ...collection,\r\n          fields: newFields,\r\n        });\r\n        if (!res2.error) {\r\n          notify(\"Field added!\", { variant: \"success\" });\r\n          return { success: true };\r\n        } else {\r\n          notify(\"Field was not added\", { variant: \"error\" });\r\n        }\r\n      }\r\n    }\r\n\r\n    return { success: false };\r\n  };\r\n\r\n  const onDragEnd = async (result: any) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const fields = reorder(\r\n      collections[selectedCollection].fields,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n\r\n    const collection = collections[selectedCollection];\r\n    dispatch({ type: \"UPDATE_COLLECTION_FIELDS\", payload: fields, docId: collection.docId });\r\n    updateCollectionType(collection.docId, {\r\n      ...collection,\r\n      fields,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-full flex flex-col\">\r\n      <div className=\"flex flex-wrap justify-between mb-4\">\r\n        <div className=\"font-medium text-27px leading-none mb-4 mr-4 text-white\">Collections</div>\r\n        <Button\r\n          data-testid=\"add-collection-btn\"\r\n          onClick={() => setCollectionModalOpen(true)}\r\n          className=\"bg-orange-300 hover:bg-orange-301 mb-4\"\r\n        >\r\n          <div className=\"flex items-center pointer-events-none h-34px\">\r\n            <IoAdd className=\"mr-3\" size={18}></IoAdd>\r\n            <span>Add collection</span>\r\n          </div>\r\n        </Button>\r\n      </div>\r\n      {!collections.length ? (\r\n        <EmptyScreen\r\n          buttonTitle=\"Create\"\r\n          title=\"There are no collections\"\r\n          onCreate={() => setCollectionModalOpen(true)}\r\n        ></EmptyScreen>\r\n      ) : (\r\n        <div className=\"flex flex-wrap lg:flex-nowrap w-full flex-grow\">\r\n          <div className=\"max-w-192px mb-3 mr-4 block lg:hidden w-full\">\r\n            <Select\r\n              onChange={(e) => setSelectedCollection(parseInt(e.target.value))}\r\n              value={selectedCollection}\r\n              options={collections.map((x, i) => ({ label: x.name, value: i }))}\r\n            ></Select>\r\n          </div>\r\n          <SimpleBar\r\n            className=\"max-w-192px w-full flex-shrink-0 mr-4 hidden lg:block max-h-96 scrollbar-dark pr-3\"\r\n            autoHide={false}\r\n          >\r\n            {collections.map((x, i) => (\r\n              <div\r\n                data-testid={`collection-name-${x.name}`}\r\n                onClick={() => setSelectedCollection(i)}\r\n                key={`collection-${i}`}\r\n                className={`mb-1 capitalize truncate cursor-pointer ${\r\n                  selectedCollection === i ? \"bg-fireck-4\" : \"hover:bg-fireck-1-hover text-white\"\r\n                } rounded h-28px leading-28px px-3`}\r\n              >\r\n                {x.name}\r\n              </div>\r\n            ))}\r\n          </SimpleBar>\r\n\r\n          <div className=\"lg:flex-grow w-full rounded-lg bg-fireck-3 p-7 flex flex-col\">\r\n            <div className=\"flex justify-between mb-3 flex-wrap\">\r\n              <div className=\"font-medium text-22px capitalize mb-3 mr-3 text-white\">\r\n                {selectedCollection < collections.length\r\n                  ? collections[selectedCollection].name\r\n                  : \"\"}\r\n                <Edit\r\n                  data-testid=\"edit-collection-btn\"\r\n                  onClick={() => {\r\n                    setEditingCollectionIndex(selectedCollection);\r\n                    setCollectionModalOpen(true);\r\n                  }}\r\n                  className=\"ml-3 text-lg cursor-pointer\"\r\n                  fontSize=\"inherit\"\r\n                ></Edit>\r\n              </div>\r\n              <div className=\"flex flex-wrap\">\r\n                <Button\r\n                  data-testid=\"view-interface-btn\"\r\n                  onClick={() => setInterfaceColType(collections[selectedCollection])}\r\n                  noMinWidth\r\n                  className=\"border border-white h-28px text-white mr-3 mb-3 pl-3\"\r\n                >\r\n                  <div className=\"flex items-center pointer-events-none\">\r\n                    <Visibility className=\"mr-3\"></Visibility>\r\n                    Interface\r\n                  </div>\r\n                </Button>\r\n                <Button\r\n                  noMinWidth\r\n                  data-testid=\"add-new-field-btn\"\r\n                  onClick={async () => {\r\n                    addField();\r\n                  }}\r\n                  className=\"bg-fireck-4 hover:bg-fireck-4-hover mb-3 h-28px pl-3\"\r\n                >\r\n                  <div className=\"flex items-center pointer-events-none\">\r\n                    <IoAdd className=\"mr-3\" size={18}></IoAdd>\r\n                    <span>Add field</span>\r\n                  </div>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex-grow h-0 bg-white rounded overflow-hidden\">\r\n              <DragDropContext onDragEnd={onDragEnd}>\r\n                <Droppable droppableId=\"droppable\">\r\n                  {(provided, snapshot) => (\r\n                    <SimpleBar\r\n                      className=\"overflow-auto w-full h-full scrollbar-light py-0.5\"\r\n                      autoHide={false}\r\n                    >\r\n                      <div\r\n                        className=\"min-w-430px\"\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef as any}\r\n                      >\r\n                        {selectedCollection < collections.length\r\n                          ? collections[selectedCollection].fields.map((x, i) => {\r\n                              const Badge = FieldTypes.find((t) => t.type === x.type)?.Badge;\r\n                              return (\r\n                                <Draggable key={x.id} draggableId={x.id} index={i}>\r\n                                  {(provided, snapshot) => (\r\n                                    <div\r\n                                      data-testid={`field-id-${x.id}`}\r\n                                      key={`field-${i}`}\r\n                                      className=\"bg-white hover:bg-fireck-4 flex mb-2 items-center px-2 py-0.5\"\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                    >\r\n                                      <div {...provided.dragHandleProps}>\r\n                                        <DragIndicatorRounded\r\n                                          fontSize=\"inherit\"\r\n                                          className=\"text-base\"\r\n                                        />\r\n                                      </div>\r\n\r\n                                      <div className=\"line-clamp-1 w-5/12 px-3\">{x.id}</div>\r\n                                      <div className=\"flex w-4/12 flex-shrink-0 items-center\">\r\n                                        {Badge ? <Badge></Badge> : null}\r\n                                        <span className=\"ml-3 hidden sm:block line-clamp-1\">\r\n                                          {x.type}\r\n                                        </span>\r\n                                      </div>\r\n                                      {x.isDefault ? null : (\r\n                                        <div className=\"flex items-center flex-grow justify-end\">\r\n                                          <div\r\n                                            data-testid={`edit-for-field-${x.id}`}\r\n                                            className=\"h-5 w-5 flex items-center justify-center rounded cursor-pointer hover:bg-white\"\r\n                                            onClick={() => {\r\n                                              editField(x.type, i);\r\n                                            }}\r\n                                          >\r\n                                            <EditOutlined\r\n                                              fontSize=\"inherit\"\r\n                                              classes={{ root: \"pointer-events-none\" }}\r\n                                            ></EditOutlined>\r\n                                          </div>\r\n                                          <div\r\n                                            className=\"h-5 w-5 flex items-center justify-center rounded cursor-pointer hover:bg-red-FF0000 hover:text-white\"\r\n                                            data-testid={`delete-for-field-${x.id}`}\r\n                                            onClick={async () => {\r\n                                              let res = await confirm({\r\n                                                confirmation:\r\n                                                  \"Do you really want to delete the field?\",\r\n                                              });\r\n                                              if (res) {\r\n                                                let updatedCollection = JSON.parse(\r\n                                                  JSON.stringify(collections[selectedCollection])\r\n                                                );\r\n                                                updatedCollection.fields.splice(i, 1);\r\n                                                dispatch({\r\n                                                  type: \"UPDATE_COLLECTION_FIELDS\",\r\n                                                  payload: updatedCollection.fields,\r\n                                                  docId: updatedCollection.docId,\r\n                                                });\r\n\r\n                                                updateCollectionType(\r\n                                                  collections[selectedCollection].docId,\r\n                                                  updatedCollection\r\n                                                );\r\n                                              }\r\n                                            }}\r\n                                          >\r\n                                            <DeleteOutlineOutlined\r\n                                              classes={{ root: \"pointer-events-none\" }}\r\n                                              fontSize=\"inherit\"\r\n                                            ></DeleteOutlineOutlined>\r\n                                          </div>\r\n                                        </div>\r\n                                      )}\r\n                                    </div>\r\n                                  )}\r\n                                </Draggable>\r\n                              );\r\n                            })\r\n                          : null}\r\n                        {provided.placeholder}\r\n                      </div>\r\n                    </SimpleBar>\r\n                  )}\r\n                </Droppable>\r\n              </DragDropContext>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <CollectionModal\r\n        editingCollectionIndex={editingCollectionIndex}\r\n        collections={collections}\r\n        onCreate={(val) => dispatch({ type: \"ADD_COLLECTION_TYPE\", payload: val })}\r\n        onUpdate={(val) => {\r\n          dispatch({ type: \"UPDATE_COLLECTION_TYPE\", payload: val, docId: val.docId });\r\n        }}\r\n        onDelete={(docId) => {\r\n          setSelectedCollection(0);\r\n          setEditingCollectionIndex(-1);\r\n          dispatch({ type: \"DELETE_COLLECTION_TYPE\", payload: docId });\r\n        }}\r\n        open={collectionModalOpen}\r\n        onClose={() => {\r\n          setCollectionModalOpen(false);\r\n          setEditingCollectionIndex(-1);\r\n        }}\r\n      ></CollectionModal>\r\n      <InterfaceModal\r\n        onClose={() => setInterfaceColType(undefined)}\r\n        open={interfaceColType ? true : false}\r\n        collectionType={interfaceColType}\r\n      ></InterfaceModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CollectionsBuilder;\r\n"],"sourceRoot":""}