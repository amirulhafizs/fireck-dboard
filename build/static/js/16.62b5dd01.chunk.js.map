{"version":3,"sources":["components/Select.tsx","../node_modules/@material-ui/icons/EditRounded.js","components/SettingsPage.tsx","../node_modules/@material-ui/icons/Star.js","api/roles.ts","pages/Roles/RoleEditor.tsx","pages/Roles/RoleModal.tsx","pages/Roles/index.tsx"],"names":["WarningIcon","React","forwardRef","props","ref","className","size","Select","options","error","groundColor","classNames","spellCheck","map","x","i","data-testid","value","label","title","placement","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","SettingsPage","memo","entity","enitityPlural","onAddEntity","entities","onSelectEntity","entityButtons","onInvokeEntityEdit","entityContent","selectedEntityId","useState","search","setSearch","onClick","fontSize","length","style","width","type","placeholder","onChange","e","target","maxHeight","autoHide","filter","name","toLowerCase","includes","docId","find","permissions","RoleEditor","roleCopy","collections","setRoleCopy","sorter","a","b","Checkbox","classes","checked","root","c","perms","forEach","sort","prev","selectAll","p","permission","existingKeys","keys","push","cp","selectColumn","isSystem","colDocId","selectRow","pi","index","findIndex","perm","splice","RoleModal","open","onClose","editRole","onDelete","onSave","onCreate","useFormik","onSubmit","vals","enableReinitialize","initialValues","defaultPermissions","validate","errors","values","isSubmitting","submitCount","handleChange","setFieldValue","handleSubmit","Modal","hideBackdrop","maxWidth","Input","disabled","FormControlLabel","control","Button","Roles","roleModalOpen","setRoleModalOpen","roles","setRoles","selectedRole","setSelectedRole","setEditRole","collectionTypes","useSelector","state","notify","useNotify","dispatch","useDispatch","isSaving","setIsSaving","role","hasBeenChanged","JSON","stringify","useEffect","parse","payload","getCollection","collectionId","res","console","log","undefined","onUpdate","newRole","updateDocument","variant","arr","addDocument","confirm","confirmation","deleteDocument","ind"],"mappings":"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","file":"static/js/16.62b5dd01.chunk.js","sourcesContent":["import { IoAlertCircleOutline } from \"react-icons/io5\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport React, { SelectHTMLAttributes } from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <IoAlertCircleOutline className=\"text-red-FF0000\" size={20}></IoAlertCircleOutline>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport interface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n  options: { label: string; value: string | number }[];\r\n  error?: string | boolean;\r\n  groundColor: \"white\" | \"black\";\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({\r\n  className = \"\",\r\n  options,\r\n  error,\r\n  groundColor,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={`${className} relative flex items-center`}>\r\n      <select\r\n        className={classNames(\"px-3 h-full border-2 border-solid w-full rounded outline-none\", {\r\n          \"border-red-FF0000\": error,\r\n          \"focus:border-fireck-4\": !error,\r\n          \"border-gray-300 bg-gray-300\": groundColor === \"white\",\r\n          \"border-white bg-white\": groundColor === \"black\",\r\n        })}\r\n        {...props}\r\n        spellCheck={false}\r\n      >\r\n        {options.map((x, i) => (\r\n          <option data-testid={`select-option-${x.value}`} key={\"opt-\" + i} value={x.value}>\r\n            {x.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.46v3.04c0 .28.22.5.5.5h3.04c.13 0 .26-.05.35-.15L17.81 9.94l-3.75-3.75L3.15 17.1c-.1.1-.15.22-.15.36zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'EditRounded');\n\nexports.default = _default;","import Button from \"components/Button\";\r\nimport React, { ReactElement, useState } from \"react\";\r\nimport Edit from \"@material-ui/icons/EditRounded\";\r\nimport Select from \"components/Select\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport AddRounded from \"@material-ui/icons/AddRounded\";\r\nimport SearchRounded from \"@material-ui/icons/SearchRounded\";\r\n\r\nexport interface SettingsPageProps {\r\n  entity: string;\r\n  enitityPlural: string;\r\n  onAddEntity?: () => void;\r\n  entities: { name: string; docId: string }[];\r\n  onSelectEntity: (id: string) => void;\r\n  entityButtons: ReactElement;\r\n  onInvokeEntityEdit?: () => void;\r\n  entityContent: ReactElement;\r\n  selectedEntityId: string;\r\n}\r\n\r\nexport const reorder = (list: any[], startIndex: number, endIndex: number) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst SettingsPage: React.FC<SettingsPageProps> = React.memo(\r\n  ({\r\n    entity,\r\n    enitityPlural,\r\n    onAddEntity,\r\n    entities,\r\n    onSelectEntity,\r\n    entityButtons,\r\n    onInvokeEntityEdit,\r\n    entityContent,\r\n    selectedEntityId,\r\n  }) => {\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    return (\r\n      <div className=\"h-full flex flex-col\">\r\n        <div className=\"flex flex-wrap justify-between mb-4\">\r\n          <div className=\"font-medium text-27px leading-none mb-4 mr-4 text-white capitalize\">\r\n            {enitityPlural}\r\n          </div>\r\n          {!onAddEntity ? null : (\r\n            <Button\r\n              data-testid=\"add-collection-btn\"\r\n              onClick={onAddEntity}\r\n              className=\"bg-fireck-4 hover:bg-fireck-4-hover mb-4 min-w-unset\"\r\n            >\r\n              <div className=\"flex items-center pointer-events-none h-34px\">\r\n                <AddRounded className=\"mr-2 text-lg\" fontSize=\"inherit\"></AddRounded>\r\n                <span className=\"hidden md:block\">Add {entity}</span>\r\n                <span className=\"md:hidden\">Add</span>\r\n              </div>\r\n            </Button>\r\n          )}\r\n        </div>\r\n        {!entities.length ? (\r\n          <div></div>\r\n        ) : (\r\n          <div className=\"flex flex-wrap lg:flex-nowrap w-full flex-grow\">\r\n            <div>\r\n              <div className=\"relative mr-4 hidden lg:block\" style={{ width: 180 }}>\r\n                <SearchRounded\r\n                  fontSize=\"inherit\"\r\n                  className=\"absolute text-base left-1 top-1 text-gray-500 pointer-events-none\"\r\n                ></SearchRounded>\r\n                <input\r\n                  type=\"search\"\r\n                  spellCheck={false}\r\n                  placeholder=\"Search\"\r\n                  className=\"text-white placeholder-gray-500 pl-7 hover:bg-fireck-2 focus:bg-fireck-2 w-full text-sm mb-3 px-2 border-white rounded bg-transparent outline-none focus:outline-none\"\r\n                  value={search}\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                ></input>\r\n              </div>\r\n              <SimpleBar\r\n                style={{ maxHeight: 230 }}\r\n                className=\"max-w-192px w-full flex-shrink-0 mr-4 hidden lg:block scrollbar-dark pr-3\"\r\n                autoHide={false}\r\n              >\r\n                {entities\r\n                  .filter((x) => !search || x.name.toLowerCase().includes(search.toLowerCase()))\r\n                  .map((x) => (\r\n                    <div\r\n                      data-testid={`entity-name-${x.name}`}\r\n                      onClick={() => {\r\n                        onSelectEntity(x.docId);\r\n                      }}\r\n                      key={`entity-${x.docId}`}\r\n                      className={`mb-1 capitalize truncate select-none cursor-pointer ${\r\n                        selectedEntityId === x.docId\r\n                          ? \"bg-fireck-4\"\r\n                          : \"hover:bg-fireck-1-hover text-white\"\r\n                      } rounded h-28px leading-28px px-3`}\r\n                    >\r\n                      {x.name}\r\n                    </div>\r\n                  ))}\r\n              </SimpleBar>\r\n            </div>\r\n\r\n            <div className=\"lg:flex-grow w-full rounded-lg bg-fireck-3 p-7 flex flex-col\">\r\n              <div className=\"flex justify-between mb-3 flex-wrap\">\r\n                <div className=\"font-medium text-22px capitalize mb-3 mr-3 text-white\">\r\n                  <span className=\"hidden lg:inline-block\">\r\n                    {entities.find((x) => x.docId === selectedEntityId)?.name || \"\"}\r\n                  </span>\r\n                  <div className=\"lg:hidden inline-block text-black text-base\">\r\n                    <Select\r\n                      className=\"h-28px\"\r\n                      groundColor=\"black\"\r\n                      onChange={(e) => onSelectEntity(e.target.value)}\r\n                      value={selectedEntityId}\r\n                      options={entities.map((x) => ({ label: x.name, value: x.docId }))}\r\n                    ></Select>\r\n                  </div>\r\n                  {!onInvokeEntityEdit ? null : (\r\n                    <Edit\r\n                      data-testid=\"edit-collection-btn\"\r\n                      onClick={onInvokeEntityEdit}\r\n                      className=\"ml-3 text-lg cursor-pointer\"\r\n                      fontSize=\"inherit\"\r\n                    ></Edit>\r\n                  )}\r\n                </div>\r\n                {entityButtons}\r\n              </div>\r\n\r\n              <div className=\"flex-grow h-0\">{entityContent}</div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default SettingsPage;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n}), 'Star');\n\nexports.default = _default;","export type RoleType = \"admin\" | \"user\";\r\nexport type CollectionPermission =\r\n  | \"find\"\r\n  | \"find one\"\r\n  | \"count\"\r\n  | \"create\"\r\n  | \"update\"\r\n  | \"delete\"\r\n  | \"type\";\r\n\r\nexport const permissions: CollectionPermission[] = [\r\n  \"find\",\r\n  \"find one\",\r\n  \"count\",\r\n  \"create\",\r\n  \"update\",\r\n  \"delete\",\r\n  \"type\",\r\n];\r\n\r\nexport type RoleDocument = {\r\n  docId: string;\r\n  name: string;\r\n  defaultPermissions: CollectionPermission[];\r\n  permissions: { [collectionName: string]: CollectionPermission[] };\r\n};\r\n","import React, { Dispatch, SetStateAction } from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { permissions, RoleDocument, CollectionPermission } from \"api/roles\";\r\nimport { CollectionType } from \"api/collectionTypes\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport Star from \"@material-ui/icons/Star\";\r\n\r\nexport interface RoleEditorProps {\r\n  roleCopy: RoleDocument | undefined;\r\n  setRoleCopy: Dispatch<SetStateAction<RoleDocument | undefined>>;\r\n  collections: CollectionType[];\r\n}\r\n\r\nconst RoleEditor: React.FC<RoleEditorProps> = ({ roleCopy, collections, setRoleCopy }) => {\r\n  const sorter = (a: string, b: string) => (a > b ? 1 : a < b ? -1 : 0);\r\n  //sorter sorts permissions in arrays in order the comparison to work\r\n\r\n  const selectColumn = (checked: boolean, permission: CollectionPermission) => {\r\n    if (!roleCopy) return;\r\n    let perms = { ...roleCopy.permissions };\r\n    let existingKeys = Object.keys(perms);\r\n    collections.forEach((c) => {\r\n      if (checked) {\r\n        if (!existingKeys.includes(c.docId)) {\r\n          perms[c.docId] = [permission];\r\n        } else {\r\n          if (!perms[c.docId].includes(permission)) {\r\n            perms[c.docId].push(permission);\r\n            perms[c.docId].sort(sorter);\r\n          }\r\n        }\r\n      } else {\r\n        if (existingKeys.includes(c.docId) && perms[c.docId].includes(permission)) {\r\n          perms[c.docId] = perms[c.docId].filter((cp) => cp !== permission);\r\n        }\r\n      }\r\n    });\r\n    setRoleCopy((prev) => (!prev ? prev : { ...prev, permissions: perms }));\r\n  };\r\n\r\n  const selectRow = (checked: boolean, colDocId: string) => {\r\n    if (!roleCopy) return;\r\n    let perms = { ...roleCopy.permissions };\r\n    perms[colDocId] = checked ? permissions : [];\r\n    setRoleCopy((prev) => (!prev ? prev : { ...prev, permissions: perms }));\r\n  };\r\n\r\n  const selectAll = (checked: boolean) => {\r\n    if (!roleCopy) return;\r\n    let perms = { ...roleCopy.permissions };\r\n    if (checked) {\r\n      collections.forEach((c) => {\r\n        perms[c.docId] = permissions;\r\n        perms[c.docId].sort(sorter);\r\n      });\r\n    } else {\r\n      perms = {};\r\n    }\r\n    setRoleCopy((prev) => (!prev ? prev : { ...prev, permissions: perms }));\r\n  };\r\n\r\n  return roleCopy ? (\r\n    <div className=\"h-full bg-white rounded overflow-hidden\">\r\n      <SimpleBar className=\"pb-2 scrollbar-light h-full\">\r\n        <table className=\"w-full min-w-544px\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"text-center bg-gray-E1E1E1 sticky top-0 z-10\"></th>\r\n              <th className=\"text-center font-semibold bg-gray-E1E1E1 sticky top-0 z-10\">\r\n                <div className=\"opacity-0\">All</div>\r\n                <Checkbox\r\n                  size=\"small\"\r\n                  classes={{ checked: \"text-fireck-1\", root: \"p-0\" }}\r\n                  checked={\r\n                    !collections.find(\r\n                      (c) =>\r\n                        !roleCopy.permissions[c.docId] ||\r\n                        roleCopy.permissions[c.docId].length < permissions.length\r\n                    )\r\n                  }\r\n                  onChange={(e) => selectAll(e.target.checked)}\r\n                ></Checkbox>\r\n              </th>\r\n              {permissions.map((p, i) => (\r\n                <th className=\"font-semibold sticky top-0 bg-gray-E1E1E1 z-10\" key={p}>\r\n                  <div>{p}</div>\r\n                  <Checkbox\r\n                    size=\"small\"\r\n                    classes={{ checked: \"text-fireck-1\", root: \"p-0\" }}\r\n                    checked={!collections.find((c) => !roleCopy.permissions[c.docId]?.includes(p))}\r\n                    onChange={(e) => selectColumn(e.target.checked, p)}\r\n                  ></Checkbox>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {collections.map((c, i) => (\r\n              <tr key={c.docId} className=\"hover:bg-fireck-4\">\r\n                <td>\r\n                  <div className=\" max-w-160px truncate pl-2 capitalize flex items-center\">\r\n                    {!c.isSystem ? null : <Star fontSize=\"inherit\" className=\"text-sm mr-1\"></Star>}\r\n                    {c.name}\r\n                  </div>\r\n                </td>\r\n                <td className=\"text-center\">\r\n                  <Checkbox\r\n                    size=\"small\"\r\n                    classes={{ checked: \"text-fireck-1\", root: \"p-0\" }}\r\n                    checked={\r\n                      roleCopy.permissions[c.docId]\r\n                        ? roleCopy.permissions[c.docId].length === permissions.length\r\n                        : false\r\n                    }\r\n                    onChange={(e) => selectRow(e.target.checked, c.docId)}\r\n                  ></Checkbox>\r\n                </td>\r\n                {permissions.map((p, pi) => (\r\n                  <td key={p + c.docId} className=\"text-center\">\r\n                    <Checkbox\r\n                      size=\"small\"\r\n                      classes={{ checked: \"text-fireck-1\", root: \"p-0\" }}\r\n                      checked={\r\n                        roleCopy.permissions[c.docId]\r\n                          ? roleCopy.permissions[c.docId].includes(p)\r\n                          : false\r\n                      }\r\n                      onChange={(e) =>\r\n                        setRoleCopy((prev) => {\r\n                          if (prev == null) {\r\n                            return prev;\r\n                          }\r\n                          const checked = e.target.checked;\r\n                          let perms = { ...prev.permissions };\r\n                          if (checked) {\r\n                            if (c.docId in perms) {\r\n                              perms[c.docId].push(p);\r\n                              perms[c.docId].sort(sorter);\r\n                            } else {\r\n                              perms[c.docId] = [p];\r\n                            }\r\n                          } else {\r\n                            if (c.docId in perms) {\r\n                              let index = perms[c.docId].findIndex((perm) => perm === p);\r\n                              perms[c.docId].splice(index, 1);\r\n                              if (!perms[c.docId].length) {\r\n                                delete perms[c.docId];\r\n                              }\r\n                            }\r\n                          }\r\n\r\n                          return { ...prev, permissions: perms };\r\n                        })\r\n                      }\r\n                    ></Checkbox>\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </SimpleBar>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default RoleEditor;\r\n","import Modal from \"@material-ui/core/Modal\";\r\nimport Input from \"components/Input\";\r\nimport { RoleDocument, permissions } from \"api/roles\";\r\nimport React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Button from \"components/Button\";\r\nimport CloseRounded from \"@material-ui/icons/CloseRounded\";\r\n\r\nexport interface RoleModalProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  editRole: RoleDocument | undefined;\r\n  onDelete: (docId: string) => void;\r\n  onSave: (r: RoleDocument, notify?: boolean) => void;\r\n  onCreate: (r: RoleDocument) => void;\r\n}\r\n\r\nconst RoleModal: React.FC<RoleModalProps> = ({\r\n  open,\r\n  onClose,\r\n  editRole,\r\n  onDelete,\r\n  onSave,\r\n  onCreate,\r\n}) => {\r\n  const { values, errors, isSubmitting, submitCount, handleChange, setFieldValue, handleSubmit } =\r\n    useFormik<RoleDocument>({\r\n      onSubmit: async (vals) => {\r\n        vals.docId ? await onSave(vals) : await onCreate(vals);\r\n      },\r\n      enableReinitialize: true,\r\n      initialValues: editRole\r\n        ? editRole\r\n        : {\r\n            name: \"\",\r\n            defaultPermissions: [],\r\n            permissions: {},\r\n            docId: \"\",\r\n          },\r\n      validate: (vals) => {\r\n        let errors: Partial<typeof vals> = {};\r\n        if (vals.name.length === 0) {\r\n          errors.name = \"required\";\r\n        }\r\n        return errors;\r\n      },\r\n    });\r\n\r\n  return !open ? null : (\r\n    <Modal open={open} hideBackdrop>\r\n      <div className=\"w-full h-full flex overflow-auto bg-black bg-opacity-40 p-7\">\r\n        <div\r\n          style={{ maxWidth: 570 }}\r\n          className=\"m-auto rounded bg-white w-full p-7 animate-littlemoveup relative\"\r\n        >\r\n          <CloseRounded\r\n            className=\"absolute top-0 right-0 cursor-pointer\"\r\n            onClick={onClose}\r\n          ></CloseRounded>\r\n          <div className=\"mb-9 font-medium text-2xl\">\r\n            {values.docId ? \"Edit role\" : \"Create role\"}\r\n          </div>\r\n          <div className=\"mb-9\">\r\n            <div className=\"mb-2\">Role name</div>\r\n            <Input\r\n              className=\"h-34px\"\r\n              groundColor=\"white\"\r\n              disabled={[\"public\", \"authenticated\"].includes(values.name)}\r\n              onChange={handleChange}\r\n              name=\"name\"\r\n              value={values.name}\r\n              error={errors.name && submitCount > 0 ? errors.name : false}\r\n            ></Input>\r\n          </div>\r\n          <div className=\"mb-2\">Default permissions</div>\r\n          <div className=\"flex flex-wrap mb-9\">\r\n            {permissions.map((p, i) => (\r\n              <div key={p} className=\"sm:w-1/3 w-1/2 flex\">\r\n                <FormControlLabel\r\n                  classes={{ label: \"font-poppins line-clamp-1\" }}\r\n                  control={\r\n                    <Checkbox\r\n                      classes={{ checked: \"text-fireck-1\" }}\r\n                      className=\"mr-3\"\r\n                      checked={values.defaultPermissions.includes(p)}\r\n                      onChange={(e) => {\r\n                        let perms = [...values.defaultPermissions];\r\n                        if (e.target.checked) {\r\n                          perms.push(p);\r\n                        } else {\r\n                          const index = perms.findIndex((perm) => perm === p);\r\n                          perms.splice(index, 1);\r\n                        }\r\n                        setFieldValue(\"defaultPermissions\", perms);\r\n                      }}\r\n                    ></Checkbox>\r\n                  }\r\n                  label={p}\r\n                ></FormControlLabel>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {!editRole || [\"public\", \"authenticated\"].includes(editRole.name.toLowerCase()) ? null : (\r\n            <Button\r\n              onClick={() => onDelete(editRole.docId)}\r\n              className=\"border-2 h-34px border-red-FF0000 text-red-FF0000 mb-10 hover:bg-red-FF0000 hover:text-white\"\r\n            >\r\n              Delete role\r\n            </Button>\r\n          )}\r\n          <div className=\"flex justify-between\">\r\n            <Button\r\n              onClick={() => onClose()}\r\n              className=\"bg-fireck-5 hover:bg-fireck-5-hover text-white h-34px\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={() => handleSubmit()}\r\n              className=\"bg-fireck-4 hover:bg-fireck-4-hover h-34px\"\r\n            >\r\n              {isSubmitting ? \"Loading...\" : \"Submit\"}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RoleModal;\r\n","import SettingsPage from \"components/SettingsPage\";\r\nimport Button from \"components/Button\";\r\nimport React from \"react\";\r\nimport RoleEditor from \"./RoleEditor\";\r\nimport RoleModal from \"./RoleModal\";\r\nimport { getCollection, updateDocument, addDocument, deleteDocument } from \"api/collections\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"store\";\r\nimport { useNotify } from \"components/NotificationsProvider\";\r\nimport { RoleDocument } from \"api/roles\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport classNames from \"classnames\";\r\n\r\ninterface RolesProps {}\r\n\r\nconst Roles: React.FC<RolesProps> = () => {\r\n  const [roleModalOpen, setRoleModalOpen] = React.useState(false);\r\n  const [roles, setRoles] = React.useState<RoleDocument[]>([]);\r\n  const [selectedRole, setSelectedRole] = React.useState(\"\");\r\n  const [editRole, setEditRole] = React.useState<RoleDocument>();\r\n  const collectionTypes = useSelector((state: RootState) => [\r\n    ...state.collectionTypes.filter((x) => x.isSystem),\r\n    ...state.collectionTypes.filter((x) => !x.isSystem),\r\n  ]);\r\n  const notify = useNotify();\r\n  const dispatch = useDispatch();\r\n\r\n  const [roleCopy, setRoleCopy] = React.useState<RoleDocument>();\r\n  const [isSaving, setIsSaving] = React.useState(false);\r\n  const role = roles.find((x) => x.docId === selectedRole);\r\n\r\n  const hasBeenChanged = !(JSON.stringify(role) === JSON.stringify(roleCopy));\r\n\r\n  React.useEffect(() => {\r\n    if (role) {\r\n      setRoleCopy(JSON.parse(JSON.stringify(role)));\r\n    }\r\n  }, [role]);\r\n\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        if (dispatch) {\r\n          dispatch({ type: \"SET_LOADING\", payload: true });\r\n          const res = await getCollection({ collectionId: \"RolesReservedCollection\" });\r\n          if (!(\"error\" in res)) {\r\n            setRoles(res);\r\n            if (res.length) {\r\n              setSelectedRole(res[0].docId);\r\n            }\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        dispatch({ type: \"SET_LOADING\", payload: false });\r\n      }\r\n    })();\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    if (editRole) {\r\n      setRoleModalOpen(true);\r\n    }\r\n  }, [editRole]);\r\n\r\n  const onClose = () => {\r\n    setRoleModalOpen(false);\r\n    setEditRole(undefined);\r\n  };\r\n\r\n  const onUpdate = async (newRole: RoleDocument) => {\r\n    const res = await updateDocument(\"RolesReservedCollection\", newRole.docId, newRole);\r\n    if (!(\"error\" in res)) {\r\n      setRoles((prev) => {\r\n        let arr = [...prev];\r\n        let index = arr.findIndex((x) => x.docId === selectedRole);\r\n        if (index === -1) return arr;\r\n        arr[index] = newRole;\r\n        return arr;\r\n      });\r\n      notify(\"Role updated!\", { variant: \"success\" });\r\n    } else {\r\n      notify(res.error, { variant: \"error\" });\r\n    }\r\n    onClose();\r\n  };\r\n\r\n  const onCreate = async (newRole: RoleDocument) => {\r\n    const res = await addDocument(\"RolesReservedCollection\", newRole);\r\n    if (!(\"error\" in res)) {\r\n      setRoles((prev) => [{ ...newRole, docId: res.docId }, ...prev]);\r\n      notify(\"Role created!\", { variant: \"success\" });\r\n    } else {\r\n      notify(res.error, { variant: \"error\" });\r\n    }\r\n    onClose();\r\n  };\r\n\r\n  const onDelete = async (docId: string) => {\r\n    if (\r\n      await confirm({\r\n        confirmation: \"Do you really want to delete this role\",\r\n      })\r\n    ) {\r\n      let res = await deleteDocument(\"RolesReservedCollection\", docId);\r\n      if (!res.error) {\r\n        setRoles((prev) => {\r\n          let arr = [...prev];\r\n          const ind = arr.findIndex((x) => x.docId === docId);\r\n          if (ind === -1) return prev;\r\n          arr.splice(ind, 1);\r\n          return arr;\r\n        });\r\n        notify(\"Role deleted!\", { variant: \"success\" });\r\n      } else {\r\n        notify(\"Role was not deleted\", { variant: \"error\" });\r\n      }\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  console.log(\"role updated\");\r\n\r\n  return (\r\n    <>\r\n      <RoleModal\r\n        onCreate={onCreate}\r\n        onDelete={onDelete}\r\n        editRole={editRole}\r\n        open={roleModalOpen}\r\n        onSave={onUpdate}\r\n        onClose={() => {\r\n          setRoleModalOpen(false);\r\n          setEditRole(undefined);\r\n        }}\r\n      ></RoleModal>\r\n      <SettingsPage\r\n        selectedEntityId={selectedRole}\r\n        entity=\"role\"\r\n        enitityPlural=\"roles\"\r\n        onAddEntity={() => setRoleModalOpen(true)}\r\n        entities={roles}\r\n        entityButtons={\r\n          <Button\r\n            onClick={async () => {\r\n              if (!roleCopy) return;\r\n              setIsSaving(true);\r\n              await onUpdate(roleCopy);\r\n              setIsSaving(false);\r\n            }}\r\n            disabled={!hasBeenChanged || isSaving}\r\n            className={classNames(\"mb-4 min-w-unset h-28px px-7\", {\r\n              \"bg-white cursor-default text-gray-500\": !hasBeenChanged && !isSaving,\r\n              \"bg-fireck-4 hover:bg-fireck-4-hover\": !(!hasBeenChanged && !isSaving),\r\n            })}\r\n          >\r\n            {isSaving ? \"Saving...\" : hasBeenChanged ? \"Save\" : \"Saved!\"}\r\n          </Button>\r\n        }\r\n        onSelectEntity={(docId) => {\r\n          setSelectedRole(docId);\r\n        }}\r\n        onInvokeEntityEdit={() => setEditRole(role)}\r\n        entityContent={\r\n          <RoleEditor\r\n            collections={collectionTypes}\r\n            roleCopy={roleCopy}\r\n            setRoleCopy={setRoleCopy}\r\n          ></RoleEditor>\r\n        }\r\n      ></SettingsPage>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Roles;\r\n"],"sourceRoot":""}