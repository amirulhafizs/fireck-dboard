{"version":3,"sources":["pages/Webhooks/WebhookModal.tsx","pages/Webhooks/index.tsx","components/Select.tsx","api/callComponent.tsx","components/Label.tsx","components/TableElements/CreateIndex.tsx","hooks/useFetch.ts","components/TableElements/CollectionTable.tsx","components/TableElements/AddFilter.tsx","components/TooltipChild.tsx","components/TableElements/FilesCell/MediaField.tsx","components/TableElements/FilesCell/index.tsx","components/SettingsPage.tsx"],"names":["events","methods","WebhookModal","onValue","initialValue","open","onClose","collectionTypeDocId","useFormik","onSubmit","vals","a","resetForm","enableReinitialize","initialValues","event","method","url","validate","errors","Object","keys","forEach","x","values","handleChange","submitCount","handleSubmit","isSubmitting","Modal","className","onMouseDown","e","stopPropagation","style","maxWidth","onClick","Label","groundColor","error","Select","name","onChange","value","options","label","map","Input","onKeyDown","key","preventDefault","placeholder","Button","disabled","COLLECTION_ID","Webhooks","collectionTypes","useSelector","state","webhookColType","find","docId","useHistory","useState","modalOpen","setModalOpen","editWebhook","setEditWebhook","tableRefreshCounter","setTableRefreshCounter","filters","setFilters","setCollectionTypeDocId","colType","notify","useNotify","useEffect","length","fieldId","operator","hidden","undefined","val","updateDocument","res","addDocument","variant","prev","SettingsPage","entityContent","CollectionTable","onEdit","doc","collectionType","selectedEntityId","entities","onSelectEntity","entity","enitityPlural","entityButtons","type","WarningIcon","React","forwardRef","props","ref","size","classNames","spellCheck","i","title","placement","callComponent","Component","Promise","resolve","reject","wrapper","document","getElementById","appendChild","createElement","ReactDOM","render","store","proceed","unmountComponentAtNode","parentNode","removeChild","fontSize","children","CreateIndexModal","window","useFetch","collectionId","orderBy","inView","docs","setDocs","inViewRef","useRef","endReached","filterSortTriggered","loading","setLoading","abortController","AbortController","filterSortCounter","setFilterSortCounter","getOptions","useCallback","data","f","where","direction","startAfter","populateRef","onError","message","includes","split","current","fetcher","triggeredBySortFilter","getCollection","signal","newData","limit","abort","Table","onPick","blackList","singleSelect","valueFormatters","_filters","_onEdit","hideFilters","history","fields","filter","field","displayOnTable","selected","setSelected","setOrderBy","endIsInView","setEndIsInView","id","onDeleteSelected","confirm","confirmation","deleteDocument","push","onOrder","selectHandler","checked","arr","index","findIndex","splice","formatValue","moment","format","toString","substring","AddFilter","autoHide","Checkbox","classes","root","select","target","j","mediaSingle","FilesCell","file","files","colSpan","AddFilterModal","setOpen","TooltipChild","MediaField","src","Tooltip","arrow","alt","tooltip","backgroundImage","Files","Math","random","slice","memo","onAddEntity","onInvokeEntityEdit","search","setSearch","width","maxHeight","toLowerCase"],"mappings":"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","file":"static/js/14.56205361.chunk.js","sourcesContent":["import Modal from \"@material-ui/core/Modal\";\r\nimport Input from \"components/Input\";\r\nimport Select from \"components/Select\";\r\nimport Button from \"components/Button\";\r\nimport { WebhookDocument } from \"api/collectionTypes\";\r\nimport React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Label from \"components/Label\";\r\nimport CloseRounded from \"@material-ui/icons/CloseRounded\";\r\n\r\nexport interface WebhookModalProps {\r\n  onValue: (val: Partial<WebhookDocument>) => void;\r\n  initialValue?: WebhookDocument;\r\n  open: boolean;\r\n  onClose: () => void;\r\n  collectionTypeDocId: string;\r\n}\r\n\r\nconst events = [\"find\", \"find one\", \"create\", \"update\", \"delete\"];\r\nconst methods = [\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\"];\r\n\r\nconst WebhookModal: React.FC<WebhookModalProps> = ({\r\n  onValue,\r\n  initialValue,\r\n  open,\r\n  onClose,\r\n  collectionTypeDocId,\r\n}) => {\r\n  const { values, errors, handleChange, submitCount, handleSubmit, isSubmitting } = useFormik({\r\n    onSubmit: async (vals, { resetForm }) => {\r\n      onValue(vals);\r\n      onClose();\r\n      resetForm();\r\n    },\r\n    enableReinitialize: true,\r\n    initialValues: initialValue || {\r\n      event: \"\",\r\n      method: \"\",\r\n      url: \"\",\r\n      collectionTypeDocId: collectionTypeDocId,\r\n    },\r\n    validate: (vals: any) => {\r\n      let errors: any = {};\r\n      Object.keys(vals).forEach((x) => {\r\n        if (!vals[x]) {\r\n          errors[x] = \"Required\";\r\n        }\r\n      });\r\n      return errors;\r\n    },\r\n  });\r\n\r\n  return !open ? null : (\r\n    <Modal open={open}>\r\n      <div className=\"fixed left-0 top-0 w-full h-full flex p-7\" onMouseDown={onClose}>\r\n        <div\r\n          onMouseDown={(e) => e.stopPropagation()}\r\n          className=\"bg-white rounded p-7 m-auto relative animate-littlemoveup\"\r\n          style={{ maxWidth: 600 }}\r\n        >\r\n          <CloseRounded\r\n            className=\"absolute top-0 right-0 cursor-pointer\"\r\n            onClick={onClose}\r\n          ></CloseRounded>\r\n          <div className=\"flex flex-wrap -mx-2 mb-4\">\r\n            <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n              <Label\r\n                groundColor=\"white\"\r\n                className=\"mb-2\"\r\n                error={submitCount > 0 ? errors.event : null}\r\n              >\r\n                Event\r\n              </Label>\r\n              <Select\r\n                groundColor=\"white\"\r\n                className=\"h-34px\"\r\n                name=\"event\"\r\n                onChange={handleChange}\r\n                value={values.event}\r\n                options={[\r\n                  { value: \"\", label: \"Select\" },\r\n                  ...events.map((x) => ({ value: x, label: x })),\r\n                ]}\r\n              ></Select>\r\n            </div>\r\n            <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n              <Label\r\n                groundColor=\"white\"\r\n                className=\"mb-2\"\r\n                error={submitCount > 0 ? errors.method : null}\r\n              >\r\n                Method\r\n              </Label>\r\n              <Select\r\n                className=\"h-34px\"\r\n                groundColor=\"white\"\r\n                name=\"method\"\r\n                onChange={handleChange}\r\n                value={values.method}\r\n                options={[\r\n                  { value: \"\", label: \"Select\" },\r\n                  ...methods.map((x) => ({ value: x, label: x })),\r\n                ]}\r\n              ></Select>\r\n            </div>\r\n            <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n              <Label\r\n                groundColor=\"white\"\r\n                className=\"mb-2 text-black\"\r\n                error={submitCount > 0 ? errors.url : null}\r\n              >\r\n                Url\r\n              </Label>\r\n              <Input\r\n                onKeyDown={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    e.preventDefault();\r\n                    handleSubmit();\r\n                  }\r\n                }}\r\n                groundColor=\"white\"\r\n                placeholder={\"url\"}\r\n                className=\"placeholder-black h-34px\"\r\n                value={values.url}\r\n                onChange={handleChange}\r\n                name=\"url\"\r\n              ></Input>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex justify-end\">\r\n            <Button\r\n              disabled={isSubmitting}\r\n              onClick={() => handleSubmit()}\r\n              className=\"bg-fireck-4 hover:bg-fireck-4-hover h-34px\"\r\n            >\r\n              {initialValue ? \"Save\" : \"Add\"}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default WebhookModal;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"store\";\r\nimport { WebhookDocument } from \"api/collectionTypes\";\r\nimport SettingsPage from \"components/SettingsPage\";\r\nimport CollectionTable, { FilterType } from \"components/TableElements/CollectionTable\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"components/Button\";\r\nimport WebhookModal from \"./WebhookModal\";\r\nimport { addDocument, updateDocument } from \"api/collections\";\r\nimport { useNotify } from \"components/NotificationsProvider\";\r\n\r\nexport interface WebhooksProps {}\r\n\r\nconst COLLECTION_ID = \"WebhooksReservedCollection\";\r\n\r\nconst Webhooks: React.FC<WebhooksProps> = () => {\r\n  const collectionTypes = useSelector((state: RootState) => state.collectionTypes);\r\n  const webhookColType = collectionTypes.find((x) => x.docId === \"WebhooksReservedCollection\");\r\n  const history = useHistory();\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [editWebhook, setEditWebhook] = useState<WebhookDocument>();\r\n  const [tableRefreshCounter, setTableRefreshCounter] = useState(0);\r\n  const [filters, setFilters] = useState<FilterType[]>([]);\r\n\r\n  const [collectionTypeDocId, setCollectionTypeDocId] = useState(\"\");\r\n  const colType = collectionTypes.find((x) => x.docId === collectionTypeDocId);\r\n  const notify = useNotify();\r\n\r\n  useEffect(() => {\r\n    if (collectionTypes.length) {\r\n      setCollectionTypeDocId(collectionTypes[0].docId);\r\n    }\r\n  }, [collectionTypes]);\r\n\r\n  useEffect(() => {\r\n    setFilters(\r\n      collectionTypeDocId\r\n        ? [\r\n            {\r\n              fieldId: \"collectionTypeDocId\",\r\n              operator: \"==\",\r\n              value: collectionTypeDocId,\r\n              hidden: true,\r\n            },\r\n          ]\r\n        : []\r\n    );\r\n  }, [colType]);\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n    setEditWebhook(undefined);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!colType ? null : (\r\n        <WebhookModal\r\n          collectionTypeDocId={collectionTypeDocId}\r\n          open={modalOpen}\r\n          initialValue={editWebhook}\r\n          onClose={closeModal}\r\n          onValue={async (val) => {\r\n            let res;\r\n            if (val.docId) {\r\n              res = await updateDocument(COLLECTION_ID, val.docId, val);\r\n            } else {\r\n              res = await addDocument(COLLECTION_ID, val);\r\n            }\r\n            if (res.error) {\r\n              notify(res.error, { variant: \"error\" });\r\n            } else {\r\n              setTableRefreshCounter((prev) => prev + 1);\r\n            }\r\n          }}\r\n        ></WebhookModal>\r\n      )}\r\n      <SettingsPage\r\n        entityContent={\r\n          webhookColType ? (\r\n            <CollectionTable\r\n              key={`webhooks-table-${\r\n                filters.length ? filters[0].value : \"\"\r\n              }-${tableRefreshCounter}`}\r\n              onEdit={(doc) => {\r\n                setEditWebhook(doc as WebhookDocument);\r\n                setModalOpen(true);\r\n              }}\r\n              groundColor=\"black\"\r\n              collectionType={webhookColType}\r\n              filters={filters}\r\n            ></CollectionTable>\r\n          ) : (\r\n            <div></div>\r\n          )\r\n        }\r\n        selectedEntityId={collectionTypeDocId}\r\n        entities={collectionTypes}\r\n        onSelectEntity={(docId) => setCollectionTypeDocId(docId)}\r\n        entity=\"webhook\"\r\n        enitityPlural=\"webhooks\"\r\n        entityButtons={\r\n          <div className=\"flex\">\r\n            <Button\r\n              type=\"button\"\r\n              onClick={() => setModalOpen(true)}\r\n              className=\"bg-fireck-4 hover:bg-fireck-4-hover h-28px px-6 min-w-unset\"\r\n            >\r\n              Add hook\r\n            </Button>\r\n          </div>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Webhooks;\r\n","import { IoAlertCircleOutline } from \"react-icons/io5\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport React, { SelectHTMLAttributes } from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <IoAlertCircleOutline className=\"text-red-FF0000\" size={20}></IoAlertCircleOutline>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport interface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n  options: { label: string; value: string | number }[];\r\n  error?: string | boolean;\r\n  groundColor: \"white\" | \"black\";\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({\r\n  className = \"\",\r\n  options,\r\n  error,\r\n  groundColor,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={`${className} relative flex items-center`}>\r\n      <select\r\n        className={classNames(\"px-3 h-full border-2 border-solid w-full rounded outline-none\", {\r\n          \"border-red-FF0000\": error,\r\n          \"focus:border-fireck-4\": !error,\r\n          \"border-gray-300 bg-gray-300\": groundColor === \"white\",\r\n          \"border-white bg-white\": groundColor === \"black\",\r\n        })}\r\n        {...props}\r\n        spellCheck={false}\r\n      >\r\n        {options.map((x, i) => (\r\n          <option data-testid={`select-option-${x.value}`} key={\"opt-\" + i} value={x.value}>\r\n            {x.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"store\";\r\nimport NotificationsProvider from \"components/NotificationsProvider\";\r\n\r\nexport interface CallableComponent<T> {\r\n  proceed: (v: T) => void;\r\n}\r\n\r\ninterface callComponentArgs<T> {\r\n  Component: React.FC<any>;\r\n  props: Omit<T, \"proceed\">;\r\n}\r\n\r\nexport function callComponent<T, RT>({ Component, props }: callComponentArgs<T>): Promise<RT> {\r\n  return new Promise((resolve, reject) => {\r\n    const wrapper = document.getElementById(\"root\")?.appendChild(document.createElement(\"div\"));\r\n\r\n    if (wrapper) {\r\n      ReactDOM.render(\r\n        <Provider store={store}>\r\n          <NotificationsProvider>\r\n            <Component\r\n              {...props}\r\n              proceed={(val: RT) => {\r\n                ReactDOM.unmountComponentAtNode(wrapper);\r\n                wrapper.parentNode?.removeChild(wrapper);\r\n                resolve(val);\r\n              }}\r\n            />\r\n          </NotificationsProvider>\r\n        </Provider>,\r\n        wrapper\r\n      );\r\n    }\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport ErrorRounded from \"@mui/icons-material/ErrorRounded\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport classNames from \"classnames\";\r\n\r\nexport interface LabelProps {\r\n  error?: string | undefined | null;\r\n  className?: string;\r\n  children: any;\r\n  groundColor: \"black\" | \"white\";\r\n}\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <ErrorRounded className=\"text-red-500 text-xl\" fontSize=\"inherit\"></ErrorRounded>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Label: React.FC<LabelProps> = ({ className = \"\", children, error, groundColor }) => {\r\n  return (\r\n    <div\r\n      className={classNames(`flex justify-between relative ${className}`, {\r\n        \"text-white\": groundColor === \"black\",\r\n        \"text-black\": groundColor === \"white\",\r\n      })}\r\n    >\r\n      <div>{children}</div>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import { callComponent } from \"api/callComponent\";\r\nimport Button from \"components/Button\";\r\n\r\nexport interface CreateIndexModalProps {\r\n  proceed: Function;\r\n  url: string;\r\n}\r\n\r\nconst CreateIndexModal: React.FC<CreateIndexModalProps> = ({ proceed, url }) => {\r\n  return (\r\n    <div\r\n      className=\"fixed left-0 top-0 w-full h-full flex bg-black bg-opacity-40\"\r\n      onMouseDown={() => proceed(false)}\r\n    >\r\n      <div onMouseDown={(e) => e.stopPropagation()} className=\"bg-white rounded p-7  m-auto\">\r\n        <div className=\"mb-12\">This query requires creating an index.</div>\r\n        <div className=\"flex justify-between\">\r\n          <Button\r\n            className=\"bg-fireck-5 hover:bg-fireck-5-hover min-w-unset text-white h-28px\"\r\n            onClick={() => proceed(false)}\r\n          >\r\n            Later\r\n          </Button>\r\n          <Button\r\n            className=\"bg-fireck-4 hover:bg-fireck-4-hover min-w-unset h-28px\"\r\n            onClick={() => {\r\n              window.open(url, \"_blank\");\r\n              proceed(false);\r\n            }}\r\n          >\r\n            Create\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateIndexModal;\r\n\r\nexport const createIndex = (url: string) => {\r\n  callComponent<CreateIndexModalProps, boolean>({ Component: CreateIndexModal, props: { url } });\r\n};\r\n","import { Document, getCollection, GetCollectionOptions } from \"api/collections\";\r\nimport { useNotify } from \"components/NotificationsProvider\";\r\nimport { FilterType } from \"components/TableElements/CollectionTable\";\r\nimport { createIndex } from \"components/TableElements/CreateIndex\";\r\nimport { useEffect, useRef, useState, useCallback } from \"react\";\r\n\r\ninterface UseFetchProps {\r\n  collectionId: string;\r\n  filters?: FilterType[];\r\n  orderBy?: { fieldId: string; direction: \"asc\" | \"desc\" };\r\n  inView: boolean;\r\n}\r\n\r\nconst useFetch = ({ collectionId, filters = [], orderBy, inView }: UseFetchProps) => {\r\n  const [docs, setDocs] = useState<Document[]>([]);\r\n  const inViewRef = useRef(false);\r\n  const endReached = useRef(false);\r\n  const filterSortTriggered = useRef(false);\r\n  const notify = useNotify();\r\n  const [loading, setLoading] = useState(false);\r\n  const abortController = useRef(new AbortController());\r\n  const [filterSortCounter, setFilterSortCounter] = useState(0);\r\n\r\n  const getOptions = useCallback(\r\n    (data: Document[]) => {\r\n      let options: GetCollectionOptions = { collectionId };\r\n\r\n      options.where = \"\";\r\n      options.orderBy = \"\";\r\n\r\n      filters.forEach((f, i) => {\r\n        options.where += (i > 0 ? \";\" : \"\") + f.fieldId + \",\" + f.operator + \",\" + f.value;\r\n        if (orderBy && orderBy.fieldId !== f.fieldId) {\r\n          options.orderBy += (options.orderBy ? \";\" : \"\") + f.fieldId;\r\n        }\r\n      });\r\n\r\n      if (orderBy) {\r\n        options.orderBy += (options.orderBy ? \";\" : \"\") + `${orderBy.fieldId},${orderBy.direction}`;\r\n      }\r\n      if (!orderBy && !filters.length) {\r\n        options.orderBy = \"createdAt,asc\";\r\n      }\r\n\r\n      if (data.length) {\r\n        options.startAfter = data[data.length - 1][orderBy ? orderBy.fieldId : \"createdAt\"];\r\n      }\r\n      options.populateRef = false;\r\n\r\n      return options;\r\n    },\r\n    [orderBy, filters, collectionId]\r\n  );\r\n\r\n  const onError = (message: string) => {\r\n    if (message.includes(\"FAILED_PRECONDITION\")) {\r\n      createIndex(message.split(\"it here:\")[1]);\r\n    } else {\r\n      notify(message, { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    inViewRef.current = inView;\r\n    const fetcher = async () => {\r\n      if ((!endReached.current && inViewRef.current) || filterSortTriggered.current) {\r\n        let triggeredBySortFilter = filterSortTriggered.current;\r\n        filterSortTriggered.current = false;\r\n\r\n        let options = getOptions(triggeredBySortFilter ? [] : docs);\r\n        setLoading(true);\r\n\r\n        const newData = await getCollection(options, abortController.current.signal);\r\n\r\n        if (newData.error) {\r\n          if (newData.error !== \"aborted\") {\r\n            onError(newData.error);\r\n          }\r\n        } else {\r\n          setDocs((prev) => (triggeredBySortFilter ? newData : [...prev, ...newData]));\r\n          if (newData.length < (options.limit || 10)) {\r\n            endReached.current = true;\r\n          }\r\n        }\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetcher();\r\n\r\n    return () => {\r\n      abortController.current.abort();\r\n      abortController.current = new AbortController();\r\n    };\r\n  }, [inView, docs, filterSortCounter]);\r\n\r\n  useEffect(() => {\r\n    filterSortTriggered.current = true;\r\n    endReached.current = false;\r\n    setFilterSortCounter((prev) => prev + 1);\r\n  }, [filters, orderBy]);\r\n\r\n  return { docs, setDocs, loading };\r\n};\r\n\r\nexport default useFetch;\r\n","import { Document } from \"api/collections\";\r\nimport { CollectionType, AnyField } from \"api/collectionTypes\";\r\nimport { deleteDocument } from \"api/collections\";\r\nimport FilesCell from \"./FilesCell\";\r\nimport React, { useEffect } from \"react\";\r\nimport ExpandMoreRounded from \"@mui/icons-material/ExpandMoreRounded\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport AddFilter from \"./AddFilter\";\r\nimport Button from \"components/Button\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport classNames from \"classnames\";\r\nimport useFetch from \"hooks/useFetch\";\r\nimport { InView } from \"react-intersection-observer\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport moment from \"moment\";\r\n\r\nexport interface TableProps {\r\n  collectionType: CollectionType;\r\n  onPick?: (a: Document[]) => void;\r\n  blackList?: string[];\r\n  singleSelect?: boolean;\r\n  valueFormatters?: { [key: string]: (val: any) => any };\r\n  groundColor: \"white\" | \"black\";\r\n  filters?: FilterType[];\r\n  onEdit?: (doc: Document) => void;\r\n  hideFilters?: boolean;\r\n}\r\n\r\nexport type FilterType = { fieldId: string; operator: string; value: string; hidden?: boolean };\r\n\r\nconst Table: React.FC<TableProps> = ({\r\n  collectionType,\r\n  onPick,\r\n  blackList = [],\r\n  singleSelect = false,\r\n  valueFormatters,\r\n  groundColor,\r\n  filters: _filters = [],\r\n  onEdit: _onEdit,\r\n  hideFilters = false,\r\n}) => {\r\n  const history = useHistory();\r\n\r\n  const [filters, setFilters] = React.useState<FilterType[]>([]);\r\n  const fields = collectionType.fields.filter((field) => field.displayOnTable);\r\n  const [selected, setSelected] = React.useState<string[]>([]);\r\n  const [orderBy, setOrderBy] = React.useState<{ fieldId: string; direction: \"asc\" | \"desc\" }>();\r\n  const [endIsInView, setEndIsInView] = React.useState(false);\r\n\r\n  const { docs, setDocs } = useFetch({\r\n    collectionId: collectionType.id,\r\n    filters,\r\n    orderBy,\r\n    inView: endIsInView,\r\n  });\r\n\r\n  const onDeleteSelected = async () => {\r\n    if (await confirm({ confirmation: `Delete ${selected.length} documents?` })) {\r\n      selected.forEach((x) => {\r\n        deleteDocument(collectionType.id, x);\r\n      });\r\n      setDocs((prev) => prev.filter((x) => !selected.includes(x.docId)));\r\n      setSelected([]);\r\n    }\r\n  };\r\n\r\n  const onEdit =\r\n    _onEdit ||\r\n    ((doc: Document) => {\r\n      history.push(`/collections/${collectionType.id}/edit/${doc.docId}`);\r\n    });\r\n\r\n  const onOrder = (field: AnyField) =>\r\n    orderBy?.fieldId !== field.id\r\n      ? () => {\r\n          setOrderBy({ fieldId: field.id, direction: \"asc\" });\r\n        }\r\n      : orderBy?.direction !== \"asc\"\r\n      ? () => setOrderBy(undefined)\r\n      : () => setOrderBy({ fieldId: field.id, direction: \"desc\" });\r\n\r\n  const selectAll = (select: boolean) => setSelected(select ? docs.map((x) => x.docId) : []);\r\n\r\n  const selectHandler = (docId: string, checked: boolean) => {\r\n    if (checked) {\r\n      if (singleSelect) {\r\n        setSelected([docId]);\r\n      } else {\r\n        setSelected((prev) => [...prev, docId]);\r\n      }\r\n\r\n      return;\r\n    }\r\n    setSelected((prev) => {\r\n      let arr = [...prev];\r\n      let index = arr.findIndex((x) => x === docId);\r\n      if (index != null) {\r\n        arr.splice(index, 1);\r\n      }\r\n      return arr;\r\n    });\r\n  };\r\n\r\n  const formatValue = (field: AnyField, value: any) => {\r\n    return field.type === \"date\"\r\n      ? moment(value).format(\"YYYY-MM-DD HH:mm\")\r\n      : valueFormatters && field.id in valueFormatters\r\n      ? valueFormatters[field.id](value)\r\n      : value.toString().substring(0, 40);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (_filters.length) {\r\n      setFilters((prev) => [...prev, ..._filters]);\r\n    }\r\n  }, [_filters]);\r\n\r\n  return (\r\n    <div className=\"h-full w-full flex-col flex\">\r\n      <div className=\"flex justify-between mb-3\">\r\n        {hideFilters ? null : (\r\n          <div className=\"flex flex-wrap\">\r\n            <AddFilter\r\n              collectionType={collectionType}\r\n              onValue={(val: FilterType) => setFilters((prev) => [val, ...prev])}\r\n            ></AddFilter>\r\n            {filters.map((f, i) =>\r\n              f.hidden ? null : (\r\n                <div\r\n                  key={`f-${i}`}\r\n                  className={classNames(\r\n                    \"rounded min-h-28px border leading-28px pl-3 text-sm pr-3 flex mr-3 mb-3 relative\",\r\n                    { \"text-white border-white\": groundColor === \"black\" },\r\n                    { \"text-black border-black\": groundColor === \"white\" }\r\n                  )}\r\n                >\r\n                  {f.fieldId} {f.operator} {f.value}{\" \"}\r\n                  <span\r\n                    onClick={() =>\r\n                      setFilters((prev) => {\r\n                        let arr = [...prev];\r\n                        arr.splice(i, 1);\r\n                        return arr;\r\n                      })\r\n                    }\r\n                    className=\"text-xs leading-28px ml-3 cursor-pointer\"\r\n                  >\r\n                    ✕\r\n                  </span>\r\n                </div>\r\n              )\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {!onPick ? (\r\n          <Button\r\n            onClick={onDeleteSelected}\r\n            disabled={selected.length === 0}\r\n            className={`px-7 mb-3 min-w-unset h-28px ${\r\n              selected.length === 0\r\n                ? \"bg-gray-E1E1E1 text-gray-6C6C6C cursor-default\"\r\n                : \"bg-red-FF0000 hover:bg-red-FF0000-hover text-white\"\r\n            } `}\r\n          >\r\n            Delete\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            onClick={() => onPick(docs.filter((x) => selected.includes(x.docId)))}\r\n            className={`h-28px min-w-unset mb-3 px-7 ${\r\n              selected.length === 0\r\n                ? \"bg-gray-300 text-gray-500 cursor-default\"\r\n                : \"bg-fireck-4 hover:bg-fireck-4-hover\"\r\n            } `}\r\n          >\r\n            Select\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <div\r\n        className={classNames(\"flex-grow h-0 -mt-3 rounded overflow-hidden bg-white\", {\r\n          \"shadow-border-gray\": groundColor === \"white\",\r\n        })}\r\n      >\r\n        <SimpleBar className={\"relative scrollbar-light h-full\"} autoHide={false}>\r\n          <table className=\"w-full text-center\">\r\n            <thead>\r\n              <tr className=\"whitespace-nowrap\">\r\n                <th className=\"sticky top-0 bg-gray-E1E1E1 z-10 px-1\">\r\n                  {singleSelect ? null : (\r\n                    <Checkbox\r\n                      size=\"small\"\r\n                      classes={{ checked: \"text-fireck-1\", root: \"p-0\" }}\r\n                      checked={selected.length === docs.length}\r\n                      onChange={(e) => selectAll(e.target.checked)}\r\n                    ></Checkbox>\r\n                  )}\r\n                </th>\r\n                {fields.map((field, i) => (\r\n                  <th className=\"font-semibold sticky top-0 bg-gray-E1E1E1\" key={`th-${i}`}>\r\n                    <div className=\"flex items-center justify-center\">\r\n                      <div className=\"w-5\"></div>\r\n                      <div className=\"cursor-pointer select-none\" onClick={onOrder(field)}>\r\n                        {field.id}\r\n                      </div>\r\n                      <div className=\"w-5\">\r\n                        {orderBy?.fieldId === field.id ? (\r\n                          <ExpandMoreRounded\r\n                            fontSize=\"small\"\r\n                            className={`${\r\n                              orderBy?.direction === \"asc\" ? \"transform rotate-180\" : \"\"\r\n                            }`}\r\n                          ></ExpandMoreRounded>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {docs.map((doc, i) =>\r\n                blackList.includes(doc.docId) ? null : (\r\n                  <tr\r\n                    onClick={() =>\r\n                      onPick ? selectHandler(doc.docId, !selected.includes(doc.docId)) : onEdit(doc)\r\n                    }\r\n                    key={`row-${i}`}\r\n                    className={\"cursor-pointer hover:bg-fireck-4\"}\r\n                  >\r\n                    <td className=\"px-1\" onClick={(e) => e.stopPropagation()}>\r\n                      <Checkbox\r\n                        size=\"small\"\r\n                        classes={{ checked: \"text-fireck-1\", root: \"p-0\" }}\r\n                        checked={selected.includes(doc.docId)}\r\n                        onChange={(e) => selectHandler(doc.docId, e.target.checked)}\r\n                      ></Checkbox>\r\n                    </td>\r\n                    {fields.map((field, j) => (\r\n                      <td key={`row-${i}-col-${j}`} className=\"px-2\">\r\n                        {doc[field.id] != null ? (\r\n                          field.type === \"media\" ? (\r\n                            field.mediaSingle ? (\r\n                              <FilesCell file={doc[field.id]}></FilesCell>\r\n                            ) : (\r\n                              <FilesCell files={doc[field.id]} />\r\n                            )\r\n                          ) : (\r\n                            <div className=\"whitespace-nowrap\">\r\n                              {formatValue(field, doc[field.id])}\r\n                            </div>\r\n                          )\r\n                        ) : null}\r\n                      </td>\r\n                    ))}\r\n                  </tr>\r\n                )\r\n              )}\r\n              <tr>\r\n                <td colSpan={fields.length + 1}>\r\n                  <InView\r\n                    onChange={async (inView) => {\r\n                      setEndIsInView(inView);\r\n                    }}\r\n                  >\r\n                    <div className=\"w-full\"></div>\r\n                  </InView>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <div></div>\r\n        </SimpleBar>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import Modal from \"@mui/material/Modal\";\r\nimport Input from \"components/Input\";\r\nimport Select from \"components/Select\";\r\nimport Button from \"components/Button\";\r\nimport { CollectionType } from \"api/collectionTypes\";\r\nimport React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Label from \"components/Label\";\r\nimport CloseRounded from \"@mui/icons-material/CloseRounded\";\r\n\r\nexport interface AddFilterModalProps {\r\n  collectionType: Pick<CollectionType, \"fields\">;\r\n  onValue: Function;\r\n  groundColor?: \"black\" | \"white\";\r\n}\r\n\r\nconst AddFilterModal: React.FC<AddFilterModalProps> = ({\r\n  collectionType,\r\n  onValue,\r\n  groundColor = \"white\",\r\n}) => {\r\n  const operators = [\r\n    \"<\",\r\n    \"<=\",\r\n    \"==\",\r\n    \">\",\r\n    \">=\",\r\n    \"!=\",\r\n    \"array-contains\",\r\n    \"array-contains-any\",\r\n    \"in\",\r\n    \"not-in\",\r\n  ];\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const { values, errors, handleChange, submitCount, handleSubmit, isSubmitting } = useFormik({\r\n    onSubmit: async (vals, { resetForm }) => {\r\n      onValue(vals);\r\n      setOpen(false);\r\n      resetForm();\r\n    },\r\n    initialValues: {\r\n      value: \"\",\r\n      operator: \"\",\r\n      fieldId: \"\",\r\n    },\r\n    validate: (vals: any) => {\r\n      let errors: any = {};\r\n      Object.keys(vals).forEach((x) => {\r\n        if (!vals[x]) {\r\n          errors[x] = \"Required\";\r\n        }\r\n      });\r\n      return errors;\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => setOpen(true)}\r\n        className=\"bg-fireck-4 hover:bg-fireck-4-hover min-w-unset flex items-center justify-center h-28px px-7 rounded text-sm mr-3 mb-3\"\r\n      >\r\n        Filters\r\n      </Button>\r\n      {!open ? null : (\r\n        <Modal open={open}>\r\n          <div\r\n            className=\"fixed left-0 top-0 w-full h-full flex p-7\"\r\n            onMouseDown={() => setOpen(false)}\r\n          >\r\n            <div\r\n              onMouseDown={(e) => e.stopPropagation()}\r\n              className=\"bg-white rounded p-7 m-auto relative animate-littlemoveup\"\r\n              style={{ maxWidth: 600 }}\r\n            >\r\n              <CloseRounded\r\n                className=\"absolute top-0 right-0 cursor-pointer\"\r\n                onClick={() => setOpen(false)}\r\n              ></CloseRounded>\r\n              <div className=\"flex flex-wrap -mx-2 mb-4\">\r\n                <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n                  <Label\r\n                    groundColor={groundColor}\r\n                    className=\"mb-2\"\r\n                    error={submitCount > 0 ? errors.fieldId : null}\r\n                  >\r\n                    Field\r\n                  </Label>\r\n                  <Select\r\n                    className=\"h-34px\"\r\n                    groundColor=\"white\"\r\n                    name=\"fieldId\"\r\n                    onChange={handleChange}\r\n                    value={values.fieldId}\r\n                    options={[\r\n                      { value: \"\", label: \"Select\" },\r\n                      ...collectionType.fields.map((x) => ({ value: x.id, label: x.id })),\r\n                    ]}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n                  <Label\r\n                    groundColor={groundColor}\r\n                    className=\"mb-2\"\r\n                    error={submitCount > 0 ? errors.operator : null}\r\n                  >\r\n                    Operator\r\n                  </Label>\r\n                  <Select\r\n                    className=\"h-34px\"\r\n                    groundColor=\"white\"\r\n                    name=\"operator\"\r\n                    onChange={handleChange}\r\n                    value={values.operator}\r\n                    options={[\r\n                      { value: \"\", label: \"Select\" },\r\n                      ...operators.map((x) => ({ value: x, label: x })),\r\n                    ]}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n                  <Label\r\n                    groundColor={groundColor}\r\n                    className=\"mb-2 text-black\"\r\n                    error={submitCount > 0 ? errors.value : null}\r\n                  >\r\n                    Value\r\n                  </Label>\r\n                  <Input\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === \"Enter\") {\r\n                        e.preventDefault();\r\n                        handleSubmit();\r\n                      }\r\n                    }}\r\n                    groundColor=\"white\"\r\n                    placeholder={\r\n                      [\"in\", \"not in\", \"array-contains-any\"].includes(values.operator)\r\n                        ? \"value, value, value\"\r\n                        : \"value\"\r\n                    }\r\n                    className=\"placeholder-black h-34px\"\r\n                    value={values.value}\r\n                    onChange={handleChange}\r\n                    name=\"value\"\r\n                  ></Input>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex justify-end\">\r\n                <Button\r\n                  disabled={isSubmitting}\r\n                  onClick={() => handleSubmit()}\r\n                  className=\"bg-fireck-4 hover:bg-fireck-4-hover h-34px\"\r\n                >\r\n                  Add\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddFilterModal;\r\n","import { forwardRef } from \"react\";\r\n\r\nconst TooltipChild = forwardRef(function MyComponent(props: any, ref: any) {\r\n  return <div {...props} ref={ref}></div>;\r\n});\r\n\r\nexport default TooltipChild;\r\n","import TooltipChild from \"components/TooltipChild\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\n\r\ninterface MediaFieldProps {\r\n  src: string;\r\n}\r\n\r\nconst MediaField: React.FC<MediaFieldProps> = ({ src }) => {\r\n  return (\r\n    <Tooltip\r\n      arrow\r\n      title={\r\n        <div className=\"p-1\">\r\n          <img src={src} className=\"max-w-136px max-h-136px w-auto h-auto\" alt=\"\" />\r\n        </div>\r\n      }\r\n      placement=\"top\"\r\n      classes={{\r\n        tooltip: \"font-poppins text-xs p-0 rounded bg-fireck-1\",\r\n        arrow: \"text-fireck-1\",\r\n      }}\r\n    >\r\n      <TooltipChild>\r\n        <div className=\"group w-4 h-4 relative flex items-center justify-center rounded hover:bg-gray-535371 hover:bg-opacity-5 cursor-pointer\">\r\n          <div\r\n            className=\"relative w-4 h-4 rounded-full bg-center bg-cover pointer-events-none\"\r\n            style={{ backgroundImage: `url(${src})` }}\r\n          ></div>\r\n        </div>\r\n      </TooltipChild>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default MediaField;\r\n","import React from \"react\";\r\nimport MediaField from \"./MediaField\";\r\n\r\nexport interface FilesProps {\r\n  files?: string[];\r\n  file?: string;\r\n}\r\n\r\nconst Files: React.FC<FilesProps> = ({ files, file }) => {\r\n  const id = React.useRef<number>(Math.random());\r\n\r\n  return (\r\n    <div className=\"flex justify-center\">\r\n      {(files ? files : file ? [file] : []).slice(0, 4).map((f, i) => (\r\n        <div key={`${id}-file-${i}`} className=\"mr-0.5\">\r\n          <MediaField src={f}></MediaField>\r\n        </div>\r\n      ))}\r\n      {files && files.length > 4 ? (\r\n        <div className=\"relative\">\r\n          <div className=\"w-4 h-4 rounded-full bg-fireck-4 text-10px flex items-center justify-center\">\r\n            {files.length - 4}+\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Files;\r\n","import Button from \"components/Button\";\r\nimport React, { ReactElement, useState } from \"react\";\r\nimport Edit from \"@material-ui/icons/EditRounded\";\r\nimport Select from \"components/Select\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport AddRounded from \"@material-ui/icons/AddRounded\";\r\nimport SearchRounded from \"@material-ui/icons/SearchRounded\";\r\n\r\nexport interface SettingsPageProps {\r\n  entity: string;\r\n  enitityPlural: string;\r\n  onAddEntity?: () => void;\r\n  entities: { name: string; docId: string }[];\r\n  onSelectEntity: (id: string) => void;\r\n  entityButtons: ReactElement;\r\n  onInvokeEntityEdit?: () => void;\r\n  entityContent: ReactElement;\r\n  selectedEntityId: string;\r\n}\r\n\r\nexport const reorder = (list: any[], startIndex: number, endIndex: number) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst SettingsPage: React.FC<SettingsPageProps> = React.memo(\r\n  ({\r\n    entity,\r\n    enitityPlural,\r\n    onAddEntity,\r\n    entities,\r\n    onSelectEntity,\r\n    entityButtons,\r\n    onInvokeEntityEdit,\r\n    entityContent,\r\n    selectedEntityId,\r\n  }) => {\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    return (\r\n      <div className=\"h-full flex flex-col\">\r\n        <div className=\"flex flex-wrap justify-between mb-4\">\r\n          <div className=\"font-medium text-27px leading-none mb-4 mr-4 text-white capitalize\">\r\n            {enitityPlural}\r\n          </div>\r\n          {!onAddEntity ? null : (\r\n            <Button\r\n              data-testid=\"add-collection-btn\"\r\n              onClick={onAddEntity}\r\n              className=\"bg-fireck-4 hover:bg-fireck-4-hover mb-4 min-w-unset\"\r\n            >\r\n              <div className=\"flex items-center pointer-events-none h-34px\">\r\n                <AddRounded className=\"mr-2 text-lg\" fontSize=\"inherit\"></AddRounded>\r\n                <span className=\"hidden md:block\">Add {entity}</span>\r\n                <span className=\"md:hidden\">Add</span>\r\n              </div>\r\n            </Button>\r\n          )}\r\n        </div>\r\n        {!entities.length ? (\r\n          <div></div>\r\n        ) : (\r\n          <div className=\"flex flex-wrap lg:flex-nowrap w-full flex-grow\">\r\n            <div>\r\n              <div className=\"relative mr-4 hidden lg:block\" style={{ width: 180 }}>\r\n                <SearchRounded\r\n                  fontSize=\"inherit\"\r\n                  className=\"absolute text-base left-1 top-1 text-gray-500 pointer-events-none\"\r\n                ></SearchRounded>\r\n                <input\r\n                  type=\"search\"\r\n                  spellCheck={false}\r\n                  placeholder=\"Search\"\r\n                  className=\"text-white placeholder-gray-500 pl-7 hover:bg-fireck-2 focus:bg-fireck-2 w-full text-sm mb-3 px-2 border-white rounded bg-transparent outline-none focus:outline-none\"\r\n                  value={search}\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                ></input>\r\n              </div>\r\n              <SimpleBar\r\n                style={{ maxHeight: 230 }}\r\n                className=\"max-w-192px w-full flex-shrink-0 mr-4 hidden lg:block scrollbar-dark pr-3\"\r\n                autoHide={false}\r\n              >\r\n                {entities\r\n                  .filter((x) => !search || x.name.toLowerCase().includes(search.toLowerCase()))\r\n                  .map((x) => (\r\n                    <div\r\n                      data-testid={`entity-name-${x.name}`}\r\n                      onClick={() => {\r\n                        onSelectEntity(x.docId);\r\n                      }}\r\n                      key={`entity-${x.docId}`}\r\n                      className={`mb-1 capitalize truncate select-none cursor-pointer ${\r\n                        selectedEntityId === x.docId\r\n                          ? \"bg-fireck-4\"\r\n                          : \"hover:bg-fireck-1-hover text-white\"\r\n                      } rounded h-28px leading-28px px-3`}\r\n                    >\r\n                      {x.name}\r\n                    </div>\r\n                  ))}\r\n              </SimpleBar>\r\n            </div>\r\n\r\n            <div className=\"lg:flex-grow w-full rounded-lg bg-fireck-3 p-7 flex flex-col\">\r\n              <div className=\"flex justify-between mb-3 flex-wrap\">\r\n                <div className=\"font-medium text-22px capitalize mb-3 mr-3 text-white\">\r\n                  <span className=\"hidden lg:inline-block\">\r\n                    {entities.find((x) => x.docId === selectedEntityId)?.name || \"\"}\r\n                  </span>\r\n                  <div className=\"lg:hidden inline-block text-black text-base\">\r\n                    <Select\r\n                      className=\"h-28px\"\r\n                      groundColor=\"black\"\r\n                      onChange={(e) => onSelectEntity(e.target.value)}\r\n                      value={selectedEntityId}\r\n                      options={entities.map((x) => ({ label: x.name, value: x.docId }))}\r\n                    ></Select>\r\n                  </div>\r\n                  {!onInvokeEntityEdit ? null : (\r\n                    <Edit\r\n                      data-testid=\"edit-collection-btn\"\r\n                      onClick={onInvokeEntityEdit}\r\n                      className=\"ml-3 text-lg cursor-pointer\"\r\n                      fontSize=\"inherit\"\r\n                    ></Edit>\r\n                  )}\r\n                </div>\r\n                {entityButtons}\r\n              </div>\r\n\r\n              <div className=\"flex-grow h-0\">{entityContent}</div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default SettingsPage;\r\n"],"sourceRoot":""}