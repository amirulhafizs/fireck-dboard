{"version":3,"sources":["components/Select.tsx","../node_modules/@material-ui/icons/AddRounded.js","../node_modules/@material-ui/icons/Create.js","api/roles.ts","pages/Roles/RoleEditor.tsx","pages/Roles/RoleModal.tsx","pages/Roles/index.tsx"],"names":["WarningIcon","React","forwardRef","props","ref","className","size","Select","options","error","spellCheck","map","x","i","value","label","title","placement","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","getAuthHeader","user","store","getState","token","permissions","createRole","role","a","fetch","window","location","origin","method","headers","Authorization","body","JSON","stringify","then","json","updateRole","docId","getRoles","RoleEditor","collections","onSave","setEditRole","useState","roleCopy","setRoleCopy","isSaving","setIsSaving","useEffect","parse","hasBeenChanged","name","onClick","fontSize","Button","disabled","p","c","pi","Checkbox","classes","checked","includes","onChange","e","prev","target","perms","push","sort","b","index","findIndex","perm","splice","length","RoleModal","open","onClose","editRole","notify","useNotify","useFormik","onSubmit","vals","res","variant","enableReinitialize","initialValues","defaultPermissions","validate","errors","values","isSubmitting","submitCount","handleChange","setFieldValue","handleSubmit","Modal","hideBackdrop","GrayInput","FormControlLabel","control","Roles","roleModalOpen","setRoleModalOpen","roles","setRoles","selectedRole","setSelectedRole","collectionTypes","useSelector","state","dispatch","useDispatch","type","payload","console","log","undefined","parseInt","r","arr"],"mappings":"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","file":"static/js/13.482dce87.chunk.js","sourcesContent":["import { IoAlertCircleOutline } from \"react-icons/io5\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport React, { SelectHTMLAttributes } from \"react\";\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <IoAlertCircleOutline className=\"text-red-500\" size={20}></IoAlertCircleOutline>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport interface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n  options: { label: string; value: string | number }[];\r\n  error?: string | boolean;\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({ className = \"\", options, error, ...props }) => {\r\n  return (\r\n    <div className={`${className} relative flex items-center`}>\r\n      <select\r\n        className={`px-3 h-34px border-2 border-solid w-full rounded outline-none ${\r\n          error ? \"border-red-400\" : \"focus:border-blue-300  border-gray-300 bg-gray-300\"\r\n        }`}\r\n        {...props}\r\n        spellCheck={false}\r\n      >\r\n        {options.map((x, i) => (\r\n          <option key={\"opt-\" + i} value={x.value}>\r\n            {x.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18 13h-5v5c0 .55-.45 1-1 1s-1-.45-1-1v-5H6c-.55 0-1-.45-1-1s.45-1 1-1h5V6c0-.55.45-1 1-1s1 .45 1 1v5h5c.55 0 1 .45 1 1s-.45 1-1 1z\"\n}), 'AddRounded');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Create');\n\nexports.default = _default;","import store from \"store\";\r\n\r\nconst getAuthHeader = () => {\r\n  const user = store.getState().user;\r\n  const token = user ? user.token : null;\r\n  return \"Bearer \" + token;\r\n};\r\n\r\nexport type RoleType = \"admin\" | \"user\";\r\nexport type CollectionPermission = \"find\" | \"find one\" | \"count\" | \"create\" | \"update\" | \"delete\";\r\n\r\nexport const permissions: CollectionPermission[] = [\r\n  \"find\",\r\n  \"find one\",\r\n  \"count\",\r\n  \"create\",\r\n  \"update\",\r\n  \"delete\",\r\n];\r\n\r\nexport type RoleDocument = {\r\n  docId: string;\r\n  name: string;\r\n  defaultPermissions: CollectionPermission[];\r\n  permissions: { [collectionName: string]: CollectionPermission[] };\r\n};\r\n\r\nexport const createRole = async (\r\n  role: Omit<RoleDocument, \"docId\">\r\n): Promise<{ error: string } | RoleDocument> => {\r\n  try {\r\n    return fetch(`${window.location.origin}/private/roles/`, {\r\n      method: \"POST\",\r\n      headers: { Authorization: getAuthHeader() },\r\n      body: JSON.stringify(role),\r\n    }).then((x) => x.json());\r\n  } catch (error: any) {\r\n    return { error };\r\n  }\r\n};\r\n\r\nexport const updateRole = async (role: RoleDocument): Promise<{ error: string } | RoleDocument> => {\r\n  try {\r\n    return fetch(`${window.location.origin}/private/roles/${role.docId}`, {\r\n      method: \"PUT\",\r\n      headers: { Authorization: getAuthHeader() },\r\n      body: JSON.stringify(role),\r\n    }).then((x) => x.json());\r\n  } catch (error: any) {\r\n    return { error };\r\n  }\r\n};\r\n\r\nexport const getRoles = async (): Promise<Array<RoleDocument> | { error: string }> => {\r\n  try {\r\n    return fetch(`${window.location.origin}/private/roles`, {\r\n      headers: { Authorization: getAuthHeader() },\r\n    }).then((x) => x.json());\r\n  } catch (error: any) {\r\n    return { error };\r\n  }\r\n};\r\n\r\nexport const getRolesCount = async () => {\r\n  try {\r\n    return fetch(window.location.origin + `/private/roles/count`, {\r\n      headers: { Authorization: getAuthHeader() },\r\n    }).then((x) => x.json());\r\n  } catch (error) {\r\n    return { error };\r\n  }\r\n};\r\n\r\nexport const deleteRole = (docId: string, storagePath: string) => {\r\n  try {\r\n    return fetch(window.location.origin + `/private/roles`, {\r\n      method: \"DELETE\",\r\n      headers: { Authorization: getAuthHeader() },\r\n      body: JSON.stringify({ docId, storagePath }),\r\n    }).then((x) => x.json());\r\n  } catch (error) {\r\n    return { error };\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport Button from \"components/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { permissions, RoleDocument } from \"api/roles\";\r\nimport Create from \"@material-ui/icons/Create\";\r\nimport { CollectionType } from \"api/collectionTypes\";\r\n\r\nexport interface RoleEditorProps {\r\n  role: RoleDocument;\r\n  collections: CollectionType[];\r\n  onSave: (r: RoleDocument) => void;\r\n  setEditRole: (a: RoleDocument) => void;\r\n}\r\n\r\nconst RoleEditor: React.FC<RoleEditorProps> = ({ role, collections, onSave, setEditRole }) => {\r\n  const [roleCopy, setRoleCopy] = React.useState<RoleDocument>();\r\n  const [isSaving, setIsSaving] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (role) {\r\n      setRoleCopy(JSON.parse(JSON.stringify(role)));\r\n    }\r\n  }, [role]);\r\n\r\n  const hasBeenChanged = !(JSON.stringify(role) === JSON.stringify(roleCopy));\r\n\r\n  return roleCopy ? (\r\n    <div className=\"bg-gray-300 p-9 rounded\">\r\n      <div className=\"flex justify-between mb-3 flex-wrap\">\r\n        <div className=\"flex mr-3 mb-4 items-center\">\r\n          <div className=\"text-2xl font-medium\">{roleCopy.name}</div>\r\n          <Create\r\n            onClick={() => {\r\n              setEditRole(roleCopy);\r\n            }}\r\n            className=\"ml-3 text-lg cursor-pointer\"\r\n            fontSize=\"inherit\"\r\n          ></Create>\r\n        </div>\r\n\r\n        <Button\r\n          onClick={async () => {\r\n            setIsSaving(true);\r\n            await onSave(roleCopy);\r\n            setIsSaving(false);\r\n          }}\r\n          disabled={!hasBeenChanged || isSaving}\r\n          className={`mb-4 ${\r\n            !hasBeenChanged && !isSaving\r\n              ? \"bg-white cursor-default text-gray-500\"\r\n              : \"bg-orange-300 hover:bg-orange-301\"\r\n          }`}\r\n        >\r\n          {isSaving ? \"Saving...\" : hasBeenChanged ? \"Save\" : \"Saved!\"}\r\n        </Button>\r\n      </div>\r\n      <div className=\"overflow-auto\">\r\n        <table className=\"w-full min-w-457px\">\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              {permissions.map((p, i) => (\r\n                <th className=\"font-normal pb-2\" key={p}>\r\n                  {p}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {collections.map((c, i) => (\r\n              <tr key={c.docId}>\r\n                <td>{c.name}</td>\r\n                {permissions.map((p, pi) => (\r\n                  <td key={p + c.docId} className=\"text-center\">\r\n                    <Checkbox\r\n                      classes={{ checked: \"text-blue-400\" }}\r\n                      checked={\r\n                        roleCopy.permissions[c.docId]\r\n                          ? roleCopy.permissions[c.docId].includes(p)\r\n                          : false\r\n                      }\r\n                      onChange={(e) =>\r\n                        setRoleCopy((prev) => {\r\n                          if (prev == null) {\r\n                            return prev;\r\n                          }\r\n                          const checked = e.target.checked;\r\n                          let perms = { ...prev.permissions };\r\n                          if (checked) {\r\n                            if (c.docId in perms) {\r\n                              perms[c.docId].push(p);\r\n                              perms[c.docId].sort((a, b) => (a > b ? 1 : a < b ? -1 : 0));\r\n                            } else {\r\n                              perms[c.docId] = [p];\r\n                            }\r\n                          } else {\r\n                            if (c.docId in perms) {\r\n                              let index = perms[c.docId].findIndex((perm) => perm === p);\r\n                              perms[c.docId].splice(index, 1);\r\n                              if (!perms[c.docId].length) {\r\n                                delete perms[c.docId];\r\n                              }\r\n                            }\r\n                          }\r\n\r\n                          return { ...prev, permissions: perms };\r\n                        })\r\n                      }\r\n                    ></Checkbox>\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default RoleEditor;\r\n","import Modal from \"@material-ui/core/Modal\";\r\nimport GrayInput from \"components/GrayInput\";\r\nimport { RoleDocument, permissions, createRole, updateRole } from \"api/roles\";\r\nimport React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Button from \"components/Button\";\r\nimport { useNotify } from \"components/NotificationsProvider\";\r\n\r\nexport interface RoleModalProps {\r\n  open: boolean;\r\n  onClose: Function;\r\n  editRole: RoleDocument | undefined;\r\n}\r\n\r\nconst RoleModal: React.FC<RoleModalProps> = ({ open, onClose, editRole }) => {\r\n  const notify = useNotify();\r\n\r\n  const { values, errors, isSubmitting, submitCount, handleChange, setFieldValue, handleSubmit } =\r\n    useFormik<Omit<RoleDocument, \"docId\"> & { docId?: string }>({\r\n      onSubmit: async (vals) => {\r\n        const res = vals.docId ? await updateRole(vals as RoleDocument) : await createRole(vals);\r\n\r\n        if (!(\"error\" in res)) {\r\n          notify(vals.docId ? \"Role updated!\" : \"Role created!\", { variant: \"success\" });\r\n          onClose();\r\n        } else {\r\n          notify(res.error, { variant: \"error\" });\r\n        }\r\n      },\r\n      enableReinitialize: true,\r\n      initialValues: editRole\r\n        ? editRole\r\n        : {\r\n            name: \"\",\r\n            defaultPermissions: [],\r\n            permissions: {},\r\n          },\r\n      validate: (vals) => {\r\n        let errors: Partial<typeof vals> = {};\r\n        if (vals.name.length === 0) {\r\n          errors.name = \"required\";\r\n        }\r\n        return errors;\r\n      },\r\n    });\r\n\r\n  return (\r\n    <Modal open={open} hideBackdrop>\r\n      <div className=\"w-full h-full flex overflow-auto bg-black bg-opacity-40\">\r\n        <div className=\"m-auto rounded bg-white max-w-644px w-full p-9\">\r\n          <div className=\"mb-9 font-medium text-2xl\">\r\n            {values.docId ? \"Edit role\" : \"Create role\"}\r\n          </div>\r\n          <div className=\"mb-9\">\r\n            <div className=\"mb-2\">Role name</div>\r\n            <GrayInput\r\n              disabled={[\"public\", \"authenticated\"].includes(values.name)}\r\n              onChange={handleChange}\r\n              name=\"name\"\r\n              value={values.name}\r\n              error={errors.name && submitCount > 0 ? errors.name : false}\r\n            ></GrayInput>\r\n          </div>\r\n          <div className=\"mb-2\">Default permissions</div>\r\n          <div className=\"flex flex-wrap mb-9\">\r\n            {permissions.map((p, i) => (\r\n              <div key={p} className=\"sm:w-1/3 w-1/2\">\r\n                <FormControlLabel\r\n                  classes={{ label: \"font-poppins line-clamp-1\" }}\r\n                  control={\r\n                    <Checkbox\r\n                      classes={{ checked: \"text-blue-300\" }}\r\n                      className=\"mr-3\"\r\n                      checked={values.defaultPermissions.includes(p)}\r\n                      onChange={(e) => {\r\n                        let perms = [...values.defaultPermissions];\r\n                        if (e.target.checked) {\r\n                          perms.push(p);\r\n                        } else {\r\n                          const index = perms.findIndex((perm) => perm === p);\r\n                          perms.splice(index, 1);\r\n                        }\r\n                        setFieldValue(\"defaultPermissions\", perms);\r\n                      }}\r\n                    ></Checkbox>\r\n                  }\r\n                  label={p}\r\n                ></FormControlLabel>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"flex justify-between\">\r\n            <Button onClick={() => onClose()} className=\"bg-blue-300 hover:bg-blue-400 text-white\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={() => handleSubmit()} className=\"bg-orange-300 hover:bg-orange-301\">\r\n              {isSubmitting ? \"Loading...\" : \"Submit\"}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RoleModal;\r\n","import Button from \"components/Button\";\r\nimport React from \"react\";\r\nimport AddRounded from \"@material-ui/icons/AddRounded\";\r\nimport Select from \"components/Select\";\r\nimport RoleEditor from \"./RoleEditor\";\r\nimport RoleModal from \"./RoleModal\";\r\nimport { getRoles, RoleDocument, updateRole } from \"api/roles\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"store\";\r\nimport { useNotify } from \"components/NotificationsProvider\";\r\n\r\nexport interface RolesProps {}\r\n\r\nconst Roles: React.FC<RolesProps> = () => {\r\n  const [roleModalOpen, setRoleModalOpen] = React.useState(false);\r\n  const [roles, setRoles] = React.useState<RoleDocument[]>([]);\r\n  const [selectedRole, setSelectedRole] = React.useState(0);\r\n  const [editRole, setEditRole] = React.useState<RoleDocument>();\r\n  const collectionTypes = useSelector((state: RootState) => state.collectionTypes);\r\n  const notify = useNotify();\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        if (!roleModalOpen && dispatch) {\r\n          dispatch({ type: \"SET_LOADING\", payload: true });\r\n          const res = await getRoles();\r\n          if (!(\"error\" in res)) {\r\n            setRoles(res);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        dispatch({ type: \"SET_LOADING\", payload: false });\r\n      }\r\n    })();\r\n  }, [roleModalOpen, dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    if (editRole) {\r\n      setRoleModalOpen(true);\r\n    }\r\n  }, [editRole]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex flex-wrap justify-between mb-6\">\r\n        <div className=\"font-medium text-36px leading-none mb-4 mr-4\">Roles</div>\r\n        <Button\r\n          onClick={() => setRoleModalOpen(true)}\r\n          className=\"bg-orange-300 hover:bg-orange-301 mb-4\"\r\n        >\r\n          <div className=\"flex items-center\">\r\n            <AddRounded className=\"mr-3 text-lg\" fontSize=\"inherit\"></AddRounded>\r\n            <span>Create role</span>\r\n          </div>\r\n        </Button>\r\n        <RoleModal\r\n          editRole={editRole}\r\n          open={roleModalOpen}\r\n          onClose={() => {\r\n            setRoleModalOpen(false);\r\n            setEditRole(undefined);\r\n          }}\r\n        ></RoleModal>\r\n      </div>\r\n      <div className=\"flex flex-wrap lg:flex-nowrap\">\r\n        <div className=\"max-w-192px mb-3 mr-4 block lg:hidden w-full\">\r\n          <Select\r\n            onChange={(e) => setSelectedRole(parseInt(e.target.value))}\r\n            value={selectedRole}\r\n            options={roles.map((x, i) => ({ label: x.name, value: i }))}\r\n          ></Select>\r\n        </div>\r\n\r\n        <div className=\"min-w-192px flex-shrink-0 mr-4 hidden lg:block\">\r\n          {roles.map((x, i) => (\r\n            <div\r\n              onClick={() => setSelectedRole(i)}\r\n              key={`collection-${i}`}\r\n              className={`mb-1 capitalize cursor-pointer ${\r\n                selectedRole === i ? \"bg-orange-300\" : \"hover:bg-gray-300\"\r\n              } rounded h-34px leading-34px px-3`}\r\n            >\r\n              {x.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {selectedRole < roles.length ? (\r\n          <div className=\"lg:flex-grow w-full lg:w-0\">\r\n            <RoleEditor\r\n              setEditRole={(r) => setEditRole(r)}\r\n              role={roles[selectedRole]}\r\n              collections={collectionTypes}\r\n              onSave={async (r) => {\r\n                const res = await updateRole(r);\r\n                if (!(\"error\" in res)) {\r\n                  setRoles((prev) => {\r\n                    let arr = [...prev];\r\n                    arr[selectedRole] = r;\r\n                    return arr;\r\n                  });\r\n                  notify(\"Role updated!\", { variant: \"success\" });\r\n                } else {\r\n                  notify(res.error, { variant: \"error\" });\r\n                }\r\n              }}\r\n            ></RoleEditor>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Roles;\r\n"],"sourceRoot":""}