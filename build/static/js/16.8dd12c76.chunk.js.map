{"version":3,"sources":["components/PageTitle.tsx","components/Select.tsx","components/EmptyScreen.tsx","components/Input.tsx","pages/Webhooks.tsx"],"names":["PageTitle","className","rest","classNames","WarningIcon","React","forwardRef","props","ref","size","Select","options","error","white","spellCheck","map","x","i","value","label","title","placement","EmptyScreen","onCreate","buttonTitle","onClick","fontSize","Input","Tooltip","initialWebhooks","find","method","url","create","update","delete","Webhooks","useState","collectionTypeDocId","setCollectionTypeDocId","collectionTypes","useSelector","state","colType","docId","dispatch","useDispatch","httpsMethods","webhooks","setWebhooks","prevState","setPrevState","useEffect","obj","JSON","parse","stringify","length","changed","history","useHistory","onChange","e","window","confirm","target","name","autoHide","id","Button","disabled","updateCollectionType","type","payload","hook","m","prev","placeholder","push"],"mappings":"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","file":"static/js/16.8dd12c76.chunk.js","sourcesContent":["import classNames from \"classnames\";\r\n\r\nexport interface PageTitleProps\r\n  extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {}\r\n\r\nconst PageTitle: React.FC<PageTitleProps> = ({ className, ...rest }) => {\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={classNames(\"text-34px font-medium capitalize leading-none\", className)}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default PageTitle;\r\n","import { IoAlertCircleOutline } from \"react-icons/io5\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport React, { SelectHTMLAttributes } from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <IoAlertCircleOutline className=\"text-red-500\" size={20}></IoAlertCircleOutline>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport interface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n  options: { label: string; value: string | number }[];\r\n  error?: string | boolean;\r\n  white?: boolean;\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({\r\n  className = \"\",\r\n  options,\r\n  error,\r\n  white = false,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={`${className} relative flex items-center`}>\r\n      <select\r\n        className={classNames(\"px-3 h-34px border-2 border-solid w-full rounded outline-none\", {\r\n          \"border-red-400\": error,\r\n          \"focus:border-blue-300\": !error,\r\n          \"border-gray-300 bg-gray-300\": !white,\r\n          \"border-white bg-white\": white,\r\n        })}\r\n        {...props}\r\n        spellCheck={false}\r\n      >\r\n        {options.map((x, i) => (\r\n          <option key={\"opt-\" + i} value={x.value}>\r\n            {x.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import Button from \"components/Button\";\r\n\r\nexport interface EmptyScreenProps {\r\n  title: string;\r\n  buttonTitle: string;\r\n  onCreate: () => void;\r\n}\r\n\r\nconst EmptyScreen: React.FC<EmptyScreenProps> = ({ title, onCreate, buttonTitle }) => {\r\n  return (\r\n    <div className=\"h-96 bg-gray-300 rounded-md flex w-full p-12\">\r\n      <div className=\"m-auto\">\r\n        <div className=\"text-22px mb-5 font-medium text-center\">{title}</div>\r\n        <Button className=\"mx-auto bg-orange-300 hover:bg-orange-301 block\" onClick={onCreate}>\r\n          {buttonTitle}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyScreen;\r\n","import ErrorRounded from \"@material-ui/icons/ErrorRounded\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport React, { InputHTMLAttributes } from \"react\";\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <ErrorRounded className=\"text-red-500 text-xl\" fontSize=\"inherit\"></ErrorRounded>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  className?: string;\r\n  error?: string | boolean;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ className = \"\", error, ...props }) => {\r\n  return (\r\n    <div className={`${className} relative flex items-center`}>\r\n      <input\r\n        className={`px-3 h-34px w-full rounded outline-none ${\r\n          error ? \"border-red-500\" : \"focus:border-blue-300 border-white\"\r\n        }  border-2 border-solid focus:border-3`}\r\n        {...props}\r\n        spellCheck={false}\r\n      ></input>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { HttpMethod, updateCollectionType } from \"api/collectionTypes\";\r\nimport classNames from \"classnames\";\r\nimport PageTitle from \"components/PageTitle\";\r\nimport Select from \"components/Select\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"store\";\r\nimport Button from \"components/Button\";\r\nimport Input from \"components/Input\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport EmptyScreen from \"components/EmptyScreen\";\r\nimport { Webhooks as WebhooksInterface, CmsEvent } from \"api/collectionTypes\";\r\n\r\nexport interface WebhooksProps {}\r\n\r\nconst initialWebhooks: WebhooksInterface = {\r\n  find: { method: \"POST\", url: \"\" },\r\n  \"find one\": { method: \"POST\", url: \"\" },\r\n  create: { method: \"POST\", url: \"\" },\r\n  update: { method: \"POST\", url: \"\" },\r\n  delete: { method: \"POST\", url: \"\" },\r\n};\r\n\r\nconst Webhooks: React.FC<WebhooksProps> = () => {\r\n  const [collectionTypeDocId, setCollectionTypeDocId] = useState<string>();\r\n  const collectionTypes = useSelector((state: RootState) => state.collectionTypes);\r\n  const colType = collectionTypes.find((x) => x.docId === collectionTypeDocId);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const httpsMethods = [\"POST\", \"DELETE\", \"PATCH\", \"PUT\", \"GET\"];\r\n  const cmsEvents: CmsEvent[] = [\"create\", \"delete\", \"find\", \"find one\", \"update\"];\r\n\r\n  const [webhooks, setWebhooks] = useState<WebhooksInterface>(initialWebhooks);\r\n  const [prevState, setPrevState] = useState<WebhooksInterface>(initialWebhooks);\r\n\r\n  useEffect(() => {\r\n    if (collectionTypeDocId) {\r\n      const obj = collectionTypes.find((x) => x.docId === collectionTypeDocId);\r\n      if (!obj) return;\r\n      if (obj.webhooks) {\r\n        setWebhooks(JSON.parse(JSON.stringify(obj.webhooks)));\r\n        setPrevState(obj.webhooks);\r\n      } else {\r\n        setWebhooks(JSON.parse(JSON.stringify(initialWebhooks)));\r\n        setPrevState(initialWebhooks);\r\n      }\r\n    }\r\n\r\n    if (collectionTypes.length && !collectionTypeDocId) {\r\n      setCollectionTypeDocId(collectionTypes[0].docId);\r\n    }\r\n  }, [collectionTypeDocId, collectionTypes]);\r\n\r\n  const changed = JSON.stringify(prevState) !== JSON.stringify(webhooks);\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      <PageTitle className=\"mb-1\">Webhooks</PageTitle>\r\n      <div className=\"mb-12\">Create webhooks for events in each collection</div>\r\n\r\n      {!collectionTypes.length ? (\r\n        <EmptyScreen\r\n          title=\"Create collection to add webhooks for\"\r\n          buttonTitle=\"Create collection type\"\r\n          onCreate={() => history.push(\"/collections\")}\r\n        ></EmptyScreen>\r\n      ) : (\r\n        <div className=\"flex flex-wrap lg:flex-nowrap\">\r\n          <div className=\"max-w-192px mb-3 mr-4 block lg:hidden w-full\">\r\n            <Select\r\n              onChange={(e) =>\r\n                !changed || window.confirm(\"Changes will be lost\")\r\n                  ? setCollectionTypeDocId(e.target.value)\r\n                  : {}\r\n              }\r\n              value={collectionTypeDocId}\r\n              options={collectionTypes.map((x) => ({ value: x.docId, label: x.name }))}\r\n            ></Select>\r\n          </div>\r\n\r\n          <SimpleBar\r\n            className=\"min-w-192px flex-shrink-0 mr-4 hidden lg:block select-none max-h-72 pr-4 scrollbar-dark\"\r\n            autoHide={false}\r\n          >\r\n            {collectionTypes.map((x) => (\r\n              <div\r\n                onClick={() =>\r\n                  !changed || window.confirm(\"Changes will be lost\")\r\n                    ? setCollectionTypeDocId(x.docId)\r\n                    : {}\r\n                }\r\n                key={x.id}\r\n                className={`mb-1 capitalize truncate cursor-pointer ${\r\n                  collectionTypeDocId === x.docId ? \"bg-orange-300\" : \"hover:bg-gray-300\"\r\n                } rounded h-34px leading-34px px-3`}\r\n              >\r\n                {x.name}\r\n              </div>\r\n            ))}\r\n          </SimpleBar>\r\n          <div className=\"lg:flex-grow w-full rounded bg-gray-300 p-7\">\r\n            {!colType ? null : (\r\n              <>\r\n                <div className=\"flex justify-between mb-4\">\r\n                  <div className=\"text-22px capitalize font-medium mb-3\">{colType.name}</div>\r\n                  <Button\r\n                    disabled={!changed}\r\n                    className={classNames(\"mb-3\", {\r\n                      \"cursor-default bg-white text-gray-400\": !changed,\r\n                      \"bg-orange-300 hover:bg-orange-301\": changed,\r\n                    })}\r\n                    onClick={() => {\r\n                      if (!collectionTypeDocId) return;\r\n                      updateCollectionType(collectionTypeDocId, { webhooks });\r\n                      dispatch({\r\n                        type: \"UPDATE_COLLECTION_TYPE\",\r\n                        docId: colType.docId,\r\n                        payload: { webhooks },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {!changed ? \"Saved!\" : \"Save\"}\r\n                  </Button>\r\n                </div>\r\n\r\n                {cmsEvents.map((x) => {\r\n                  const hook = webhooks[x];\r\n                  return (\r\n                    <div className=\"flex mb-2\">\r\n                      <div className=\"w-32\">On {x}</div>\r\n                      <Select\r\n                        className=\"mr-2\"\r\n                        white\r\n                        options={httpsMethods.map((m) => ({ value: m, label: m }))}\r\n                        value={hook.method}\r\n                        onChange={(e) => {\r\n                          setWebhooks((prev) => {\r\n                            let obj = { ...prev };\r\n                            obj[x].method = e.target.value as HttpMethod;\r\n                            return obj;\r\n                          });\r\n                        }}\r\n                      ></Select>\r\n                      <div className=\"flex-grow\">\r\n                        <Input\r\n                          value={hook.url}\r\n                          onChange={(e) => {\r\n                            setWebhooks((prev) => {\r\n                              let obj = { ...prev };\r\n                              obj[x].url = e.target.value;\r\n                              return obj;\r\n                            });\r\n                          }}\r\n                          placeholder=\"Type your url\"\r\n                          className=\"w-full placeholder-gray-300\"\r\n                        ></Input>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Webhooks;\r\n"],"sourceRoot":""}