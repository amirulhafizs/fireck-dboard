{"version":3,"sources":["components/Select.tsx","api/callComponent.tsx","components/Label.tsx","components/SettingsPage.tsx","components/IconButton.tsx","assets/one-to-one.svg","assets/one-to-many.svg","hooks/useDraggableInPortal.ts","components/DraggableList.tsx","api/collectionTypes.ts","components/ToupleInput.tsx","pages/CollectionTypes/CollectionModal.tsx","assets/subcollection.svg","components/FieldTypes/Wrapper.tsx","components/FieldTypes/String.tsx","components/FieldTypes/Number.tsx","components/FieldTypes/Map.tsx","components/FieldTypes/Array.tsx","components/FieldTypes/Boolean.tsx","components/FieldTypes/Date.tsx","components/FieldTypes/Media.tsx","components/FieldTypes/RichText.tsx","components/FieldTypes/Json.tsx","components/FieldTypes/Enum.tsx","components/FieldTypes/Password.tsx","components/FieldTypes/Relation.tsx","components/FieldTypes/index.tsx","components/FieldTypes/Subcollection.tsx","components/TypescriptSyntax.tsx","pages/CollectionTypes/InterfaceModal.tsx","pages/CollectionTypes/SelectFieldType.tsx","pages/CollectionTypes/SpecifyFieldDetails.tsx","pages/CollectionTypes/GetCollectionField.ts","pages/CollectionTypes/index.tsx"],"names":["WarningIcon","React","forwardRef","props","ref","className","size","Select","options","error","groundColor","classNames","spellCheck","map","x","i","data-testid","value","label","title","placement","callComponent","Component","Promise","resolve","reject","wrapper","document","getElementById","appendChild","createElement","ReactDOM","render","store","proceed","val","unmountComponentAtNode","parentNode","removeChild","fontSize","Label","children","SettingsPage","memo","entity","enitityPlural","onAddEntity","entities","onSelectEntity","entityButtons","onInvokeEntityEdit","entityContent","selectedEntityId","useState","search","setSearch","onClick","length","style","width","type","placeholder","onChange","e","target","maxHeight","autoHide","filter","name","toLowerCase","includes","docId","find","IconButton","rest","variant","_path","_circle","_circle2","_extends","Object","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgOneToOne","_ref","svgRef","titleId","height","viewBox","fill","xmlns","id","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","ForwardRef","_path2","_circle3","SvgOneToMany","useDraggableInPortal","self","useRef","current","useEffect","div","position","pointerEvents","top","elt","body","provided","args","element","draggableProps","createPortal","DraggableList","onDragEnd","Item","items","containerClassName","renderDraggable","uniqid","Math","random","formatId","keyword","index","droppableId","droppableProps","innerRef","draggableId","dragHandleProps","createCollectionType","a","ROLES_ID","finalType","fields","displayOnTable","isDefault","addDocument","doc","getCollection","collectionId","limit","forEach","updateDocument","permissions","defaultPermissions","then","res","console","log","toString","ToupleInput","setValue","disabled","opt","icon","createId","string","str","char","toUpperCase","match","COLLECTION_ID","AddNewCollection","open","onClose","collections","editingCollectionDocId","onCreate","onUpdate","onDelete","initialData","single","draftable","isSystem","notify","useNotify","formIntialState","useFormik","enableReinitialize","onSubmit","vals","resetForm","values","actionType","initialValues","validate","errors","findIndex","handleSubmit","handleChange","setFieldValue","isSubmitting","submitCount","Modal","hideBackdrop","maxWidth","Input","onKeyDown","Button","confirm","confirmation","deleteDocId","deleteDocument","Wrapper","String","Number","Map","Array","Boolean","Media","Enum","Password","Relation","SvgSubcollection","fieldTypes","Badge","Date","RichText","Json","TypescriptSyntax","code","theme","lineNumbers","readOnly","mode","getGap","count","reduce","b","getType","ident","identStep","docType","multiple","types","password","json","array","media","mediaSingle","date","enum","number","boolean","relation","relationOneToOne","collection","collectionFields","documentFields","script","any","generateInterface","colType","InterfaceModal","collectionType","copied","setCopied","interfaceString","onMouseDown","stopPropagation","navigator","clipboard","writeText","setTimeout","SelectFieldType","initialFieldInputType","fieldType","setFieldType","FieldTypes","replace","SpecifyFieldDetails","editableField","existingFieldNames","zLevel","enumOptions","stringLong","relatedCollectionTypeDocId","enumOption","setEnumOption","SelectedFieldType","useSelector","state","collectionTypes","result","destination","reorder","addEnumOption","arr","push","customErrors","splice","c","OneToOneIcon","OneToManyIcon","getCollectionField","field","t","f","editedField","res1","list","startIndex","endIndex","from","removed","CollectionsBuilder","collectionModalOpen","setCollectionModalOpen","dispatch","useDispatch","setEditingCollectionDocId","selectedCollection","setSelectedCollection","interfaceColType","setInterfaceColType","shallowEqual","editField","selectedField","newFields","JSON","parse","stringify","payload","success","addField","res2","deleteField","fieldIndex","updatedCollection","col","snapshot","classes","root","CollectionModal","undefined"],"mappings":"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","file":"static/js/12.ca33f392.chunk.js","sourcesContent":["import { IoAlertCircleOutline } from \"react-icons/io5\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport React, { SelectHTMLAttributes } from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <IoAlertCircleOutline className=\"text-red-FF0000\" size={20}></IoAlertCircleOutline>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport interface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n  options: { label: string; value: string | number }[];\r\n  error?: string | boolean;\r\n  groundColor: \"white\" | \"black\";\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({\r\n  className = \"\",\r\n  options,\r\n  error,\r\n  groundColor,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={`${className} relative flex items-center`}>\r\n      <select\r\n        className={classNames(\"px-3 h-full border-2 border-solid w-full rounded outline-none\", {\r\n          \"border-red-FF0000\": error,\r\n          \"focus:border-fireck-4\": !error,\r\n          \"border-gray-300 bg-gray-300\": groundColor === \"white\",\r\n          \"border-white bg-white\": groundColor === \"black\",\r\n        })}\r\n        {...props}\r\n        spellCheck={false}\r\n      >\r\n        {options.map((x, i) => (\r\n          <option data-testid={`select-option-${x.value}`} key={\"opt-\" + i} value={x.value}>\r\n            {x.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"store\";\r\nimport NotificationsProvider from \"components/NotificationsProvider\";\r\n\r\nexport interface CallableComponent<T> {\r\n  proceed: (v: T) => void;\r\n}\r\n\r\ninterface callComponentArgs<T> {\r\n  Component: React.FC<any>;\r\n  props: Omit<T, \"proceed\">;\r\n}\r\n\r\nexport function callComponent<T, RT>({ Component, props }: callComponentArgs<T>): Promise<RT> {\r\n  return new Promise((resolve, reject) => {\r\n    const wrapper = document.getElementById(\"root\")?.appendChild(document.createElement(\"div\"));\r\n\r\n    if (wrapper) {\r\n      ReactDOM.render(\r\n        <Provider store={store}>\r\n          <NotificationsProvider>\r\n            <Component\r\n              {...props}\r\n              proceed={(val: RT) => {\r\n                ReactDOM.unmountComponentAtNode(wrapper);\r\n                wrapper.parentNode?.removeChild(wrapper);\r\n                resolve(val);\r\n              }}\r\n            />\r\n          </NotificationsProvider>\r\n        </Provider>,\r\n        wrapper\r\n      );\r\n    }\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport ErrorRounded from \"@material-ui/icons/ErrorRounded\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport classNames from \"classnames\";\r\n\r\nexport interface LabelProps {\r\n  error?: string | undefined | null;\r\n  className?: string;\r\n  children: any;\r\n  groundColor: \"black\" | \"white\";\r\n}\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <ErrorRounded className=\"text-red-500 text-xl\" fontSize=\"inherit\"></ErrorRounded>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Label: React.FC<LabelProps> = ({ className = \"\", children, error, groundColor }) => {\r\n  return (\r\n    <div\r\n      className={classNames(`flex justify-between relative ${className}`, {\r\n        \"text-white\": groundColor === \"black\",\r\n        \"text-black\": groundColor === \"white\",\r\n      })}\r\n    >\r\n      <div>{children}</div>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import Button from \"components/Button\";\r\nimport React, { ReactElement, useState } from \"react\";\r\nimport Edit from \"@material-ui/icons/EditRounded\";\r\nimport Select from \"components/Select\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport AddRounded from \"@material-ui/icons/AddRounded\";\r\nimport SearchRounded from \"@material-ui/icons/SearchRounded\";\r\n\r\nexport interface SettingsPageProps {\r\n  entity: string;\r\n  enitityPlural: string;\r\n  onAddEntity?: () => void;\r\n  entities: { name: string; docId: string }[];\r\n  onSelectEntity: (id: string) => void;\r\n  entityButtons: ReactElement;\r\n  onInvokeEntityEdit?: () => void;\r\n  entityContent: ReactElement;\r\n  selectedEntityId: string;\r\n}\r\n\r\nexport const reorder = (list: any[], startIndex: number, endIndex: number) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst SettingsPage: React.FC<SettingsPageProps> = React.memo(\r\n  ({\r\n    entity,\r\n    enitityPlural,\r\n    onAddEntity,\r\n    entities,\r\n    onSelectEntity,\r\n    entityButtons,\r\n    onInvokeEntityEdit,\r\n    entityContent,\r\n    selectedEntityId,\r\n  }) => {\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    return (\r\n      <div className=\"h-full flex flex-col\">\r\n        <div className=\"flex flex-wrap justify-between mb-4\">\r\n          <div className=\"font-medium text-27px leading-none mb-4 mr-4 text-white capitalize\">\r\n            {enitityPlural}\r\n          </div>\r\n          {!onAddEntity ? null : (\r\n            <Button\r\n              data-testid=\"add-collection-btn\"\r\n              onClick={onAddEntity}\r\n              className=\"bg-fireck-4 hover:bg-fireck-4-hover mb-4 min-w-unset\"\r\n            >\r\n              <div className=\"flex items-center pointer-events-none h-34px\">\r\n                <AddRounded className=\"mr-2 text-lg\" fontSize=\"inherit\"></AddRounded>\r\n                <span className=\"hidden md:block\">Add {entity}</span>\r\n                <span className=\"md:hidden\">Add</span>\r\n              </div>\r\n            </Button>\r\n          )}\r\n        </div>\r\n        {!entities.length ? (\r\n          <div></div>\r\n        ) : (\r\n          <div className=\"flex flex-wrap lg:flex-nowrap w-full flex-grow\">\r\n            <div>\r\n              <div className=\"relative mr-4 hidden lg:block\" style={{ width: 180 }}>\r\n                <SearchRounded\r\n                  fontSize=\"inherit\"\r\n                  className=\"absolute text-base left-1 top-1 text-gray-500 pointer-events-none\"\r\n                ></SearchRounded>\r\n                <input\r\n                  type=\"search\"\r\n                  spellCheck={false}\r\n                  placeholder=\"Search\"\r\n                  className=\"text-white placeholder-gray-500 pl-7 hover:bg-fireck-2 focus:bg-fireck-2 w-full text-sm mb-3 px-2 border-white rounded bg-transparent outline-none focus:outline-none\"\r\n                  value={search}\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                ></input>\r\n              </div>\r\n              <SimpleBar\r\n                style={{ maxHeight: 230 }}\r\n                className=\"max-w-192px w-full flex-shrink-0 mr-4 hidden lg:block scrollbar-dark pr-3\"\r\n                autoHide={false}\r\n              >\r\n                {entities\r\n                  .filter((x) => !search || x.name.toLowerCase().includes(search.toLowerCase()))\r\n                  .map((x) => (\r\n                    <div\r\n                      data-testid={`entity-name-${x.name}`}\r\n                      onClick={() => {\r\n                        onSelectEntity(x.docId);\r\n                      }}\r\n                      key={`entity-${x.docId}`}\r\n                      className={`mb-1 capitalize truncate select-none cursor-pointer ${\r\n                        selectedEntityId === x.docId\r\n                          ? \"bg-fireck-4\"\r\n                          : \"hover:bg-fireck-1-hover text-white\"\r\n                      } rounded h-28px leading-28px px-3`}\r\n                    >\r\n                      {x.name}\r\n                    </div>\r\n                  ))}\r\n              </SimpleBar>\r\n            </div>\r\n\r\n            <div className=\"lg:flex-grow w-full rounded-lg bg-fireck-3 p-7 flex flex-col\">\r\n              <div className=\"flex justify-between mb-3 flex-wrap\">\r\n                <div className=\"font-medium text-22px capitalize mb-3 mr-3 text-white\">\r\n                  <span className=\"hidden lg:inline-block\">\r\n                    {entities.find((x) => x.docId === selectedEntityId)?.name || \"\"}\r\n                  </span>\r\n                  <div className=\"lg:hidden inline-block text-black text-base\">\r\n                    <Select\r\n                      className=\"h-28px\"\r\n                      groundColor=\"black\"\r\n                      onChange={(e) => onSelectEntity(e.target.value)}\r\n                      value={selectedEntityId}\r\n                      options={entities.map((x) => ({ label: x.name, value: x.docId }))}\r\n                    ></Select>\r\n                  </div>\r\n                  {!onInvokeEntityEdit ? null : (\r\n                    <Edit\r\n                      data-testid=\"edit-collection-btn\"\r\n                      onClick={onInvokeEntityEdit}\r\n                      className=\"ml-3 text-lg cursor-pointer\"\r\n                      fontSize=\"inherit\"\r\n                    ></Edit>\r\n                  )}\r\n                </div>\r\n                {entityButtons}\r\n              </div>\r\n\r\n              <div className=\"flex-grow h-0\">{entityContent}</div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default SettingsPage;\r\n","export type IconButtonVariant = \"transparent\" | \"standard\";\r\n\r\nexport interface IconButtonProps {\r\n  className?: string;\r\n  variant?: IconButtonVariant;\r\n  [x: string]: any;\r\n}\r\n\r\nconst IconButton: React.FC<IconButtonProps> = ({\r\n  className = \"\",\r\n  variant = \"standard\",\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={\r\n        `bg-fireck-4 hover:bg-fireck-4-hover h-5 w-5 rounded flex items-center justify-center transition cursor-pointer ` +\r\n        className\r\n      }\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default IconButton;\r\n","var _path, _circle, _circle2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgOneToOne(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 40,\n    height: 9,\n    viewBox: \"0 0 40 9\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.36621 4.67223H30.7241M30.7241 4.67223L28.3085 2.25659M30.7241 4.67223L28.3085 7.08786\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.37296,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 4.69562,\n    cy: 4.49835,\n    r: 3.31773,\n    stroke: \"currentColor\",\n    strokeWidth: 1.37296\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 35.3948,\n    cy: 4.49835,\n    r: 3.31773,\n    stroke: \"currentColor\",\n    strokeWidth: 1.37296\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOneToOne);\nexport default __webpack_public_path__ + \"static/media/one-to-one.19766dd4.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _circle, _circle2, _circle3;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgOneToMany(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 40,\n    height: 37,\n    viewBox: \"0 0 40 37\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.5875 18.8431L30.4119 7.39751M30.4119 7.39751L26.8752 6.44984M30.4119 7.39751L29.4643 10.9342\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.47153,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.5873 18.8433L30.4117 30.2889M30.4117 30.2889L29.4641 26.7522M30.4117 30.2889L26.875 31.2366\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.47153,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 5.00165,\n    cy: 18.7858,\n    r: 3.55593,\n    stroke: \"currentColor\",\n    strokeWidth: 1.47153\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 35.2653,\n    cy: 32.5311,\n    r: 3.55593,\n    stroke: \"currentColor\",\n    strokeWidth: 1.47153\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 35.2653,\n    cy: 5.15558,\n    r: 3.55593,\n    stroke: \"currentColor\",\n    strokeWidth: 1.47153\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOneToMany);\nexport default __webpack_public_path__ + \"static/media/one-to-many.ace4634d.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useRef } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst useDraggableInPortal = () => {\r\n  const self = useRef<any>({}).current;\r\n\r\n  useEffect(() => {\r\n    const div = document.createElement(\"div\");\r\n    div.style.position = \"absolute\";\r\n    div.style.pointerEvents = \"none\";\r\n    div.style.top = \"0\";\r\n    div.style.width = \"100%\";\r\n    div.style.height = \"100%\";\r\n    self.elt = div;\r\n    document.body.appendChild(div);\r\n    return () => {\r\n      document.body.removeChild(div);\r\n    };\r\n  }, [self]);\r\n\r\n  return (render: any) =>\r\n    (provided: any, ...args: any) => {\r\n      const element = render(provided, ...args);\r\n      if (provided.draggableProps.style.position === \"fixed\") {\r\n        return createPortal(element, self.elt);\r\n      }\r\n      return element;\r\n    };\r\n};\r\n\r\nexport default useDraggableInPortal;\r\n","import useDraggableInPortal from \"hooks/useDraggableInPortal\";\r\nimport { DragDropContext, Droppable, Draggable, DropResult } from \"react-beautiful-dnd\";\r\nimport { useRef } from \"react\";\r\n\r\ninterface DraggableListProps {\r\n  onDragEnd: (val: DropResult) => void;\r\n  Item: React.FC<any>;\r\n  items: any[];\r\n  containerClassName: string;\r\n}\r\n\r\nconst DraggableList: React.FC<DraggableListProps> = ({\r\n  onDragEnd,\r\n  Item,\r\n  items,\r\n  containerClassName,\r\n}) => {\r\n  const renderDraggable = useDraggableInPortal();\r\n  const uniqid = useRef<number>(Math.random());\r\n\r\n  const formatId = (keyword: string, index: number) => {\r\n    return `${keyword}-${index}-${uniqid.current}`;\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <Droppable droppableId=\"droppable-sub\">\r\n        {(provided) => (\r\n          <div className={containerClassName} {...provided.droppableProps} ref={provided.innerRef}>\r\n            {items.map((x, i) => {\r\n              return (\r\n                <Draggable\r\n                  key={formatId(\"draggable\", i)}\r\n                  draggableId={formatId(\"draggable\", i)}\r\n                  index={i}\r\n                >\r\n                  {renderDraggable((provided: any) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                    >\r\n                      <Item {...x} index={i}></Item>\r\n                    </div>\r\n                  ))}\r\n                </Draggable>\r\n              );\r\n            })}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default DraggableList;\r\n","import { Document, addDocument, getCollection, updateDocument } from \"./collections\";\r\nimport { RoleDocument } from \"./roles\";\r\n\r\nexport type FieldInputType =\r\n  | \"string\"\r\n  | \"number\"\r\n  | \"boolean\"\r\n  | \"array\"\r\n  | \"map\"\r\n  | \"rich-text\"\r\n  | \"media\"\r\n  | \"date\"\r\n  | \"enum\"\r\n  | \"password\"\r\n  | \"relation\"\r\n  | \"json\"\r\n  | \"collection\"\r\n  | \"document\"\r\n  | \"any\";\r\n\r\ntype SimpleInputType =\r\n  | \"number\"\r\n  | \"boolean\"\r\n  | \"array\"\r\n  | \"map\"\r\n  | \"json\"\r\n  | \"rich-text\"\r\n  | \"date\"\r\n  | \"password\"\r\n  | \"any\";\r\n\r\nexport type BaseField = {\r\n  id: string;\r\n  isDefault: boolean;\r\n  displayOnTable: boolean;\r\n};\r\n\r\nexport type CmsEvent = \"find\" | \"find one\" | \"create\" | \"update\" | \"delete\";\r\n\r\nexport type HttpMethod = \"GET\" | \"POST\" | \"PUT\" | \"PATCH\" | \"DELETE\";\r\n\r\nexport interface Webhook {\r\n  event: string;\r\n  method: string;\r\n  url: string;\r\n  collectionId: string;\r\n}\r\n\r\nexport interface WebhookDocument extends Document, Webhook {}\r\n\r\nexport type AnyField =\r\n  | RelationField\r\n  | EnumField\r\n  | StringField\r\n  | MediaField\r\n  | CollectionField\r\n  | DocumentField\r\n  | SimpleField;\r\n\r\nexport interface SimpleField extends BaseField {\r\n  type: SimpleInputType;\r\n}\r\n\r\nexport interface RelationField extends BaseField {\r\n  type: \"relation\";\r\n  relatedCollectionTypeDocId: string;\r\n  relationOneToOne: boolean;\r\n}\r\n\r\nexport interface EnumField extends BaseField {\r\n  enumOptions: string[];\r\n  type: \"enum\";\r\n}\r\n\r\nexport interface StringField extends BaseField {\r\n  type: \"string\";\r\n  stringLong: boolean;\r\n}\r\n\r\nexport interface MediaField extends BaseField {\r\n  type: \"media\";\r\n  mediaSingle: boolean;\r\n}\r\n\r\nexport interface CollectionField extends BaseField {\r\n  type: \"collection\";\r\n  collectionFields: AnyField[];\r\n}\r\n\r\nexport interface DocumentField extends BaseField {\r\n  type: \"document\";\r\n  documentFields: AnyField[];\r\n}\r\n\r\nexport interface CollectionType extends Partial<Document> {\r\n  id: string;\r\n  name: string;\r\n  fields: Array<AnyField>;\r\n  draftable: boolean;\r\n  single: boolean;\r\n  docId: string;\r\n  size: number;\r\n  isSystem: boolean;\r\n}\r\n\r\nexport const createCollectionType = async (type: CollectionType) => {\r\n  try {\r\n    const ROLES_ID = \"RolesReservedCollection\";\r\n    const COLLECTIONS_ID = \"CollectionTypesReservedCollection\";\r\n\r\n    const finalType = {\r\n      ...type,\r\n      fields: [\r\n        ...type.fields,\r\n        {\r\n          id: \"createdAt\",\r\n          type: \"date\",\r\n          displayOnTable: true,\r\n          isDefault: true,\r\n        },\r\n        {\r\n          id: \"modifiedAt\",\r\n          type: \"date\",\r\n          displayOnTable: true,\r\n          isDefault: true,\r\n        },\r\n        {\r\n          id: \"docId\",\r\n          type: \"string\",\r\n          displayOnTable: true,\r\n          isDefault: true,\r\n        },\r\n      ],\r\n    };\r\n\r\n    let doc = await addDocument(COLLECTIONS_ID, finalType);\r\n\r\n    if (!doc.error && doc.docId) {\r\n      const roles: RoleDocument[] = await getCollection({\r\n        collectionId: ROLES_ID,\r\n        limit: 1000,\r\n      });\r\n\r\n      roles.forEach((x) =>\r\n        updateDocument(ROLES_ID, x.docId, {\r\n          ...x,\r\n          permissions: { ...x.permissions, [doc.docId]: x.defaultPermissions },\r\n        }).then((res: any) => console.log(res))\r\n      );\r\n    }\r\n\r\n    return doc;\r\n  } catch (error: any) {\r\n    return Promise.resolve({ error: error.toString() });\r\n  }\r\n\r\n  return;\r\n};\r\n","export interface ToupleInputProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  setValue: (a: any) => void;\r\n  options: {\r\n    value: any;\r\n    label: string;\r\n    icon?: React.FunctionComponent<React.SVGProps<SVGSVGElement>>;\r\n  }[];\r\n  value: any;\r\n  disabled?: boolean;\r\n}\r\n\r\nconst ToupleInput: React.FC<ToupleInputProps> = ({\r\n  className = \"\",\r\n  options,\r\n  value,\r\n  setValue,\r\n  disabled,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <div className={\"flex -mx-2 flex-wrap sm:flex-nowrap mb-10 \" + className} {...rest}>\r\n      {options.map((opt, i) => (\r\n        <div\r\n          data-testid={`touple-option-${opt.value}`}\r\n          key={opt.value}\r\n          onClick={() => setValue(opt.value)}\r\n          className={`sm:w-1/2 w-full mx-2 mb-3 sm:mb-0 py-7 select-none ${\r\n            disabled ? \"cursor-default\" : \"cursor-pointer\"\r\n          } flex items-center justify-center rounded ${\r\n            value === opt.value\r\n              ? \"border-4 border-fireck-4\"\r\n              : `bg-gray-300 ${disabled ? \"\" : \"hover:bg-gray-301\"}`\r\n          }`}\r\n        >\r\n          <div className=\"flex items-center pointer-events-none\">\r\n            <div className={opt.icon ? \"mr-7\" : \"\"}>{opt.label}</div>\r\n            {opt.icon ? <opt.icon></opt.icon> : null}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToupleInput;\r\n","import Modal from \"@material-ui/core/Modal\";\r\nimport Input from \"components/Input\";\r\nimport React from \"react\";\r\nimport Button from \"components/Button\";\r\nimport { CollectionType, createCollectionType } from \"api/collectionTypes\";\r\nimport { useNotify } from \"components/NotificationsProvider\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport { useFormik } from \"formik\";\r\nimport ToupleInput from \"components/ToupleInput\";\r\nimport CloseRounded from \"@material-ui/icons/CloseRounded\";\r\nimport { addDocument, deleteDocument, updateDocument } from \"api/collections\";\r\n\r\nexport interface AddNewCollectionProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  collections: Array<CollectionType>;\r\n  editingCollectionDocId: string;\r\n  onCreate: (val: CollectionType) => void;\r\n  onUpdate: (val: Partial<CollectionType>) => void;\r\n  onDelete: (docId: string) => void;\r\n}\r\n\r\nfunction isNumeric(char: any) {\r\n  return char >= \"0\" && char <= \"9\";\r\n}\r\n\r\nfunction isLetter(str: any) {\r\n  return str.length === 1 && str.match(/[a-z]/i);\r\n}\r\n\r\nconst createId = (string: string) => {\r\n  let id = \"\";\r\n  for (let i = 0; i < string.length; i++) {\r\n    if (string[i] === \" \") {\r\n      id += \"-\";\r\n    } else if (\r\n      i > 0 &&\r\n      string[i - 1].toLowerCase() === string[i - 1] &&\r\n      string[i - 1] !== \" \" &&\r\n      string[i].toUpperCase() === string[i] &&\r\n      !isNumeric(string[i]) &&\r\n      isLetter(string[i])\r\n    ) {\r\n      id += \"-\" + string[i].toLowerCase();\r\n    } else {\r\n      id += string[i].toLowerCase();\r\n    }\r\n  }\r\n  return id;\r\n};\r\n\r\nconst COLLECTION_ID = \"CollectionTypesReservedCollection\";\r\n\r\nconst AddNewCollection: React.FC<AddNewCollectionProps> = ({\r\n  open,\r\n  onClose,\r\n  collections,\r\n  editingCollectionDocId,\r\n  onCreate,\r\n  onUpdate,\r\n  onDelete,\r\n}) => {\r\n  const initialData = {\r\n    name: \"\",\r\n    id: \"\",\r\n    single: false,\r\n    draftable: true,\r\n    fields: [],\r\n    size: 0,\r\n    isSystem: false,\r\n    docId: \"\",\r\n  } as CollectionType;\r\n\r\n  const notify = useNotify();\r\n\r\n  const formIntialState = editingCollectionDocId.length\r\n    ? collections.find((x) => x.docId === editingCollectionDocId) || initialData\r\n    : initialData;\r\n\r\n  const { values, errors, handleSubmit, handleChange, setFieldValue, isSubmitting, submitCount } =\r\n    useFormik({\r\n      enableReinitialize: true,\r\n      onSubmit: async (vals, { resetForm }) => {\r\n        const id = createId(vals.name);\r\n\r\n        const res = editingCollectionDocId.length\r\n          ? await updateDocument(COLLECTION_ID, values.docId, { ...values, id })\r\n          : await createCollectionType({ ...values, id });\r\n        const actionType = editingCollectionDocId.length ? \"updated\" : \"created\";\r\n        if (!res.error) {\r\n          if (editingCollectionDocId.length) {\r\n            onUpdate(res);\r\n          } else {\r\n            onCreate(res);\r\n          }\r\n          resetForm();\r\n          onClose();\r\n          notify(\"Collection type \" + actionType + \"!\", { variant: \"success\" });\r\n        } else {\r\n          notify(res.error, { variant: \"error\" });\r\n        }\r\n      },\r\n      initialValues: formIntialState,\r\n      validate: (vals) => {\r\n        let errors: { [key: string]: string } = {};\r\n        if (!vals.name) {\r\n          errors.name = \"Collection name is required\";\r\n        } else {\r\n          const id = createId(vals.name);\r\n          const index = collections.findIndex((x) => x.id === id);\r\n          if (index !== -1 && collections[index].docId !== editingCollectionDocId) {\r\n            errors.name = \"There is collection with the same name\";\r\n          }\r\n        }\r\n        return errors;\r\n      },\r\n    });\r\n\r\n  return (\r\n    <Modal open={open} hideBackdrop>\r\n      <div className=\"w-full h-full flex overflow-auto bg-black bg-opacity-40 p-7\">\r\n        <div\r\n          className=\"m-auto rounded bg-white w-full p-7 relative animate-littlemoveup\"\r\n          style={{ maxWidth: 600 }}\r\n        >\r\n          <CloseRounded\r\n            className=\"absolute top-0 right-0 cursor-pointer\"\r\n            onClick={onClose}\r\n          ></CloseRounded>\r\n          <div className=\"text-22px font-medium mb-12\">\r\n            {editingCollectionDocId.length ? \"Edit\" : \"Create\"} collection type\r\n          </div>\r\n          <div className=\"flex flex-wrap mb-7\">\r\n            <div className=\"mb-3 sm:w-1/2 w-full sm:pr-2\">\r\n              <div className=\"mb-2\">Collection name</div>\r\n              <Input\r\n                groundColor=\"white\"\r\n                className=\"h-34px\"\r\n                data-testid={`collection-name-input`}\r\n                error={submitCount > 0 && errors.name ? errors.name : false}\r\n                value={values.name}\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    handleSubmit();\r\n                  }\r\n                }}\r\n              ></Input>\r\n            </div>\r\n            <div className=\"mb-3 sm:w-1/2 w-full sm:pl-2\">\r\n              <div className=\"mb-2\">UID</div>\r\n              <Input\r\n                className=\"h-34px\"\r\n                groundColor=\"white\"\r\n                disabled\r\n                value={createId(values.name)}\r\n                name=\"id\"\r\n              ></Input>\r\n            </div>\r\n          </div>\r\n          <ToupleInput\r\n            disabled={editingCollectionDocId.length > 0}\r\n            value={values.single}\r\n            options={[\r\n              { value: false, label: \"Multiple elements\" },\r\n              { value: true, label: \"Single element\" },\r\n            ]}\r\n            setValue={(val) => (!editingCollectionDocId ? setFieldValue(\"single\", val) : {})}\r\n          ></ToupleInput>\r\n          {editingCollectionDocId ? (\r\n            <Button\r\n              data-testid=\"delete-collection-btn\"\r\n              onClick={async () => {\r\n                if (\r\n                  await confirm({\r\n                    confirmation: \"Delete collection type?\",\r\n                  })\r\n                ) {\r\n                  const deleteDocId = editingCollectionDocId;\r\n                  let res = await deleteDocument(COLLECTION_ID, deleteDocId);\r\n                  if (!res.error) {\r\n                    onClose();\r\n                    onDelete(deleteDocId);\r\n                    notify(\"Collection type deleted!\", { variant: \"success\" });\r\n                  } else {\r\n                    notify(res.error, { variant: \"error\" });\r\n                  }\r\n                  onClose();\r\n                }\r\n              }}\r\n              className=\"border-2 min-w-unset h-34px px-4 border-red-FF0000 text-red-FF0000 mb-10 hover:bg-red-FF0000 hover:text-white\"\r\n            >\r\n              Delete collection\r\n            </Button>\r\n          ) : null}\r\n\r\n          <div className=\"flex justify-between\">\r\n            <Button\r\n              onClick={() => onClose()}\r\n              className=\"bg-fireck-5 hover:bg-fireck-5-hover text-white\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              data-testid=\"submit-btn\"\r\n              disabled={isSubmitting}\r\n              onClick={() => handleSubmit()}\r\n              className=\"bg-fireck-4 hover:bg-fireck-4-hover h-34px\"\r\n            >\r\n              {isSubmitting ? \"Loading...\" : \"Submit\"}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewCollection;\r\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSubcollection(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 11,\n    viewBox: \"0 0 19 19\",\n    fill: \"currentColor\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.570312 0.778809H6.57031V4.77881H0.570312V0.778809ZM12.5703 7.77881H18.5703V11.7788H12.5703V7.77881ZM12.5703 14.7788H18.5703V18.7788H12.5703V14.7788ZM10.5703 10.7788H4.57031V15.7788H10.5703V17.7788H4.57031H2.57031V6.77881H4.57031V8.77881H10.5703V10.7788Z\",\n    fill: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSubcollection);\nexport default __webpack_public_path__ + \"static/media/subcollection.7a823e1e.svg\";\nexport { ForwardRef as ReactComponent };","interface WrapperProps {}\r\n\r\nconst Wrapper: React.FC<WrapperProps> = (props) => {\r\n  return (\r\n    <div\r\n      {...props}\r\n      className=\"w-8 rounded h-5 bg-fireck-4 text-center flex justify-center items-center text-10px font-medium\"\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n","import Wrapper from \"./Wrapper\";\r\n\r\nconst String: React.FC = () => {\r\n  return <Wrapper>Ab</Wrapper>;\r\n};\r\n\r\nexport default String;\r\n","import Wrapper from \"./Wrapper\";\r\n\r\nconst Number: React.FC = () => {\r\n  return <Wrapper>123</Wrapper>;\r\n};\r\n\r\nexport default Number;\r\n","import Wrapper from \"./Wrapper\";\r\n\r\nconst Map: React.FC = () => {\r\n  return <Wrapper>{\"{ }\"}</Wrapper>;\r\n};\r\n\r\nexport default Map;\r\n","import Wrapper from \"./Wrapper\";\r\n\r\nconst Array: React.FC = () => {\r\n  return <Wrapper>[ ]</Wrapper>;\r\n};\r\n\r\nexport default Array;\r\n","import ToggleOnOutlinedIcon from \"@material-ui/icons/ToggleOnOutlined\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Boolean: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <ToggleOnOutlinedIcon fontSize=\"inherit\" className=\"text-lg\"></ToggleOnOutlinedIcon>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Boolean;\r\n","import CalendarTodayOutlinedIcon from \"@material-ui/icons/CalendarTodayOutlined\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Boolean: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <CalendarTodayOutlinedIcon fontSize=\"inherit\" className=\"text-sm\"></CalendarTodayOutlinedIcon>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Boolean;\r\n","import PanoramaOutlinedIcon from \"@material-ui/icons/PanoramaOutlined\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Media: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <PanoramaOutlinedIcon fontSize=\"inherit\" className=\"text-base\"></PanoramaOutlinedIcon>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Media;\r\n","import NotesIcon from \"@material-ui/icons/Notes\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Media: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <NotesIcon fontSize=\"inherit\" className=\"text-base\"></NotesIcon>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Media;\r\n","import Wrapper from \"./Wrapper\";\r\n\r\nconst Boolean: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <span className=\"text-10px\">JSON</span>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Boolean;\r\n","import ListRounded from \"@material-ui/icons/ListRounded\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Enum: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <ListRounded fontSize=\"inherit\" className=\"text-xl\"></ListRounded>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Enum;\r\n","import VpnKeyRounded from \"@material-ui/icons/VpnKeyRounded\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Password: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <VpnKeyRounded fontSize=\"inherit\" className=\"text-base\"></VpnKeyRounded>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Password;\r\n","import Link from \"@material-ui/icons/Link\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Relation: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Link fontSize=\"inherit\" className=\"text-lg\"></Link>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Relation;\r\n","import String from \"./String\";\r\nimport Number from \"./Number\";\r\nimport Map from \"./Map\";\r\nimport Array from \"./Array\";\r\nimport Boolean from \"./Boolean\";\r\nimport Date from \"./Date\";\r\nimport Media from \"./Media\";\r\nimport RichText from \"./RichText\";\r\nimport Json from \"./Json\";\r\nimport Enum from \"./Enum\";\r\nimport Password from \"./Password\";\r\nimport Relation from \"./Relation\";\r\nimport Subcollection from \"./Subcollection\";\r\n\r\nconst fieldTypes = [\r\n  { type: \"string\", Badge: String },\r\n  { type: \"number\", Badge: Number },\r\n  { type: \"map\", Badge: Map },\r\n  { type: \"array\", Badge: Array },\r\n  { type: \"boolean\", Badge: Boolean },\r\n  { type: \"date\", Badge: Date },\r\n  { type: \"media\", Badge: Media },\r\n  { type: \"rich-text\", Badge: RichText },\r\n  { type: \"json\", Badge: Json },\r\n  { type: \"enum\", Badge: Enum },\r\n  { type: \"password\", Badge: Password },\r\n  { type: \"relation\", Badge: Relation },\r\n  { type: \"collection\", Badge: Subcollection },\r\n];\r\n\r\nexport default fieldTypes;\r\n","import { ReactComponent as SubColIcon } from \"assets/subcollection.svg\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Media: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <SubColIcon className=\"m-auto\"></SubColIcon>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Media;\r\n","import { UnControlled as CodeMirror } from \"react-codemirror2\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/addon/edit/closebrackets\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/addon/lint/lint\";\r\nimport \"codemirror/addon/lint/lint.css\";\r\n\r\ninterface TypescriptSyntaxProps {\r\n  code: string;\r\n}\r\n\r\nconst TypescriptSyntax: React.FC<TypescriptSyntaxProps> = ({ code }) => {\r\n  return (\r\n    <CodeMirror\r\n      value={code}\r\n      options={{\r\n        theme: \"material\",\r\n        lineNumbers: true,\r\n        readOnly: true,\r\n        mode: \"text/typescript\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TypescriptSyntax;\r\n","import Modal from \"@material-ui/core/Modal\";\r\nimport { CollectionType, AnyField } from \"api/collectionTypes\";\r\nimport CloseRounded from \"@material-ui/icons/CloseRounded\";\r\nimport { useState } from \"react\";\r\nimport Button from \"components/Button\";\r\nimport TypescriptSyntax from \"components/TypescriptSyntax\";\r\nimport SimpleBar from \"simplebar-react\";\r\n\r\nexport interface InterfaceModalProps {\r\n  open: boolean;\r\n  collectionType?: CollectionType;\r\n  onClose: () => void;\r\n}\r\n\r\nconst getGap = (count: number) => {\r\n  return new Array(count).fill(0).reduce((a, b) => a + \" \", \"\");\r\n};\r\n\r\nconst getType = (type: AnyField, ident: number, identStep: number = 3): string => {\r\n  const docType = (fields: AnyField[], multiple: boolean = false) => {\r\n    return fields.length\r\n      ? `{\\n${fields.reduce(\r\n          (a, b) =>\r\n            a +\r\n            `${getGap(ident)}${\r\n              b.id.includes(\" \") || b.id.includes(\"-\") ? `\"${b.id}\"` : b.id\r\n            }: ${getType(b, ident + identStep)};\\n`,\r\n          \"\"\r\n        )}${getGap(ident - identStep)}${multiple ? \"}[]\" : \"}\"}`\r\n      : multiple\r\n      ? \"any[]\"\r\n      : \"null\";\r\n  };\r\n\r\n  const types = {\r\n    password: () => \"string\",\r\n    string: () => \"string\",\r\n    \"rich-text\": () => \"string\",\r\n    json: () => \"object\",\r\n    map: () => \"object\",\r\n    array: () => \"any[]\",\r\n    media: (x: AnyField) => (x.type === \"media\" && x.mediaSingle ? \"string\" : \"string[]\"),\r\n    date: () => \"string\",\r\n    enum: () => \"string[]\",\r\n    number: () => \"number\",\r\n    boolean: () => \"boolean\",\r\n    relation: (x: AnyField) =>\r\n      x.type === \"relation\" && x.relationOneToOne ? \"string\" : \"string[]\",\r\n    collection: (x: AnyField) => docType(x.type === \"collection\" ? x.collectionFields : [], true),\r\n    document: (x: AnyField) => docType(x.type === \"document\" ? x.documentFields : []),\r\n    script: () => \"object\",\r\n    \"script-V2\": () => \"object\",\r\n    any: () => \"any\",\r\n  };\r\n  return `${types[type.type](type)}`;\r\n};\r\n\r\nexport const generateInterface = (colType: CollectionType) => {\r\n  const docType: any = {\r\n    type: \"document\",\r\n    documentFields: colType.fields,\r\n  };\r\n\r\n  const intface = `interface Document ${getType(docType, 3)}`;\r\n  return intface;\r\n};\r\n\r\nconst InterfaceModal: React.FC<InterfaceModalProps> = ({ open, collectionType, onClose }) => {\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const interfaceString = collectionType ? generateInterface(collectionType) : \"\";\r\n\r\n  return !collectionType ? null : (\r\n    <Modal open={open} hideBackdrop>\r\n      <div\r\n        className=\"fixed left-0 top-0 w-full h-full flex overflow-auto bg-black bg-opacity-40 p-9\"\r\n        onMouseDown={onClose}\r\n      >\r\n        <div\r\n          className=\"bg-white p-7 m-auto rounded md:max-w-lg max-w-sm w-full relative animate-littlemoveup\"\r\n          onMouseDown={(e) => e.stopPropagation()}\r\n        >\r\n          <CloseRounded\r\n            className=\"absolute top-0 right-0 cursor-pointer\"\r\n            onClick={onClose}\r\n          ></CloseRounded>\r\n          <div className=\"mb-7 text-22px capitalize font-medium\">\r\n            {collectionType.name} interface\r\n          </div>\r\n          <div className=\"relative rounded overflow-hidden\">\r\n            {copied ? (\r\n              <div className=\"absolute z-20 text-white top-1 animate-littlemoveup right-1 cursor-pointer h-6 px-2 text-xs font-medium\">\r\n                Copied!\r\n              </div>\r\n            ) : (\r\n              <Button\r\n                onClick={() => {\r\n                  navigator.clipboard.writeText(interfaceString);\r\n                  setCopied(true);\r\n                  setTimeout(() => {\r\n                    setCopied(false);\r\n                  }, 2000);\r\n                }}\r\n                className=\"absolute min-w-unset z-20 top-1 right-1 text-xs cursor-pointer h-6 px-3 bg-fireck-4 hover:bg-fireck-4-hover\"\r\n              >\r\n                Copy\r\n              </Button>\r\n            )}\r\n\r\n            <TypescriptSyntax code={interfaceString}></TypescriptSyntax>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default InterfaceModal;\r\n","import FieldTypes from \"components/FieldTypes\";\r\nimport React, { useEffect } from \"react\";\r\nimport { FieldInputType } from \"api/collectionTypes\";\r\nimport Button from \"components/Button\";\r\nimport CloseRounded from \"@material-ui/icons/CloseRounded\";\r\n\r\nexport interface SelectFieldTypeProps {\r\n  proceed: Function;\r\n  initialFieldInputType?: FieldInputType;\r\n}\r\n\r\nconst SelectFieldType: React.FC<SelectFieldTypeProps> = ({ proceed, initialFieldInputType }) => {\r\n  const [fieldType, setFieldType] = React.useState(\"string\" as FieldInputType);\r\n\r\n  useEffect(() => {\r\n    if (initialFieldInputType) {\r\n      setFieldType(initialFieldInputType);\r\n    }\r\n  }, [initialFieldInputType]);\r\n\r\n  return (\r\n    <div className=\"fixed left-0 top-0 w-full h-full flex overflow-auto bg-black bg-opacity-40 p-7\">\r\n      <div\r\n        className=\"m-auto rounded bg-white p-7 w-full relative animate-littlemoveup\"\r\n        style={{ maxWidth: 550 }}\r\n      >\r\n        <CloseRounded\r\n          className=\"cursor-pointer absolute top-0 right-0\"\r\n          onClick={() => proceed(null)}\r\n        ></CloseRounded>\r\n        <div className=\"text-22px font-medium mb-7\">Select field type</div>\r\n        <div className=\"mb-6\">\r\n          <div className=\"flex flex-wrap\">\r\n            {FieldTypes.map((x, i) => (\r\n              <div\r\n                data-testid={`fieldtype-option-${x.type}`}\r\n                onClick={() => setFieldType(x.type as FieldInputType)}\r\n                key={`field-type-${i}`}\r\n                className={`flex md:w-1/3 sm:w-1/2 w-full select-none p-3 border-4 border-solid border-white items-center cursor-pointer rounded  ${\r\n                  fieldType === x.type\r\n                    ? \"border-fireck-4\"\r\n                    : \"hover:border-gray-300 hover:bg-gray-300\"\r\n                }`}\r\n              >\r\n                <div className=\"flex items-center pointer-events-none\">\r\n                  <x.Badge></x.Badge>\r\n                  <span className=\"capitalize ml-2 line-clamp-1\">{x.type.replace(\"-\", \" \")}</span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"flex justify-between\">\r\n          <Button\r\n            data-testid=\"cancel-field-type-btn\"\r\n            onClick={() => {\r\n              proceed(null);\r\n            }}\r\n            className=\"bg-fireck-5 hover:bg-fireck-5-hover text-white h-34px\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            data-testid=\"submit-field-type-btn\"\r\n            onClick={() => {\r\n              proceed(fieldType);\r\n            }}\r\n            className=\"bg-fireck-4 hover:bg-fireck-4-hover h-34px\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectFieldType;\r\n","import React from \"react\";\r\nimport Input from \"components/Input\";\r\nimport Button from \"components/Button\";\r\nimport { FieldInputType, BaseField, AnyField } from \"api/collectionTypes\";\r\nimport FieldTypes from \"components/FieldTypes\";\r\nimport Select from \"components/Select\";\r\nimport { ReactComponent as OneToOneIcon } from \"assets/one-to-one.svg\";\r\nimport { ReactComponent as OneToManyIcon } from \"assets/one-to-many.svg\";\r\nimport Label from \"components/Label\";\r\nimport ToupleInput from \"components/ToupleInput\";\r\nimport { useFormik } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"store\";\r\nimport AddCircleOutlineRounded from \"@material-ui/icons/AddCircleOutlineRounded\";\r\nimport IconButton from \"components/IconButton\";\r\nimport EditOutlined from \"@material-ui/icons/EditOutlined\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport Delete from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport { getCollectionField } from \"./GetCollectionField\";\r\nimport { reorder } from \".\";\r\nimport CloseRounded from \"@material-ui/icons/CloseRounded\";\r\nimport DraggableList from \"components/DraggableList\";\r\n\r\nexport interface SpecifyFieldDetailsProps {\r\n  editableField?: AnyField;\r\n  existingFieldNames?: string[];\r\n  fieldType: FieldInputType;\r\n  proceed: Function;\r\n  zLevel: number;\r\n}\r\n\r\ntype CustomErrors = { id?: string; enumOptions?: string; relatedCollectionTypeDocId?: string };\r\n\r\nconst SpecifyFieldDetails: React.FC<SpecifyFieldDetailsProps> = ({\r\n  editableField,\r\n  existingFieldNames,\r\n  proceed,\r\n  fieldType,\r\n  zLevel,\r\n}) => {\r\n  const baseIntialValues: BaseField = {\r\n    id: \"\",\r\n    displayOnTable: true,\r\n    isDefault: false,\r\n  };\r\n  const initialValues: AnyField = {\r\n    ...baseIntialValues,\r\n    ...(fieldType === \"collection\"\r\n      ? { collectionFields: [], type: fieldType }\r\n      : fieldType === \"enum\"\r\n      ? { enumOptions: [], type: fieldType }\r\n      : fieldType === \"string\"\r\n      ? { stringLong: false, type: fieldType }\r\n      : fieldType === \"media\"\r\n      ? { mediaSingle: false, type: fieldType }\r\n      : fieldType === \"relation\"\r\n      ? { relatedCollectionTypeDocId: \"\", relationOneToOne: true, type: fieldType }\r\n      : fieldType === \"document\"\r\n      ? { documentFields: [], type: fieldType }\r\n      : { type: fieldType }),\r\n  };\r\n\r\n  const { values, errors, handleChange, handleSubmit, setFieldValue, submitCount } = useFormik({\r\n    onSubmit: (vals) => {\r\n      proceed(vals);\r\n    },\r\n    initialValues: editableField ? { ...initialValues, ...editableField } : initialValues,\r\n    validate: (vals) => {\r\n      const errors: CustomErrors = {};\r\n\r\n      if (!vals.id) {\r\n        errors.id = \"Field name is required\";\r\n      } else if (existingFieldNames && existingFieldNames.findIndex((x) => x === vals.id) > -1) {\r\n        errors.id = \"There is field with the same name\";\r\n      }\r\n\r\n      if (vals.type === \"enum\" && vals.enumOptions.length < 2) {\r\n        errors.enumOptions = \"Enum requires at least two options\";\r\n      }\r\n\r\n      if (vals.type === \"relation\" && vals.relatedCollectionTypeDocId === \"\") {\r\n        errors.relatedCollectionTypeDocId = \"Select related collection\";\r\n      }\r\n\r\n      return errors;\r\n    },\r\n  });\r\n  const [enumOption, setEnumOption] = React.useState(\"\");\r\n\r\n  const SelectedFieldType = FieldTypes.find((x) => x.type === fieldType);\r\n  const collections = useSelector((state: RootState) => state.collectionTypes);\r\n\r\n  const onDragEnd = async (result: any) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    if (values.type === \"collection\") {\r\n      const fields = reorder(\r\n        values.collectionFields,\r\n        result.source.index,\r\n        result.destination.index\r\n      );\r\n      setFieldValue(\"collectionFields\", fields);\r\n    }\r\n  };\r\n\r\n  const addEnumOption = () => {\r\n    if (enumOption && values.type === \"enum\") {\r\n      let arr = [...values.enumOptions];\r\n      arr.push(enumOption);\r\n      setFieldValue(\"enumOptions\", arr);\r\n      setEnumOption(\"\");\r\n    }\r\n  };\r\n\r\n  let customErrors = errors as CustomErrors;\r\n\r\n  return (\r\n    <div className=\"fixed left-0 top-0 w-full h-full flex overflow-auto bg-black bg-opacity-40\">\r\n      <div\r\n        style={{ maxWidth: 550 }}\r\n        className=\"m-auto rounded bg-white p-7 w-full relative animate-littlemoveup\"\r\n      >\r\n        <CloseRounded\r\n          className=\"absolute top-0 right-0 cursor-pointer\"\r\n          onClick={() => proceed(null)}\r\n        ></CloseRounded>\r\n        <div className=\"text-22px font-medium mb-9 flex items-center\">\r\n          {SelectedFieldType ? <SelectedFieldType.Badge></SelectedFieldType.Badge> : null}\r\n          <span className=\"ml-3\">\r\n            {editableField ? \"Edit\" : \"Add\"} {SelectedFieldType ? SelectedFieldType.type : \"\"} field\r\n          </span>\r\n        </div>\r\n        <div className=\"mb-9\">\r\n          <div className=\"mb-2\">Field name</div>\r\n          <Input\r\n            groundColor=\"white\"\r\n            className=\"h-34px\"\r\n            data-testid={`field-id-input-${zLevel}`}\r\n            error={submitCount > 0 ? errors.id : \"\"}\r\n            value={values.id}\r\n            name=\"id\"\r\n            onChange={handleChange}\r\n            onKeyDown={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                handleSubmit();\r\n              }\r\n            }}\r\n          ></Input>\r\n        </div>\r\n\r\n        {values.type === \"media\" ? (\r\n          <ToupleInput\r\n            data-testid={`media-touple-${zLevel}`}\r\n            options={[\r\n              { value: false, label: \"Multiple media\" },\r\n              { value: true, label: \"Single media\" },\r\n            ]}\r\n            value={values.mediaSingle}\r\n            setValue={(val) => setFieldValue(\"mediaSingle\", val)}\r\n          ></ToupleInput>\r\n        ) : values.type === \"enum\" ? (\r\n          <div className=\"mb-10\">\r\n            <div className=\"mb-2\">Options</div>\r\n            <div className=\"flex flex-wrap\">\r\n              {values.enumOptions.map((x, i) => (\r\n                <div\r\n                  data-testid={`enum-option-${x}-${zLevel}`}\r\n                  key={`enum-option-${i}`}\r\n                  className=\"bg-gray-300 rounded flex items-center px-3 h-34px mr-3 mb-3\"\r\n                >\r\n                  <div className=\"mr-4\">{x}</div>\r\n                  <div\r\n                    className=\"cursor-pointer text-xs\"\r\n                    onClick={() => {\r\n                      let arr = [...values.enumOptions];\r\n                      arr.splice(i, 1);\r\n                      setFieldValue(\"enumOptions\", arr);\r\n                    }}\r\n                  >\r\n                    ✕\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"flex\">\r\n              <Input\r\n                groundColor=\"white\"\r\n                data-testid={`enum-option-input-${zLevel}`}\r\n                className=\"mr-3\"\r\n                error={submitCount > 0 ? customErrors.enumOptions?.toString() : \"\"}\r\n                type=\"text\"\r\n                value={enumOption}\r\n                onChange={(e) => setEnumOption(e.target.value)}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    addEnumOption();\r\n                  }\r\n                }}\r\n              ></Input>\r\n              <Button\r\n                data-testid={`add-enum-option-btn-${zLevel}`}\r\n                onClick={addEnumOption}\r\n                className=\"bg-fireck-4 hover:bg-fireck-4-hover\"\r\n              >\r\n                Add option\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        ) : values.type === \"relation\" ? (\r\n          <div className=\"mb-10\">\r\n            <div className=\"mb-9\">\r\n              <Label\r\n                groundColor=\"white\"\r\n                error={submitCount > 0 ? customErrors.relatedCollectionTypeDocId : \"\"}\r\n                className=\"mb-2\"\r\n              >\r\n                Related collection\r\n              </Label>\r\n              <Select\r\n                className=\"h-34px\"\r\n                groundColor=\"white\"\r\n                data-testid={`related-collection-select-${zLevel}`}\r\n                options={[\r\n                  { value: \"\", label: \"Select\" },\r\n                  ...collections.map((c) => ({ label: c.id, value: c.docId })),\r\n                ]}\r\n                value={values.relatedCollectionTypeDocId}\r\n                onChange={(e) => setFieldValue(\"relatedCollectionTypeDocId\", e.target.value)}\r\n              ></Select>\r\n            </div>\r\n            <div className=\"mb-2\">Relation type</div>\r\n            <ToupleInput\r\n              data-testid={`relation-multiplicity-touple-${zLevel}`}\r\n              value={values.relationOneToOne}\r\n              setValue={(val) => setFieldValue(\"relationOneToOne\", val)}\r\n              options={[\r\n                { value: true, label: \"One to one\", icon: OneToOneIcon },\r\n                { value: false, label: \"One to many\", icon: OneToManyIcon },\r\n              ]}\r\n            ></ToupleInput>\r\n          </div>\r\n        ) : values.type === \"string\" ? (\r\n          <ToupleInput\r\n            data-testid={`string-type-touple-${zLevel}`}\r\n            value={values.stringLong}\r\n            setValue={(val) => setFieldValue(\"stringLong\", val)}\r\n            options={[\r\n              { label: \"Short text\", value: false },\r\n              { label: \"Long text\", value: true },\r\n            ]}\r\n          ></ToupleInput>\r\n        ) : values.type === \"collection\" ? (\r\n          <div className=\"mb-9\">\r\n            <div className=\"flex mb-2\">\r\n              <div className=\"mr-2\">Fields</div>\r\n              <AddCircleOutlineRounded\r\n                data-testid={`add-field-for-subcollection-btn-${zLevel}`}\r\n                className=\"cursor-pointer\"\r\n                onClick={async () => {\r\n                  const field = await getCollectionField({\r\n                    existingFieldNames: values.collectionFields.map((x) => x.id),\r\n                    zLevel: zLevel + 1,\r\n                  });\r\n                  console.log(\"FINAL FIELD\", field);\r\n                  if (!field) return;\r\n                  const fields = [...values.collectionFields, field];\r\n                  setFieldValue(\"collectionFields\", fields);\r\n                }}\r\n              ></AddCircleOutlineRounded>\r\n            </div>\r\n            <DraggableList\r\n              items={values.collectionFields.map((x) => ({\r\n                field: x,\r\n                Badge: FieldTypes.find((t) => t.type === x.type)?.Badge,\r\n              }))}\r\n              onDragEnd={onDragEnd}\r\n              containerClassName=\"max-h-247px overflow-auto\"\r\n              Item={({\r\n                Badge,\r\n                field,\r\n                index,\r\n                ...rest\r\n              }: {\r\n                Badge: React.FC;\r\n                field: AnyField;\r\n                index: number;\r\n                rest: any;\r\n              }) => {\r\n                return (\r\n                  <div className=\"pb-2\">\r\n                    <div className=\"rounded bg-gray-300 px-3 py-2 flex items-center\" {...rest}>\r\n                      <div className=\"line-clamp-1 w-5/12 px-3\">{field.id}</div>\r\n                      <div className=\"flex w-4/12 flex-shrink-0\">\r\n                        {Badge ? <Badge></Badge> : null}\r\n                        <span className=\"ml-3 hidden sm:block line-clamp-1\">{field.type}</span>\r\n                      </div>\r\n                      <div className=\"flex items-center flex-grow justify-end text-base\">\r\n                        <IconButton\r\n                          className=\"mr-1\"\r\n                          variant=\"transparent\"\r\n                          onClick={async () => {\r\n                            const editedField = await getCollectionField({\r\n                              zLevel: zLevel + 1,\r\n                              editableField: field,\r\n                              existingFieldNames: values.collectionFields\r\n                                .map((f) => f.id)\r\n                                .filter((f) => f !== field.id),\r\n                            });\r\n\r\n                            if (!editedField) return;\r\n\r\n                            let fields = [...values.collectionFields];\r\n                            fields[index] = editedField;\r\n                            setFieldValue(\"collectionFields\", fields);\r\n                          }}\r\n                        >\r\n                          <EditOutlined fontSize=\"inherit\"></EditOutlined>\r\n                        </IconButton>\r\n                        <IconButton\r\n                          variant=\"transparent\"\r\n                          onClick={async () => {\r\n                            let res = await confirm({\r\n                              confirmation: \"Delete field?\",\r\n                            });\r\n                            if (res) {\r\n                              const fields = [...values.collectionFields];\r\n                              fields.splice(index, 1);\r\n                              setFieldValue(\"collectionFields\", fields);\r\n                            }\r\n                          }}\r\n                        >\r\n                          <Delete fontSize=\"inherit\"></Delete>\r\n                        </IconButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }}\r\n            ></DraggableList>\r\n          </div>\r\n        ) : null}\r\n        <div className=\"flex justify-between\">\r\n          <Button\r\n            data-testid={`cancel-field-details-btn-${zLevel}`}\r\n            onClick={() => proceed(editableField ? null : \"back\")}\r\n            className=\"bg-fireck-5 hover:bg-fireck-5-hover text-white h-34px\"\r\n          >\r\n            {editableField ? \"Cancel\" : \"Back\"}\r\n          </Button>\r\n          <Button\r\n            data-testid={`submit-field-details-btn-${zLevel}`}\r\n            type=\"submit\"\r\n            onClick={() => handleSubmit()}\r\n            className=\"bg-fireck-4 hover:bg-fireck-4-hover h-34px\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpecifyFieldDetails;\r\n","import { callComponent } from \"api/callComponent\";\r\nimport { FieldInputType, AnyField } from \"api/collectionTypes\";\r\nimport SelectFieldType, { SelectFieldTypeProps } from \"./SelectFieldType\";\r\nimport SpecifyFieldDetails, { SpecifyFieldDetailsProps } from \"./SpecifyFieldDetails\";\r\n\r\nexport const getCollectionField = async ({\r\n  editableField,\r\n  existingFieldNames,\r\n  initialFieldInputType,\r\n  zLevel,\r\n}: {\r\n  editableField?: AnyField;\r\n  existingFieldNames?: string[];\r\n  initialFieldInputType?: FieldInputType;\r\n  zLevel: number;\r\n}): Promise<AnyField | null> => {\r\n  let res = editableField\r\n    ? editableField.type\r\n    : await callComponent<SelectFieldTypeProps, FieldInputType | null>({\r\n        Component: SelectFieldType,\r\n        props: initialFieldInputType ? { initialFieldInputType } : {},\r\n      });\r\n\r\n  if (res == null) return res;\r\n\r\n  const fieldType = res;\r\n  let res1: AnyField | null | \"back\" = await callComponent<\r\n    SpecifyFieldDetailsProps,\r\n    AnyField | null | \"back\"\r\n  >({\r\n    Component: SpecifyFieldDetails,\r\n    props: {\r\n      fieldType,\r\n      editableField,\r\n      existingFieldNames,\r\n      zLevel,\r\n    },\r\n  });\r\n  if (res1 === \"back\") {\r\n    return getCollectionField({\r\n      editableField,\r\n      existingFieldNames,\r\n      zLevel,\r\n      initialFieldInputType: fieldType,\r\n    });\r\n  } else {\r\n    return res1;\r\n  }\r\n};\r\n","import Button from \"components/Button\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\nimport { RootState } from \"store\";\r\nimport EditOutlined from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlineOutlined from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport CollectionModal from \"./CollectionModal\";\r\nimport FieldTypes from \"components/FieldTypes\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport { useNotify } from \"components/NotificationsProvider\";\r\nimport SpecifyFieldDetails, { SpecifyFieldDetailsProps } from \"./SpecifyFieldDetails\";\r\nimport SelectFieldType, { SelectFieldTypeProps } from \"./SelectFieldType\";\r\nimport { callComponent } from \"api/callComponent\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport DragIndicatorRounded from \"@material-ui/icons/DragIndicatorRounded\";\r\nimport InterfaceModal from \"./InterfaceModal\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport AddRounded from \"@material-ui/icons/AddRounded\";\r\nimport SettingsPage from \"components/SettingsPage\";\r\nimport { updateDocument } from \"api/collections\";\r\nimport { CollectionType, FieldInputType, AnyField } from \"api/collectionTypes\";\r\nimport { getCollectionField } from \"./GetCollectionField\";\r\n\r\nexport interface CollectionsBuilderProps {}\r\n\r\nexport const reorder = (list: any[], startIndex: number, endIndex: number) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst COLLECTION_ID = \"CollectionTypesReservedCollection\";\r\n\r\nconst CollectionsBuilder: React.FC<CollectionsBuilderProps> = () => {\r\n  const [collectionModalOpen, setCollectionModalOpen] = React.useState(false as boolean);\r\n  const dispatch = useDispatch();\r\n  const notify = useNotify();\r\n  const [editingCollectionDocId, setEditingCollectionDocId] = React.useState(\"\");\r\n  const [selectedCollection, setSelectedCollection] = React.useState(\"\");\r\n  const [interfaceColType, setInterfaceColType] = React.useState<CollectionType>();\r\n\r\n  const collections = useSelector(\r\n    (state: RootState) => state.collectionTypes.filter((x) => !x.isSystem),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (collections.length && !selectedCollection) {\r\n      setSelectedCollection(collections[0].docId);\r\n    }\r\n  }, [collections]);\r\n\r\n  const editField = async (selectedField: number) => {\r\n    const collection = collections.find((x) => x.docId === selectedCollection);\r\n    if (!collection) return;\r\n    let editableField = collection.fields[selectedField];\r\n\r\n    const field = await getCollectionField({\r\n      editableField,\r\n      zLevel: 0,\r\n      existingFieldNames: collection.fields\r\n        .filter((x) => x.id !== editableField.id)\r\n        .map((x) => x.id),\r\n    });\r\n\r\n    if (field) {\r\n      let newFields = JSON.parse(JSON.stringify(collection.fields));\r\n      newFields[selectedField] = field;\r\n      let res1 = await updateDocument(COLLECTION_ID, collection.docId, {\r\n        ...collection,\r\n        fields: newFields,\r\n      });\r\n      if (res1.error) {\r\n        notify(res1.error, { variant: \"error\" });\r\n      } else {\r\n        dispatch({ type: \"UPDATE_COLLECTION_FIELDS\", payload: newFields, docId: collection.docId });\r\n      }\r\n    }\r\n\r\n    return { success: false };\r\n  };\r\n\r\n  const addField = async () => {\r\n    const collection = collections.find((x) => x.docId === selectedCollection);\r\n    if (!collection) return;\r\n    const field = await getCollectionField({\r\n      zLevel: 0,\r\n      existingFieldNames: collection.fields.map((x) => x.id),\r\n    });\r\n    if (field) {\r\n      const newFields = [...collection.fields, field];\r\n\r\n      let res2 = await updateDocument(COLLECTION_ID, collection.docId, {\r\n        ...collection,\r\n        fields: newFields,\r\n      });\r\n\r\n      if (!res2.error) {\r\n        dispatch({\r\n          type: \"UPDATE_COLLECTION_FIELDS\",\r\n          payload: newFields,\r\n          docId: collection.docId,\r\n        });\r\n        notify(\"Field added!\", { variant: \"success\" });\r\n      } else {\r\n        notify(res2.error, { variant: \"error\" });\r\n      }\r\n    }\r\n\r\n    return { success: false };\r\n  };\r\n\r\n  const deleteField = async (fieldIndex: number) => {\r\n    let res = await confirm({\r\n      confirmation: \"Delete field?\",\r\n    });\r\n    if (res) {\r\n      let updatedCollection = JSON.parse(\r\n        JSON.stringify(collections.find((x) => x.docId === selectedCollection))\r\n      );\r\n      updatedCollection.fields.splice(fieldIndex, 1);\r\n      const res = await updateDocument(COLLECTION_ID, selectedCollection, updatedCollection);\r\n      if (res.error) {\r\n        notify(res.error, { variant: \"error\" });\r\n      } else {\r\n        dispatch({\r\n          type: \"UPDATE_COLLECTION_FIELDS\",\r\n          payload: updatedCollection.fields,\r\n          docId: selectedCollection,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onDragEnd = async (result: any) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    let col = collections.find((x) => x.docId === selectedCollection);\r\n    if (!col) return;\r\n\r\n    const fields = reorder(col.fields, result.source.index, result.destination.index);\r\n\r\n    dispatch({ type: \"UPDATE_COLLECTION_FIELDS\", payload: fields, docId: col.docId });\r\n    updateDocument(COLLECTION_ID, col.docId, {\r\n      ...col,\r\n      fields,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SettingsPage\r\n        entityContent={\r\n          <div className=\"h-full bg-white rounded overflow-hidden\">\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"droppable\">\r\n                {(provided, snapshot) => (\r\n                  <SimpleBar\r\n                    className=\"overflow-auto w-full h-full scrollbar-light scrollbar-thin py-0.5\"\r\n                    autoHide={false}\r\n                  >\r\n                    <div\r\n                      className=\"min-w-430px\"\r\n                      {...provided.droppableProps}\r\n                      ref={provided.innerRef as any}\r\n                    >\r\n                      {collections\r\n                        .find((x) => x.docId === selectedCollection)\r\n                        ?.fields.map((x, i) => {\r\n                          const Badge = FieldTypes.find((t) => t.type === x.type)?.Badge;\r\n                          return (\r\n                            <Draggable key={x.id} draggableId={x.id} index={i}>\r\n                              {(provided, snapshot) => (\r\n                                <div\r\n                                  data-testid={`field-id-${x.id}`}\r\n                                  key={`field-${i}`}\r\n                                  className=\"bg-white hover:bg-fireck-4 flex mb-2 items-center px-2 py-0.5\"\r\n                                  ref={provided.innerRef}\r\n                                  {...provided.draggableProps}\r\n                                >\r\n                                  <div {...provided.dragHandleProps}>\r\n                                    <DragIndicatorRounded fontSize=\"inherit\" className=\"text-lg\" />\r\n                                  </div>\r\n\r\n                                  <div className=\"line-clamp-1 w-5/12 px-3\">{x.id}</div>\r\n                                  <div className=\"flex w-4/12 flex-shrink-0 items-center\">\r\n                                    {Badge ? <Badge></Badge> : null}\r\n                                    <span className=\"ml-3 hidden sm:block line-clamp-1\">\r\n                                      {x.type}\r\n                                    </span>\r\n                                  </div>\r\n                                  {x.isDefault ? null : (\r\n                                    <div className=\"flex items-center flex-grow justify-end\">\r\n                                      <div\r\n                                        data-testid={`edit-for-field-${x.id}`}\r\n                                        className=\"h-5 w-5 flex items-center justify-center rounded cursor-pointer hover:bg-white\"\r\n                                        onClick={() => {\r\n                                          editField(i);\r\n                                        }}\r\n                                      >\r\n                                        <EditOutlined\r\n                                          fontSize=\"inherit\"\r\n                                          classes={{ root: \"pointer-events-none text-lg\" }}\r\n                                        ></EditOutlined>\r\n                                      </div>\r\n                                      <div\r\n                                        className=\"h-5 w-5 flex items-center justify-center rounded cursor-pointer hover:bg-red-FF0000 hover:text-white\"\r\n                                        data-testid={`delete-for-field-${x.id}`}\r\n                                        onClick={() => deleteField(i)}\r\n                                      >\r\n                                        <DeleteOutlineOutlined\r\n                                          classes={{ root: \"pointer-events-none text-lg\" }}\r\n                                          fontSize=\"inherit\"\r\n                                        ></DeleteOutlineOutlined>\r\n                                      </div>\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          );\r\n                        })}\r\n                      {provided.placeholder}\r\n                    </div>\r\n                  </SimpleBar>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n          </div>\r\n        }\r\n        selectedEntityId={selectedCollection}\r\n        entity=\"collection\"\r\n        enitityPlural=\"collections\"\r\n        entities={collections}\r\n        onSelectEntity={(docId) => setSelectedCollection(docId)}\r\n        onAddEntity={() => setCollectionModalOpen(true)}\r\n        onInvokeEntityEdit={() => {\r\n          setEditingCollectionDocId(selectedCollection);\r\n          setCollectionModalOpen(true);\r\n        }}\r\n        entityButtons={\r\n          <div className=\"flex flex-wrap\">\r\n            <Button\r\n              data-testid=\"view-interface-btn\"\r\n              onClick={() =>\r\n                setInterfaceColType(collections.find((x) => x.docId === selectedCollection))\r\n              }\r\n              className=\"border border-white h-28px text-white mr-3 mb-3 px-5 min-w-unset\"\r\n            >\r\n              <div className=\"flex items-center pointer-events-none\">Interface</div>\r\n            </Button>\r\n            <Button\r\n              data-testid=\"add-new-field-btn\"\r\n              onClick={async () => {\r\n                addField();\r\n              }}\r\n              className=\"bg-fireck-4 hover:bg-fireck-4-hover mb-3 h-28px pl-3 min-w-unset\"\r\n            >\r\n              <div className=\"flex items-center pointer-events-none\">\r\n                <AddRounded className=\"mr-2 text-lg\" fontSize=\"inherit\"></AddRounded>\r\n                <span>Add field</span>\r\n              </div>\r\n            </Button>\r\n          </div>\r\n        }\r\n      ></SettingsPage>\r\n\r\n      <CollectionModal\r\n        editingCollectionDocId={editingCollectionDocId}\r\n        collections={collections}\r\n        onCreate={(val) => {\r\n          dispatch({ type: \"ADD_COLLECTION_TYPE\", payload: val });\r\n          setSelectedCollection(val.docId);\r\n        }}\r\n        onUpdate={(val) => {\r\n          dispatch({ type: \"UPDATE_COLLECTION_TYPE\", payload: val, docId: val.docId });\r\n        }}\r\n        onDelete={(docId) => {\r\n          setSelectedCollection(\"\");\r\n          setEditingCollectionDocId(\"\");\r\n          dispatch({ type: \"DELETE_COLLECTION_TYPE\", payload: docId });\r\n        }}\r\n        open={collectionModalOpen}\r\n        onClose={() => {\r\n          setCollectionModalOpen(false);\r\n          setEditingCollectionDocId(\"\");\r\n        }}\r\n      ></CollectionModal>\r\n      <InterfaceModal\r\n        onClose={() => setInterfaceColType(undefined)}\r\n        open={interfaceColType ? true : false}\r\n        collectionType={interfaceColType}\r\n      ></InterfaceModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CollectionsBuilder;\r\n"],"sourceRoot":""}