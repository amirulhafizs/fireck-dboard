{"version":3,"sources":["api/callComponent.tsx","components/Select.tsx","components/Label.tsx","components/IconButton.tsx","components/EmptyScreen.tsx","assets/one-to-one.svg","assets/one-to-many.svg","components/ToupleInput.tsx","pages/CollectionTypes/CollectionModal.tsx","assets/subcollection.svg","components/FieldTypes/Wrapper.tsx","components/FieldTypes/String.tsx","components/FieldTypes/Number.tsx","components/FieldTypes/Map.tsx","components/FieldTypes/Array.tsx","components/FieldTypes/Boolean.tsx","components/FieldTypes/Date.tsx","components/FieldTypes/Media.tsx","components/FieldTypes/RichText.tsx","components/FieldTypes/Json.tsx","components/FieldTypes/Enum.tsx","components/FieldTypes/Password.tsx","components/FieldTypes/Relation.tsx","components/FieldTypes/index.tsx","components/FieldTypes/Subcollection.tsx","pages/CollectionTypes/SelectFieldType.tsx","pages/CollectionTypes/GetCollectionField.ts","pages/CollectionTypes/SpecifyFieldDetails.tsx","components/TypescriptSyntax.tsx","pages/CollectionTypes/InterfaceModal.tsx","pages/CollectionTypes/index.tsx"],"names":["callComponent","Component","props","Promise","resolve","reject","wrapper","document","getElementById","appendChild","createElement","console","log","ReactDOM","render","store","proceed","val","unmountComponentAtNode","parentNode","removeChild","WarningIcon","React","forwardRef","ref","className","size","Select","options","error","white","classNames","spellCheck","map","x","i","data-testid","value","label","title","placement","fontSize","Label","children","groundColor","IconButton","variant","rest","EmptyScreen","onCreate","buttonTitle","onClick","_path","_circle","_circle2","_extends","Object","assign","target","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgOneToOne","_ref","svgRef","titleId","width","height","viewBox","fill","xmlns","id","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","ForwardRef","_path2","_circle3","SvgOneToMany","ToupleInput","setValue","disabled","opt","icon","createId","string","str","char","toLowerCase","toUpperCase","match","AddNewCollection","open","onClose","collections","editingCollectionIndex","onUpdate","onDelete","notify","useNotify","formIntialState","name","single","draftable","fields","lastIndex","docId","useFormik","enableReinitialize","onSubmit","vals","a","resetForm","updateCollectionType","values","createCollectionType","res","actionType","initialValues","validate","errors","index","findIndex","handleSubmit","handleChange","setFieldValue","isSubmitting","submitCount","Modal","hideBackdrop","style","maxWidth","Input","onChange","onKeyDown","e","Button","noMinWidth","confirm","confirmation","deleteDocId","deleteCollectionType","Wrapper","String","Number","Map","Array","Boolean","Media","Enum","Password","Relation","SvgSubcollection","fieldTypes","type","Badge","Date","RichText","Json","SelectFieldType","useState","fieldType","setFieldType","FieldTypes","replace","getCollectionField","editableField","existingFieldNames","zLevel","SpecifyFieldDetails","goBack","closer","res1","mediaSingle","enumOptions","relatedCollectionTypeDocId","relationOneToOne","displayOnTable","stringLong","collectionFields","enumOption","setEnumOption","SelectedFieldType","find","useSelector","state","collectionTypes","onDragEnd","result","destination","reorder","addEnumOption","arr","push","splice","toString","c","OneToOneIcon","OneToManyIcon","field","droppableId","provided","snapshot","droppableProps","innerRef","t","draggableId","draggableProps","dragHandleProps","f","filter","placeholder","TypescriptSyntax","code","theme","lineNumbers","readOnly","mode","getGap","count","reduce","b","getType","ident","identStep","docType","multiple","includes","types","password","json","array","media","date","enum","number","boolean","relation","collection","documentFields","script","generateInterface","colType","InterfaceModal","collectionType","copied","setCopied","interfaceString","onMouseDown","stopPropagation","navigator","clipboard","writeText","setTimeout","list","startIndex","endIndex","from","removed","CollectionsBuilder","collectionModalOpen","setCollectionModalOpen","dispatch","useDispatch","setEditingCollectionIndex","selectedCollection","setSelectedCollection","interfaceColType","setInterfaceColType","editField","selectedField","newFields","JSON","parse","stringify","payload","success","addField","autoHide","parseInt","isDefault","classes","root","updatedCollection","CollectionModal","undefined"],"mappings":"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","file":"static/js/11.1575c7cc.chunk.js","sourcesContent":["import ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"store\";\r\nimport NotificationsProvider from \"components/NotificationsProvider\";\r\n\r\nexport interface CallableComponent<T> {\r\n  proceed: (v: T) => void;\r\n}\r\n\r\ninterface callComponentArgs<T> {\r\n  Component: React.FC<any>;\r\n  props: Omit<T, \"proceed\">;\r\n}\r\n\r\nexport function callComponent<T, RT>({ Component, props }: callComponentArgs<T>): Promise<RT> {\r\n  return new Promise((resolve, reject) => {\r\n    const wrapper = document.getElementById(\"root\")?.appendChild(document.createElement(\"div\"));\r\n\r\n    console.log(\"Wrapper\", wrapper);\r\n    if (wrapper) {\r\n      ReactDOM.render(\r\n        <Provider store={store}>\r\n          <NotificationsProvider>\r\n            <Component\r\n              {...props}\r\n              proceed={(val: RT) => {\r\n                ReactDOM.unmountComponentAtNode(wrapper);\r\n                wrapper.parentNode?.removeChild(wrapper);\r\n                resolve(val);\r\n              }}\r\n            />\r\n          </NotificationsProvider>\r\n        </Provider>,\r\n        wrapper\r\n      );\r\n    }\r\n  });\r\n}\r\n","import { IoAlertCircleOutline } from \"react-icons/io5\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport React, { SelectHTMLAttributes } from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <IoAlertCircleOutline className=\"text-red-500\" size={20}></IoAlertCircleOutline>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport interface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n  options: { label: string; value: string | number }[];\r\n  error?: string | boolean;\r\n  white?: boolean;\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({\r\n  className = \"\",\r\n  options,\r\n  error,\r\n  white = false,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={`${className} relative flex items-center`}>\r\n      <select\r\n        className={classNames(\"px-3 h-34px border-2 border-solid w-full rounded outline-none\", {\r\n          \"border-red-400\": error,\r\n          \"focus:border-blue-300\": !error,\r\n          \"border-gray-300 bg-gray-300\": !white,\r\n          \"border-white bg-white\": white,\r\n        })}\r\n        {...props}\r\n        spellCheck={false}\r\n      >\r\n        {options.map((x, i) => (\r\n          <option data-testid={`select-option-${x.value}`} key={\"opt-\" + i} value={x.value}>\r\n            {x.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\nimport ErrorRounded from \"@material-ui/icons/ErrorRounded\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport classNames from \"classnames\";\r\n\r\nexport interface LabelProps {\r\n  error?: string | undefined | null;\r\n  className?: string;\r\n  children: any;\r\n  groundColor: \"black\" | \"white\";\r\n}\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <ErrorRounded className=\"text-red-500 text-xl\" fontSize=\"inherit\"></ErrorRounded>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Label: React.FC<LabelProps> = ({ className = \"\", children, error, groundColor }) => {\r\n  return (\r\n    <div\r\n      className={classNames(`flex justify-between relative ${className}`, {\r\n        \"text-white\": groundColor === \"black\",\r\n        \"text-black\": groundColor === \"white\",\r\n      })}\r\n    >\r\n      <div>{children}</div>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import ButtonBase from \"@material-ui/core/ButtonBase\";\r\n\r\nexport type IconButtonVariant = \"transparent\" | \"standard\";\r\n\r\nexport interface IconButtonProps {\r\n  className?: string;\r\n  variant?: IconButtonVariant;\r\n  [x: string]: any;\r\n}\r\n\r\nconst IconButton: React.FC<IconButtonProps> = ({\r\n  className = \"\",\r\n  variant = \"standard\",\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <ButtonBase\r\n      {...rest}\r\n      className={\r\n        `outline-none h-26px w-26px rounded ${\r\n          variant === \"standard\"\r\n            ? \"bg-orange-300 hover:bg-orange-301\"\r\n            : \"hover:bg-black hover:bg-opacity-5\"\r\n        }  ` + className\r\n      }\r\n    ></ButtonBase>\r\n  );\r\n};\r\n\r\nexport default IconButton;\r\n","import Button from \"components/Button\";\r\n\r\nexport interface EmptyScreenProps {\r\n  title: string;\r\n  buttonTitle: string;\r\n  onCreate: () => void;\r\n}\r\n\r\nconst EmptyScreen: React.FC<EmptyScreenProps> = ({ title, onCreate, buttonTitle }) => {\r\n  return (\r\n    <div className=\"h-96 bg-gray-300 rounded-md flex w-full p-12\">\r\n      <div className=\"m-auto\">\r\n        <div className=\"text-22px mb-5 font-medium text-center\">{title}</div>\r\n        <Button\r\n          data-testid=\"empty-screen-btn\"\r\n          className=\"mx-auto bg-orange-300 hover:bg-orange-301 block\"\r\n          onClick={onCreate}\r\n        >\r\n          {buttonTitle}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyScreen;\r\n","var _path, _circle, _circle2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgOneToOne(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 40,\n    height: 9,\n    viewBox: \"0 0 40 9\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.36621 4.67223H30.7241M30.7241 4.67223L28.3085 2.25659M30.7241 4.67223L28.3085 7.08786\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.37296,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 4.69562,\n    cy: 4.49835,\n    r: 3.31773,\n    stroke: \"currentColor\",\n    strokeWidth: 1.37296\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 35.3948,\n    cy: 4.49835,\n    r: 3.31773,\n    stroke: \"currentColor\",\n    strokeWidth: 1.37296\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOneToOne);\nexport default __webpack_public_path__ + \"static/media/one-to-one.19766dd4.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _circle, _circle2, _circle3;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgOneToMany(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 40,\n    height: 37,\n    viewBox: \"0 0 40 37\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.5875 18.8431L30.4119 7.39751M30.4119 7.39751L26.8752 6.44984M30.4119 7.39751L29.4643 10.9342\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.47153,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.5873 18.8433L30.4117 30.2889M30.4117 30.2889L29.4641 26.7522M30.4117 30.2889L26.875 31.2366\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.47153,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 5.00165,\n    cy: 18.7858,\n    r: 3.55593,\n    stroke: \"currentColor\",\n    strokeWidth: 1.47153\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 35.2653,\n    cy: 32.5311,\n    r: 3.55593,\n    stroke: \"currentColor\",\n    strokeWidth: 1.47153\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 35.2653,\n    cy: 5.15558,\n    r: 3.55593,\n    stroke: \"currentColor\",\n    strokeWidth: 1.47153\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOneToMany);\nexport default __webpack_public_path__ + \"static/media/one-to-many.ace4634d.svg\";\nexport { ForwardRef as ReactComponent };","export interface ToupleInputProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  setValue: (a: any) => void;\r\n  options: {\r\n    value: any;\r\n    label: string;\r\n    icon?: React.FunctionComponent<React.SVGProps<SVGSVGElement>>;\r\n  }[];\r\n  value: any;\r\n  disabled?: boolean;\r\n}\r\n\r\nconst ToupleInput: React.FC<ToupleInputProps> = ({\r\n  className = \"\",\r\n  options,\r\n  value,\r\n  setValue,\r\n  disabled,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <div className={\"flex -mx-2 flex-wrap sm:flex-nowrap mb-10 \" + className} {...rest}>\r\n      {options.map((opt, i) => (\r\n        <div\r\n          data-testid={`touple-option-${opt.value}`}\r\n          key={opt.value}\r\n          onClick={() => setValue(opt.value)}\r\n          className={`sm:w-1/2 w-full mx-2 mb-3 sm:mb-0 py-7 select-none ${\r\n            disabled ? \"cursor-default\" : \"cursor-pointer\"\r\n          } flex items-center justify-center rounded ${\r\n            value === opt.value\r\n              ? \"border-4 border-orange-300\"\r\n              : `bg-gray-300 ${disabled ? \"\" : \"hover:bg-gray-301\"}`\r\n          }`}\r\n        >\r\n          <div className=\"flex items-center pointer-events-none\">\r\n            <div className={opt.icon ? \"mr-7\" : \"\"}>{opt.label}</div>\r\n            {opt.icon ? <opt.icon></opt.icon> : null}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToupleInput;\r\n","import Modal from \"@material-ui/core/Modal\";\r\nimport Input from \"components/Input\";\r\nimport React from \"react\";\r\nimport Button from \"components/Button\";\r\nimport {\r\n  createCollectionType,\r\n  updateCollectionType,\r\n  CollectionType,\r\n  deleteCollectionType,\r\n} from \"api/collectionTypes\";\r\nimport { useNotify } from \"components/NotificationsProvider\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport { useFormik } from \"formik\";\r\nimport ToupleInput from \"components/ToupleInput\";\r\nimport CloseRounded from \"@material-ui/icons/CloseRounded\";\r\n\r\nexport interface AddNewCollectionProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  collections: Array<CollectionType>;\r\n  editingCollectionIndex: number;\r\n  onCreate: (val: CollectionType) => void;\r\n  onUpdate: (val: Partial<CollectionType>) => void;\r\n  onDelete: (docId: string) => void;\r\n}\r\n\r\nfunction isNumeric(char: any) {\r\n  return char >= \"0\" && char <= \"9\";\r\n}\r\n\r\nfunction isLetter(str: any) {\r\n  return str.length === 1 && str.match(/[a-z]/i);\r\n}\r\n\r\nconst createId = (string: string) => {\r\n  let id = \"\";\r\n  for (let i = 0; i < string.length; i++) {\r\n    if (string[i] === \" \") {\r\n      id += \"-\";\r\n    } else if (\r\n      i > 0 &&\r\n      string[i - 1].toLowerCase() === string[i - 1] &&\r\n      string[i - 1] !== \" \" &&\r\n      string[i].toUpperCase() === string[i] &&\r\n      !isNumeric(string[i]) &&\r\n      isLetter(string[i])\r\n    ) {\r\n      id += \"-\" + string[i].toLowerCase();\r\n    } else {\r\n      id += string[i].toLowerCase();\r\n    }\r\n  }\r\n  return id;\r\n};\r\n\r\nconst AddNewCollection: React.FC<AddNewCollectionProps> = ({\r\n  open,\r\n  onClose,\r\n  collections,\r\n  editingCollectionIndex,\r\n  onCreate,\r\n  onUpdate,\r\n  onDelete,\r\n}) => {\r\n  const initialData = {\r\n    name: \"\",\r\n    id: \"\",\r\n    single: false,\r\n    draftable: true,\r\n    fields: [],\r\n    size: 0,\r\n    lastIndex: 0,\r\n    docId: \"\",\r\n  } as CollectionType;\r\n\r\n  const notify = useNotify();\r\n\r\n  const formIntialState =\r\n    editingCollectionIndex >= 0 ? collections[editingCollectionIndex] : initialData;\r\n\r\n  const { values, errors, handleSubmit, handleChange, setFieldValue, isSubmitting, submitCount } =\r\n    useFormik({\r\n      enableReinitialize: true,\r\n      onSubmit: async (vals, { resetForm }) => {\r\n        const id = createId(vals.name);\r\n\r\n        const res =\r\n          editingCollectionIndex > -1\r\n            ? await updateCollectionType(values.docId, { ...values, id })\r\n            : await createCollectionType({ ...values, id });\r\n        const actionType = editingCollectionIndex > -1 ? \"updated\" : \"created\";\r\n        if (!res.error) {\r\n          if (editingCollectionIndex > -1) {\r\n            onUpdate(res);\r\n          } else {\r\n            onCreate(res);\r\n          }\r\n          resetForm();\r\n          onClose();\r\n          notify(\"Collection type \" + actionType + \"!\", { variant: \"success\" });\r\n        } else {\r\n          notify(\"Collection type was not \" + actionType, { variant: \"error\" });\r\n        }\r\n      },\r\n      initialValues: formIntialState,\r\n      validate: (vals) => {\r\n        let errors: { [key: string]: string } = {};\r\n        if (!vals.name) {\r\n          errors.name = \"Collection name is required\";\r\n        } else {\r\n          const id = createId(vals.name);\r\n          const index = collections.findIndex((x) => x.id === id);\r\n          if (index !== -1 && index !== editingCollectionIndex) {\r\n            errors.name = \"There is collection with the same name\";\r\n          }\r\n        }\r\n        return errors;\r\n      },\r\n    });\r\n\r\n  return (\r\n    <Modal open={open} hideBackdrop>\r\n      <div className=\"w-full h-full flex overflow-auto bg-black bg-opacity-40 p-7\">\r\n        <div\r\n          className=\"m-auto rounded bg-white w-full p-7 relative animate-littlemoveup\"\r\n          style={{ maxWidth: 600 }}\r\n        >\r\n          <CloseRounded\r\n            className=\"absolute top-0 right-0 cursor-pointer\"\r\n            onClick={onClose}\r\n          ></CloseRounded>\r\n          <div className=\"text-22px font-medium mb-12\">\r\n            {editingCollectionIndex > -1 ? \"Edit\" : \"Create\"} collection type\r\n          </div>\r\n          <div className=\"flex flex-wrap mb-7\">\r\n            <div className=\"mb-3 sm:w-1/2 w-full sm:pr-2\">\r\n              <div className=\"mb-2\">Collection name</div>\r\n              <Input\r\n                groundColor=\"white\"\r\n                className=\"h-34px\"\r\n                data-testid={`collection-name-input`}\r\n                error={submitCount > 0 && errors.name ? errors.name : false}\r\n                value={values.name}\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    handleSubmit();\r\n                  }\r\n                }}\r\n              ></Input>\r\n            </div>\r\n            <div className=\"mb-3 sm:w-1/2 w-full sm:pl-2\">\r\n              <div className=\"mb-2\">UID</div>\r\n              <Input\r\n                className=\"h-34px\"\r\n                groundColor=\"white\"\r\n                disabled\r\n                value={createId(values.name)}\r\n                name=\"id\"\r\n              ></Input>\r\n            </div>\r\n          </div>\r\n          <ToupleInput\r\n            disabled={editingCollectionIndex !== -1}\r\n            value={values.single}\r\n            options={[\r\n              { value: false, label: \"Multiple elements\" },\r\n              { value: true, label: \"Single element\" },\r\n            ]}\r\n            setValue={(val) => (editingCollectionIndex === -1 ? setFieldValue(\"single\", val) : {})}\r\n          ></ToupleInput>\r\n          {editingCollectionIndex > -1 ? (\r\n            <Button\r\n              noMinWidth\r\n              data-testid=\"delete-collection-btn\"\r\n              onClick={async () => {\r\n                if (\r\n                  await confirm({\r\n                    confirmation: \"Delete collection type?\",\r\n                  })\r\n                ) {\r\n                  const deleteDocId = collections[editingCollectionIndex].docId;\r\n                  let res = await deleteCollectionType(deleteDocId);\r\n                  if (!res.error) {\r\n                    onClose();\r\n                    onDelete(deleteDocId);\r\n                    notify(\"Collection type deleted!\", { variant: \"success\" });\r\n                  } else {\r\n                    notify(\"Collection type was not deleted\", { variant: \"error\" });\r\n                  }\r\n                  onClose();\r\n                }\r\n              }}\r\n              className=\"border-2 h-34px px-4 border-red-500 text-red-500 mb-10 hover:bg-red-500 hover:text-white\"\r\n            >\r\n              Delete collection\r\n            </Button>\r\n          ) : null}\r\n\r\n          <div className=\"flex justify-between\">\r\n            <Button onClick={() => onClose()} className=\"bg-blue-300 hover:bg-blue-400 text-white\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              data-testid=\"submit-btn\"\r\n              disabled={isSubmitting}\r\n              onClick={() => handleSubmit()}\r\n              className=\"bg-fireck-4 hover:bg-fireck-4-hover h-34px\"\r\n            >\r\n              {isSubmitting ? \"Loading...\" : \"Submit\"}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewCollection;\r\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSubcollection(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 11,\n    viewBox: \"0 0 19 19\",\n    fill: \"currentColor\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.570312 0.778809H6.57031V4.77881H0.570312V0.778809ZM12.5703 7.77881H18.5703V11.7788H12.5703V7.77881ZM12.5703 14.7788H18.5703V18.7788H12.5703V14.7788ZM10.5703 10.7788H4.57031V15.7788H10.5703V17.7788H4.57031H2.57031V6.77881H4.57031V8.77881H10.5703V10.7788Z\",\n    fill: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSubcollection);\nexport default __webpack_public_path__ + \"static/media/subcollection.7a823e1e.svg\";\nexport { ForwardRef as ReactComponent };","interface WrapperProps {}\r\n\r\nconst Wrapper: React.FC<WrapperProps> = (props) => {\r\n  return (\r\n    <div\r\n      {...props}\r\n      className=\"w-8 rounded h-5 bg-fireck-4 text-center flex justify-center items-center text-10px font-medium\"\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n","import Wrapper from \"./Wrapper\";\r\n\r\nconst String: React.FC = () => {\r\n  return <Wrapper>Ab</Wrapper>;\r\n};\r\n\r\nexport default String;\r\n","import Wrapper from \"./Wrapper\";\r\n\r\nconst Number: React.FC = () => {\r\n  return <Wrapper>123</Wrapper>;\r\n};\r\n\r\nexport default Number;\r\n","import Wrapper from \"./Wrapper\";\r\n\r\nconst Map: React.FC = () => {\r\n  return <Wrapper>{\"{ }\"}</Wrapper>;\r\n};\r\n\r\nexport default Map;\r\n","import Wrapper from \"./Wrapper\";\r\n\r\nconst Array: React.FC = () => {\r\n  return <Wrapper>[ ]</Wrapper>;\r\n};\r\n\r\nexport default Array;\r\n","import ToggleOnOutlinedIcon from \"@material-ui/icons/ToggleOnOutlined\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Boolean: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <ToggleOnOutlinedIcon fontSize=\"inherit\" className=\"text-lg\"></ToggleOnOutlinedIcon>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Boolean;\r\n","import CalendarTodayOutlinedIcon from \"@material-ui/icons/CalendarTodayOutlined\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Boolean: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <CalendarTodayOutlinedIcon fontSize=\"inherit\" className=\"text-sm\"></CalendarTodayOutlinedIcon>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Boolean;\r\n","import PanoramaOutlinedIcon from \"@material-ui/icons/PanoramaOutlined\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Media: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <PanoramaOutlinedIcon fontSize=\"inherit\" className=\"text-base\"></PanoramaOutlinedIcon>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Media;\r\n","import NotesIcon from \"@material-ui/icons/Notes\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Media: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <NotesIcon fontSize=\"inherit\" className=\"text-base\"></NotesIcon>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Media;\r\n","import Wrapper from \"./Wrapper\";\r\n\r\nconst Boolean: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <span className=\"text-10px\">JSON</span>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Boolean;\r\n","import ListRounded from \"@material-ui/icons/ListRounded\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Enum: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <ListRounded fontSize=\"inherit\" className=\"text-xl\"></ListRounded>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Enum;\r\n","import VpnKeyRounded from \"@material-ui/icons/VpnKeyRounded\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Password: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <VpnKeyRounded fontSize=\"inherit\" className=\"text-base\"></VpnKeyRounded>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Password;\r\n","import Link from \"@material-ui/icons/Link\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Relation: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Link fontSize=\"inherit\" className=\"text-lg\"></Link>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Relation;\r\n","import String from \"./String\";\r\nimport Number from \"./Number\";\r\nimport Map from \"./Map\";\r\nimport Array from \"./Array\";\r\nimport Boolean from \"./Boolean\";\r\nimport Date from \"./Date\";\r\nimport Media from \"./Media\";\r\nimport RichText from \"./RichText\";\r\nimport Json from \"./Json\";\r\nimport Enum from \"./Enum\";\r\nimport Password from \"./Password\";\r\nimport Relation from \"./Relation\";\r\nimport Subcollection from \"./Subcollection\";\r\n\r\nconst fieldTypes = [\r\n  { type: \"string\", Badge: String },\r\n  { type: \"number\", Badge: Number },\r\n  { type: \"map\", Badge: Map },\r\n  { type: \"array\", Badge: Array },\r\n  { type: \"boolean\", Badge: Boolean },\r\n  { type: \"date\", Badge: Date },\r\n  { type: \"media\", Badge: Media },\r\n  { type: \"rich-text\", Badge: RichText },\r\n  { type: \"json\", Badge: Json },\r\n  { type: \"enum\", Badge: Enum },\r\n  { type: \"password\", Badge: Password },\r\n  { type: \"relation\", Badge: Relation },\r\n  { type: \"collection\", Badge: Subcollection },\r\n];\r\n\r\nexport default fieldTypes;\r\n","import { ReactComponent as SubColIcon } from \"assets/subcollection.svg\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nconst Media: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <SubColIcon className=\"m-auto\"></SubColIcon>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Media;\r\n","import FieldTypes from \"components/FieldTypes\";\r\nimport React from \"react\";\r\nimport { FieldInputType } from \"api/collectionTypes\";\r\nimport Button from \"components/Button\";\r\nimport CloseRounded from \"@material-ui/icons/CloseRounded\";\r\n\r\nexport interface SelectFieldTypeProps {\r\n  proceed: Function;\r\n}\r\n\r\nconst SelectFieldType: React.FC<SelectFieldTypeProps> = ({ proceed }) => {\r\n  const [fieldType, setFieldType] = React.useState(\"string\" as FieldInputType);\r\n\r\n  return (\r\n    <div className=\"fixed left-0 top-0 w-full h-full flex overflow-auto bg-black bg-opacity-40 p-7\">\r\n      <div\r\n        className=\"m-auto rounded bg-white p-7 w-full relative animate-littlemoveup\"\r\n        style={{ maxWidth: 550 }}\r\n      >\r\n        <CloseRounded\r\n          className=\"cursor-pointer absolute top-0 right-0\"\r\n          onClick={() => proceed(false)}\r\n        ></CloseRounded>\r\n        <div className=\"text-22px font-medium mb-7\">Select field type</div>\r\n        <div className=\"mb-6\">\r\n          <div className=\"flex flex-wrap\">\r\n            {FieldTypes.map((x, i) => (\r\n              <div\r\n                data-testid={`fieldtype-option-${x.type}`}\r\n                onClick={() => setFieldType(x.type as FieldInputType)}\r\n                key={`field-type-${i}`}\r\n                className={`flex md:w-1/3 sm:w-1/2 w-full select-none p-3 border-4 border-solid border-white items-center cursor-pointer rounded  ${\r\n                  fieldType === x.type\r\n                    ? \"border-orange-300\"\r\n                    : \"hover:border-gray-300 hover:bg-gray-300\"\r\n                }`}\r\n              >\r\n                <div className=\"flex items-center pointer-events-none\">\r\n                  <x.Badge></x.Badge>\r\n                  <span className=\"capitalize ml-2 line-clamp-1\">{x.type.replace(\"-\", \" \")}</span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"flex justify-between\">\r\n          <Button\r\n            data-testid=\"cancel-field-type-btn\"\r\n            onClick={() => {\r\n              proceed(false);\r\n            }}\r\n            className=\"bg-blue-300 hover:bg-blue-400 text-white h-34px\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            data-testid=\"submit-field-type-btn\"\r\n            onClick={() => {\r\n              proceed(fieldType);\r\n            }}\r\n            className=\"bg-fireck-4 hover:bg-fireck-4-hover h-34px\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectFieldType;\r\n","import { callComponent } from \"api/callComponent\";\r\nimport { FieldInputType, FieldType } from \"api/collectionTypes\";\r\nimport SelectFieldType, { SelectFieldTypeProps } from \"./SelectFieldType\";\r\nimport SpecifyFieldDetails, { SpecifyFieldDetailsProps } from \"./SpecifyFieldDetails\";\r\n\r\nexport const getCollectionField = async ({\r\n  editableField,\r\n  existingFieldNames,\r\n  zLevel,\r\n}: {\r\n  editableField?: FieldType;\r\n  existingFieldNames?: string[];\r\n  zLevel: number;\r\n}) => {\r\n  let res = editableField\r\n    ? editableField.type\r\n    : await callComponent<SelectFieldTypeProps, FieldInputType | boolean>({\r\n        Component: SelectFieldType,\r\n        props: {},\r\n      });\r\n\r\n  if (typeof res === \"boolean\") return null;\r\n\r\n  const fieldType = res;\r\n  let res1 = await callComponent<SpecifyFieldDetailsProps, Omit<FieldType, \"type\"> | boolean>({\r\n    Component: SpecifyFieldDetails,\r\n    props: {\r\n      fieldType,\r\n      editableField,\r\n      existingFieldNames,\r\n      zLevel,\r\n      goBack: (closer) => {\r\n        closer();\r\n        getCollectionField({ editableField, existingFieldNames, zLevel });\r\n      },\r\n    },\r\n  });\r\n  if (typeof res1 === \"boolean\") return null;\r\n\r\n  return { ...res1, type: res };\r\n};\r\n","import React from \"react\";\r\nimport Input from \"components/Input\";\r\nimport Button from \"components/Button\";\r\nimport { FieldInputType, FieldType } from \"api/collectionTypes\";\r\nimport FieldTypes from \"components/FieldTypes\";\r\nimport Select from \"components/Select\";\r\nimport { ReactComponent as OneToOneIcon } from \"assets/one-to-one.svg\";\r\nimport { ReactComponent as OneToManyIcon } from \"assets/one-to-many.svg\";\r\nimport Label from \"components/Label\";\r\nimport ToupleInput from \"components/ToupleInput\";\r\nimport { useFormik } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"store\";\r\nimport AddCircleOutlineRounded from \"@material-ui/icons/AddCircleOutlineRounded\";\r\nimport IconButton from \"components/IconButton\";\r\nimport EditOutlined from \"@material-ui/icons/EditOutlined\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport Delete from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport { getCollectionField } from \"./GetCollectionField\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { reorder } from \".\";\r\nimport CloseRounded from \"@material-ui/icons/CloseRounded\";\r\n\r\nexport interface SpecifyFieldDetailsProps {\r\n  editableField?: FieldType;\r\n  existingFieldNames?: string[];\r\n  fieldType: FieldInputType;\r\n  proceed: Function;\r\n  zLevel: number;\r\n  goBack: (closer: () => void) => void;\r\n}\r\n\r\nconst SpecifyFieldDetails: React.FC<SpecifyFieldDetailsProps> = ({\r\n  editableField,\r\n  existingFieldNames,\r\n  proceed,\r\n  fieldType,\r\n  zLevel,\r\n  goBack,\r\n}) => {\r\n  const initialValues = {\r\n    id: \"\",\r\n    mediaSingle: false,\r\n    enumOptions: [] as Array<string>,\r\n    relatedCollectionTypeDocId: \"\",\r\n    relationOneToOne: true,\r\n    displayOnTable: true,\r\n    stringLong: false,\r\n    collectionFields: [] as FieldType[],\r\n  };\r\n  const { values, errors, handleChange, handleSubmit, setFieldValue, submitCount } = useFormik({\r\n    onSubmit: (vals) => {\r\n      proceed(vals);\r\n    },\r\n    initialValues: editableField ? { ...initialValues, ...editableField } : initialValues,\r\n    validate: (vals) => {\r\n      const errors: any = {};\r\n\r\n      if (!vals.id) {\r\n        errors.id = \"Field name is required\";\r\n      } else if (existingFieldNames && existingFieldNames.findIndex((x) => x === vals.id) > -1) {\r\n        errors.id = \"There is field with the same name\";\r\n      }\r\n\r\n      if (fieldType === \"enum\" && vals.enumOptions.length < 2) {\r\n        errors.enumOptions = \"Enum requires at least two options\";\r\n      }\r\n\r\n      if (fieldType === \"relation\" && vals.relatedCollectionTypeDocId === \"\") {\r\n        errors.relatedCollectionTypeDocId = \"Select related collection\";\r\n      }\r\n\r\n      return errors;\r\n    },\r\n  });\r\n  const [enumOption, setEnumOption] = React.useState(\"\");\r\n\r\n  const SelectedFieldType = FieldTypes.find((x) => x.type === fieldType);\r\n  const collections = useSelector((state: RootState) => state.collectionTypes);\r\n\r\n  const onDragEnd = async (result: any) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    const fields = reorder(values.collectionFields, result.source.index, result.destination.index);\r\n    setFieldValue(\"collectionFields\", fields);\r\n  };\r\n\r\n  const addEnumOption = () => {\r\n    if (enumOption) {\r\n      let arr = [...values.enumOptions];\r\n      arr.push(enumOption);\r\n      setFieldValue(\"enumOptions\", arr);\r\n      setEnumOption(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed left-0 top-0 w-full h-full flex overflow-auto bg-black bg-opacity-40\">\r\n      <div\r\n        style={{ maxWidth: 550 }}\r\n        className=\"m-auto rounded bg-white p-7 w-full relative animate-littlemoveup\"\r\n      >\r\n        <CloseRounded\r\n          className=\"absolute top-0 right-0 cursor-pointer\"\r\n          onClick={() => proceed(false)}\r\n        ></CloseRounded>\r\n        <div className=\"text-22px font-medium mb-9 flex items-center\">\r\n          {SelectedFieldType ? <SelectedFieldType.Badge></SelectedFieldType.Badge> : null}\r\n          <span className=\"ml-3\">\r\n            {editableField ? \"Edit\" : \"Add\"} {SelectedFieldType ? SelectedFieldType.type : \"\"} field\r\n          </span>\r\n        </div>\r\n        <div className=\"mb-9\">\r\n          <div className=\"mb-2\">Field name</div>\r\n          <Input\r\n            groundColor=\"white\"\r\n            className=\"h-34px\"\r\n            data-testid={`field-id-input-${zLevel}`}\r\n            error={submitCount > 0 ? errors.id : \"\"}\r\n            value={values.id}\r\n            name=\"id\"\r\n            onChange={handleChange}\r\n            onKeyDown={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                handleSubmit();\r\n              }\r\n            }}\r\n          ></Input>\r\n        </div>\r\n\r\n        {fieldType === \"media\" ? (\r\n          <ToupleInput\r\n            data-testid={`media-touple-${zLevel}`}\r\n            options={[\r\n              { value: false, label: \"Multiple media\" },\r\n              { value: true, label: \"Single media\" },\r\n            ]}\r\n            value={values.mediaSingle}\r\n            setValue={(val) => setFieldValue(\"mediaSingle\", val)}\r\n          ></ToupleInput>\r\n        ) : fieldType === \"enum\" ? (\r\n          <div className=\"mb-10\">\r\n            <div className=\"mb-2\">Options</div>\r\n            <div className=\"flex flex-wrap\">\r\n              {values.enumOptions.map((x, i) => (\r\n                <div\r\n                  data-testid={`enum-option-${x}-${zLevel}`}\r\n                  key={`enum-option-${i}`}\r\n                  className=\"bg-gray-300 rounded flex items-center px-3 h-34px mr-3 mb-3\"\r\n                >\r\n                  <div className=\"mr-4\">{x}</div>\r\n                  <div\r\n                    className=\"cursor-pointer text-xs\"\r\n                    onClick={() => {\r\n                      let arr = [...values.enumOptions];\r\n                      arr.splice(i, 1);\r\n                      setFieldValue(\"enumOptions\", arr);\r\n                    }}\r\n                  >\r\n                    ✕\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"flex\">\r\n              <Input\r\n                data-testid={`enum-option-input-${zLevel}`}\r\n                className=\"mr-3\"\r\n                error={submitCount > 0 ? errors.enumOptions?.toString() : \"\"}\r\n                type=\"text\"\r\n                value={enumOption}\r\n                onChange={(e) => setEnumOption(e.target.value)}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    addEnumOption();\r\n                  }\r\n                }}\r\n              ></Input>\r\n              <Button\r\n                data-testid={`add-enum-option-btn-${zLevel}`}\r\n                onClick={addEnumOption}\r\n                className=\"bg-orange-300 hover:bg-orange-301\"\r\n              >\r\n                Add option\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        ) : fieldType === \"relation\" ? (\r\n          <div className=\"mb-10\">\r\n            <div className=\"mb-9\">\r\n              <Label\r\n                groundColor=\"white\"\r\n                error={submitCount > 0 ? errors.relatedCollectionTypeDocId : \"\"}\r\n                className=\"mb-2\"\r\n              >\r\n                Related collection\r\n              </Label>\r\n              <Select\r\n                data-testid={`related-collection-select-${zLevel}`}\r\n                options={[\r\n                  { value: \"\", label: \"Select\" },\r\n                  ...collections.map((c) => ({ label: c.id, value: c.docId })),\r\n                ]}\r\n                value={values.relatedCollectionTypeDocId}\r\n                onChange={(e) => setFieldValue(\"relatedCollectionTypeDocId\", e.target.value)}\r\n              ></Select>\r\n            </div>\r\n            <div className=\"mb-2\">Relation type</div>\r\n            <ToupleInput\r\n              data-testid={`relation-multiplicity-touple-${zLevel}`}\r\n              value={values.relationOneToOne}\r\n              setValue={(val) => setFieldValue(\"relationOneToOne\", val)}\r\n              options={[\r\n                { value: true, label: \"One to one\", icon: OneToOneIcon },\r\n                { value: false, label: \"One to many\", icon: OneToManyIcon },\r\n              ]}\r\n            ></ToupleInput>\r\n          </div>\r\n        ) : fieldType === \"string\" ? (\r\n          <ToupleInput\r\n            data-testid={`string-type-touple-${zLevel}`}\r\n            value={values.stringLong}\r\n            setValue={(val) => setFieldValue(\"stringLong\", val)}\r\n            options={[\r\n              { label: \"Short text\", value: false },\r\n              { label: \"Long text\", value: true },\r\n            ]}\r\n          ></ToupleInput>\r\n        ) : fieldType === \"collection\" ? (\r\n          <div className=\"mb-9\">\r\n            <div className=\"flex mb-2\">\r\n              <div className=\"mr-2\">Fields</div>\r\n              <AddCircleOutlineRounded\r\n                data-testid={`add-field-for-subcollection-btn-${zLevel}`}\r\n                className=\"cursor-pointer\"\r\n                onClick={async () => {\r\n                  const field = await getCollectionField({\r\n                    existingFieldNames: values.collectionFields.map((x) => x.id),\r\n                    zLevel: zLevel + 1,\r\n                  });\r\n                  if (!field) return;\r\n                  const fields = [...values.collectionFields, field];\r\n                  setFieldValue(\"collectionFields\", fields);\r\n                }}\r\n              ></AddCircleOutlineRounded>\r\n            </div>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"droppable-sub\">\r\n                {(provided, snapshot) => (\r\n                  <div\r\n                    className=\" max-h-247px overflow-auto\"\r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                  >\r\n                    {values.collectionFields.map((x, i) => {\r\n                      const Badge = FieldTypes.find((t) => t.type === x.type)?.Badge;\r\n                      return (\r\n                        <Draggable key={x.id} draggableId={x.id + 1} index={i}>\r\n                          {(provided, snapshot) => (\r\n                            <div\r\n                              key={`field-${i}`}\r\n                              className=\"rounded bg-gray-300 px-3 py-2 flex mb-2 items-center\"\r\n                              ref={provided.innerRef}\r\n                              {...provided.draggableProps}\r\n                              {...provided.dragHandleProps}\r\n                            >\r\n                              <div className=\"line-clamp-1 w-5/12 px-3\">{x.id}</div>\r\n                              <div className=\"flex w-4/12 flex-shrink-0\">\r\n                                {Badge ? <Badge></Badge> : null}\r\n                                <span className=\"ml-3 hidden sm:block line-clamp-1\">{x.type}</span>\r\n                              </div>\r\n                              <div className=\"flex items-center flex-grow justify-end\">\r\n                                <IconButton\r\n                                  variant=\"transparent\"\r\n                                  onClick={async () => {\r\n                                    const field = await getCollectionField({\r\n                                      zLevel: zLevel + 1,\r\n                                      editableField: x,\r\n                                      existingFieldNames: values.collectionFields\r\n                                        .map((f) => f.id)\r\n                                        .filter((f) => f !== x.id),\r\n                                    });\r\n\r\n                                    if (!field) return;\r\n\r\n                                    let fields = [...values.collectionFields];\r\n                                    fields[i] = { ...x, ...field };\r\n                                    setFieldValue(\"collectionFields\", fields);\r\n                                  }}\r\n                                >\r\n                                  <EditOutlined fontSize=\"small\"></EditOutlined>\r\n                                </IconButton>\r\n                                <IconButton\r\n                                  variant=\"transparent\"\r\n                                  onClick={async () => {\r\n                                    let res = await confirm({\r\n                                      confirmation: \"Do you really want to delete the field?\",\r\n                                    });\r\n                                    if (res) {\r\n                                      const fields = [...values.collectionFields];\r\n                                      fields.splice(i, 1);\r\n                                      setFieldValue(\"collectionFields\", fields);\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  <Delete fontSize=\"small\"></Delete>\r\n                                </IconButton>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </Draggable>\r\n                      );\r\n                    })}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n          </div>\r\n        ) : null}\r\n        <div className=\"flex justify-between\">\r\n          <Button\r\n            data-testid={`cancel-field-details-btn-${zLevel}`}\r\n            onClick={() => goBack(() => proceed(false))}\r\n            className=\"bg-blue-300 hover:bg-blue-400 text-white h-34px\"\r\n          >\r\n            {editableField ? \"Cancel\" : \"Back\"}\r\n          </Button>\r\n          <Button\r\n            data-testid={`submit-field-details-btn-${zLevel}`}\r\n            type=\"submit\"\r\n            onClick={() => handleSubmit()}\r\n            className=\"bg-fireck-4 hover:bg-fireck-4-hover h-34px\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpecifyFieldDetails;\r\n","import { UnControlled as CodeMirror } from \"react-codemirror2\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/addon/edit/closebrackets\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/addon/lint/lint\";\r\nimport \"codemirror/addon/lint/lint.css\";\r\n\r\ninterface TypescriptSyntaxProps {\r\n  code: string;\r\n}\r\n\r\nconst TypescriptSyntax: React.FC<TypescriptSyntaxProps> = ({ code }) => {\r\n  return (\r\n    <CodeMirror\r\n      value={code}\r\n      options={{\r\n        height: \"100%\",\r\n        theme: \"material\",\r\n        lineNumbers: true,\r\n        readOnly: true,\r\n        mode: \"text/typescript\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TypescriptSyntax;\r\n","import Modal from \"@material-ui/core/Modal\";\r\nimport { CollectionType, FieldType } from \"api/collectionTypes\";\r\nimport CloseRounded from \"@material-ui/icons/CloseRounded\";\r\nimport Assignment from \"@material-ui/icons/Assignment\";\r\nimport AssignmentTurnedIn from \"@material-ui/icons/AssignmentTurnedIn\";\r\nimport { useState } from \"react\";\r\nimport Button from \"components/Button\";\r\nimport TypescriptSyntax from \"components/TypescriptSyntax\";\r\nimport SimpleBar from \"simplebar-react\";\r\n\r\nexport interface InterfaceModalProps {\r\n  open: boolean;\r\n  collectionType?: CollectionType;\r\n  onClose: () => void;\r\n}\r\n\r\nconst getGap = (count: number) => {\r\n  return new Array(count).fill(0).reduce((a, b) => a + \" \", \"\");\r\n};\r\n\r\nconst getType = (type: FieldType, ident: number, identStep: number = 3): string => {\r\n  const docType = (fields: FieldType[], multiple: boolean = false) => {\r\n    return fields.length\r\n      ? `{\\n${fields.reduce(\r\n          (a, b) =>\r\n            a +\r\n            `${getGap(ident)}${\r\n              b.id.includes(\" \") || b.id.includes(\"-\") ? `\"${b.id}\"` : b.id\r\n            }: ${getType(b, ident + identStep)};\\n`,\r\n          \"\"\r\n        )}${getGap(ident - identStep)}${multiple ? \"}[]\" : \"}\"}`\r\n      : multiple\r\n      ? \"any[]\"\r\n      : \"null\";\r\n  };\r\n\r\n  const types = {\r\n    password: () => \"string\",\r\n    string: () => \"string\",\r\n    \"rich-text\": () => \"string\",\r\n    json: () => \"object\",\r\n    map: () => \"object\",\r\n    array: () => \"any[]\",\r\n    media: (x: FieldType) => (x.mediaSingle ? \"string\" : \"string[]\"),\r\n    date: () => \"string\",\r\n    enum: () => \"string[]\",\r\n    number: () => \"number\",\r\n    boolean: () => \"boolean\",\r\n    relation: (x: FieldType) => (x.relationOneToOne ? \"string\" : \"string[]\"),\r\n    collection: (x: FieldType) => docType(x.collectionFields, true),\r\n    document: (x: FieldType) => docType(x.documentFields),\r\n    script: () => \"object\",\r\n    \"script-V2\": () => \"object\",\r\n  };\r\n  return `${types[type.type](type)}`;\r\n};\r\n\r\nexport const generateInterface = (colType: CollectionType) => {\r\n  const docType: any = {\r\n    type: \"document\",\r\n    documentFields: colType.fields,\r\n  };\r\n\r\n  const intface = `interface Document ${getType(docType, 3)}`;\r\n  return intface;\r\n};\r\n\r\nconst InterfaceModal: React.FC<InterfaceModalProps> = ({ open, collectionType, onClose }) => {\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const interfaceString = collectionType ? generateInterface(collectionType) : \"\";\r\n\r\n  return !collectionType ? null : (\r\n    <Modal open={open} hideBackdrop>\r\n      <div\r\n        className=\"fixed left-0 top-0 w-full h-full flex overflow-auto bg-black bg-opacity-40 p-9\"\r\n        onMouseDown={onClose}\r\n      >\r\n        <div\r\n          className=\"bg-white p-7 m-auto max-h-600px h-full flex flex-col rounded md:max-w-lg max-w-sm w-full relative animate-littlemoveup\"\r\n          onMouseDown={(e) => e.stopPropagation()}\r\n        >\r\n          <CloseRounded\r\n            className=\"absolute top-0 right-0 cursor-pointer\"\r\n            onClick={onClose}\r\n          ></CloseRounded>\r\n          <div className=\"mb-7 text-22px capitalize font-medium\">\r\n            {collectionType.name} interface\r\n          </div>\r\n          <div className=\"relative flex-grow h-0 rounded overflow-hidden\">\r\n            {copied ? (\r\n              <div className=\"absolute z-20 text-white top-1 animate-littlemoveup right-1 cursor-pointer h-6 px-2 text-sm font-medium\">\r\n                Copied!\r\n              </div>\r\n            ) : (\r\n              <Button\r\n                noMinWidth\r\n                onClick={() => {\r\n                  navigator.clipboard.writeText(interfaceString);\r\n                  setCopied(true);\r\n                  setTimeout(() => {\r\n                    setCopied(false);\r\n                  }, 2000);\r\n                }}\r\n                className=\"absolute z-20 top-1 right-1 text-xs cursor-pointer h-6 px-3 bg-fireck-4 hover:bg-fireck-4-hover\"\r\n              >\r\n                Copy\r\n              </Button>\r\n            )}\r\n\r\n            <SimpleBar className=\"h-full scrollbar-dark\">\r\n              <TypescriptSyntax code={interfaceString}></TypescriptSyntax>\r\n            </SimpleBar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default InterfaceModal;\r\n","import Button from \"components/Button\";\r\nimport React from \"react\";\r\nimport {\r\n  updateCollectionType,\r\n  FieldInputType,\r\n  FieldType,\r\n  CollectionType,\r\n} from \"api/collectionTypes\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"store\";\r\nimport Edit from \"@material-ui/icons/EditRounded\";\r\nimport EditOutlined from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlineOutlined from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport CollectionModal from \"./CollectionModal\";\r\nimport FieldTypes from \"components/FieldTypes\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport { useNotify } from \"components/NotificationsProvider\";\r\nimport SpecifyFieldDetails, { SpecifyFieldDetailsProps } from \"./SpecifyFieldDetails\";\r\nimport SelectFieldType, { SelectFieldTypeProps } from \"./SelectFieldType\";\r\nimport { callComponent } from \"api/callComponent\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport DragIndicatorRounded from \"@material-ui/icons/DragIndicatorRounded\";\r\nimport Select from \"components/Select\";\r\nimport InterfaceModal from \"./InterfaceModal\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport EmptyScreen from \"components/EmptyScreen\";\r\nimport AddRounded from \"@material-ui/icons/AddRounded\";\r\n\r\nexport interface CollectionsBuilderProps {}\r\n\r\nexport const reorder = (list: any[], startIndex: number, endIndex: number) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst CollectionsBuilder: React.FC<CollectionsBuilderProps> = () => {\r\n  const [collectionModalOpen, setCollectionModalOpen] = React.useState(false as boolean);\r\n  const dispatch = useDispatch();\r\n  const notify = useNotify();\r\n  const [editingCollectionIndex, setEditingCollectionIndex] = React.useState(-1);\r\n  const [selectedCollection, setSelectedCollection] = React.useState(0);\r\n  const [interfaceColType, setInterfaceColType] = React.useState<CollectionType>();\r\n\r\n  const { collections } = useSelector((state: RootState) => ({\r\n    collections: state.collectionTypes,\r\n  }));\r\n\r\n  const editField = async (fieldType: FieldInputType, selectedField: number) => {\r\n    const collection = collections[selectedCollection];\r\n    let res = await callComponent<SpecifyFieldDetailsProps, FieldType | boolean>({\r\n      Component: SpecifyFieldDetails,\r\n      props: {\r\n        fieldType,\r\n        editableField: collection.fields[selectedField],\r\n        zLevel: 0,\r\n        goBack: (closer) => closer(),\r\n      },\r\n    });\r\n\r\n    if (!(typeof res === \"boolean\")) {\r\n      let newFields = JSON.parse(JSON.stringify(collection.fields));\r\n      newFields[selectedField] = { ...res };\r\n      dispatch({ type: \"UPDATE_COLLECTION_FIELDS\", payload: newFields, docId: collection.docId });\r\n      let res1 = await updateCollectionType(collection.docId, {\r\n        ...collection,\r\n        fields: newFields,\r\n      });\r\n      if (!res1.error) {\r\n        return { success: true };\r\n      }\r\n    }\r\n\r\n    return { success: false };\r\n  };\r\n\r\n  const addField = async () => {\r\n    const collection = collections[selectedCollection];\r\n    let res = await callComponent<SelectFieldTypeProps, FieldInputType | boolean>({\r\n      Component: SelectFieldType,\r\n      props: {},\r\n    });\r\n\r\n    if (!(typeof res === \"boolean\")) {\r\n      const fieldType = res;\r\n      let res1 = await callComponent<SpecifyFieldDetailsProps, Omit<FieldType, \"type\"> | boolean>({\r\n        Component: SpecifyFieldDetails,\r\n        props: {\r\n          fieldType,\r\n          existingFieldNames: collection.fields.map((x) => x.id),\r\n          zLevel: 0,\r\n          goBack: (closer) => {\r\n            closer();\r\n            addField();\r\n          },\r\n        },\r\n      });\r\n      if (!(typeof res1 === \"boolean\")) {\r\n        const newFields = [...collection.fields, { type: fieldType, ...res1 }];\r\n        dispatch({ type: \"UPDATE_COLLECTION_FIELDS\", payload: newFields, docId: collection.docId });\r\n        let res2 = await updateCollectionType(collection.docId, {\r\n          ...collection,\r\n          fields: newFields,\r\n        });\r\n        if (!res2.error) {\r\n          notify(\"Field added!\", { variant: \"success\" });\r\n          return { success: true };\r\n        } else {\r\n          notify(\"Field was not added\", { variant: \"error\" });\r\n        }\r\n      }\r\n    }\r\n\r\n    return { success: false };\r\n  };\r\n\r\n  const onDragEnd = async (result: any) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const fields = reorder(\r\n      collections[selectedCollection].fields,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n\r\n    const collection = collections[selectedCollection];\r\n    dispatch({ type: \"UPDATE_COLLECTION_FIELDS\", payload: fields, docId: collection.docId });\r\n    updateCollectionType(collection.docId, {\r\n      ...collection,\r\n      fields,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-full flex flex-col\">\r\n      <div className=\"flex flex-wrap justify-between mb-4\">\r\n        <div className=\"font-medium text-27px leading-none mb-4 mr-4 text-white\">Collections</div>\r\n        <Button\r\n          noMinWidth\r\n          data-testid=\"add-collection-btn\"\r\n          onClick={() => setCollectionModalOpen(true)}\r\n          className=\"bg-orange-300 hover:bg-orange-301 mb-4\"\r\n        >\r\n          <div className=\"flex items-center pointer-events-none h-34px\">\r\n            <AddRounded className=\"mr-2 text-lg\" fontSize=\"inherit\"></AddRounded>\r\n            <span className=\"hidden md:block\">Add collection</span>\r\n            <span className=\"md:hidden\">Add</span>\r\n          </div>\r\n        </Button>\r\n      </div>\r\n      {!collections.length ? (\r\n        <EmptyScreen\r\n          buttonTitle=\"Create\"\r\n          title=\"There are no collections\"\r\n          onCreate={() => setCollectionModalOpen(true)}\r\n        ></EmptyScreen>\r\n      ) : (\r\n        <div className=\"flex flex-wrap lg:flex-nowrap w-full flex-grow\">\r\n          <SimpleBar\r\n            className=\"max-w-192px w-full flex-shrink-0 mr-4 hidden lg:block max-h-96 scrollbar-dark pr-3\"\r\n            autoHide={false}\r\n          >\r\n            {collections.map((x, i) => (\r\n              <div\r\n                data-testid={`collection-name-${x.name}`}\r\n                onClick={() => setSelectedCollection(i)}\r\n                key={`collection-${i}`}\r\n                className={`mb-1 capitalize truncate cursor-pointer ${\r\n                  selectedCollection === i ? \"bg-fireck-4\" : \"hover:bg-fireck-1-hover text-white\"\r\n                } rounded h-28px leading-28px px-3`}\r\n              >\r\n                {x.name}\r\n              </div>\r\n            ))}\r\n          </SimpleBar>\r\n\r\n          <div className=\"lg:flex-grow w-full rounded-lg bg-fireck-3 p-7 flex flex-col\">\r\n            <div className=\"flex justify-between mb-3 flex-wrap\">\r\n              <div className=\"font-medium text-22px capitalize mb-3 mr-3 text-white\">\r\n                <span className=\"hidden lg:inline-block\">\r\n                  {selectedCollection < collections.length\r\n                    ? collections[selectedCollection].name\r\n                    : \"\"}\r\n                </span>\r\n                <div className=\"lg:hidden inline-block text-black text-base\">\r\n                  <Select\r\n                    onChange={(e) => setSelectedCollection(parseInt(e.target.value))}\r\n                    value={selectedCollection}\r\n                    options={collections.map((x, i) => ({ label: x.name, value: i }))}\r\n                  ></Select>\r\n                </div>\r\n                <Edit\r\n                  data-testid=\"edit-collection-btn\"\r\n                  onClick={() => {\r\n                    setEditingCollectionIndex(selectedCollection);\r\n                    setCollectionModalOpen(true);\r\n                  }}\r\n                  className=\"ml-3 text-lg cursor-pointer\"\r\n                  fontSize=\"inherit\"\r\n                ></Edit>\r\n              </div>\r\n              <div className=\"flex flex-wrap\">\r\n                <Button\r\n                  data-testid=\"view-interface-btn\"\r\n                  onClick={() => setInterfaceColType(collections[selectedCollection])}\r\n                  noMinWidth\r\n                  className=\"border border-white h-28px text-white mr-3 mb-3 px-5\"\r\n                >\r\n                  <div className=\"flex items-center pointer-events-none\">Interface</div>\r\n                </Button>\r\n                <Button\r\n                  noMinWidth\r\n                  data-testid=\"add-new-field-btn\"\r\n                  onClick={async () => {\r\n                    addField();\r\n                  }}\r\n                  className=\"bg-fireck-4 hover:bg-fireck-4-hover mb-3 h-28px pl-3\"\r\n                >\r\n                  <div className=\"flex items-center pointer-events-none\">\r\n                    <AddRounded className=\"mr-2 text-lg\" fontSize=\"inherit\"></AddRounded>\r\n                    <span>Add field</span>\r\n                  </div>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex-grow h-0 bg-white rounded overflow-hidden\">\r\n              <DragDropContext onDragEnd={onDragEnd}>\r\n                <Droppable droppableId=\"droppable\">\r\n                  {(provided, snapshot) => (\r\n                    <SimpleBar\r\n                      className=\"overflow-auto w-full h-full scrollbar-light scrollbar-thin py-0.5\"\r\n                      autoHide={false}\r\n                    >\r\n                      <div\r\n                        className=\"min-w-430px\"\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef as any}\r\n                      >\r\n                        {selectedCollection < collections.length\r\n                          ? collections[selectedCollection].fields.map((x, i) => {\r\n                              const Badge = FieldTypes.find((t) => t.type === x.type)?.Badge;\r\n                              return (\r\n                                <Draggable key={x.id} draggableId={x.id} index={i}>\r\n                                  {(provided, snapshot) => (\r\n                                    <div\r\n                                      data-testid={`field-id-${x.id}`}\r\n                                      key={`field-${i}`}\r\n                                      className=\"bg-white hover:bg-fireck-4 flex mb-2 items-center px-2 py-0.5\"\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                    >\r\n                                      <div {...provided.dragHandleProps}>\r\n                                        <DragIndicatorRounded\r\n                                          fontSize=\"inherit\"\r\n                                          className=\"text-lg\"\r\n                                        />\r\n                                      </div>\r\n\r\n                                      <div className=\"line-clamp-1 w-5/12 px-3\">{x.id}</div>\r\n                                      <div className=\"flex w-4/12 flex-shrink-0 items-center\">\r\n                                        {Badge ? <Badge></Badge> : null}\r\n                                        <span className=\"ml-3 hidden sm:block line-clamp-1\">\r\n                                          {x.type}\r\n                                        </span>\r\n                                      </div>\r\n                                      {x.isDefault ? null : (\r\n                                        <div className=\"flex items-center flex-grow justify-end\">\r\n                                          <div\r\n                                            data-testid={`edit-for-field-${x.id}`}\r\n                                            className=\"h-5 w-5 flex items-center justify-center rounded cursor-pointer hover:bg-white\"\r\n                                            onClick={() => {\r\n                                              editField(x.type, i);\r\n                                            }}\r\n                                          >\r\n                                            <EditOutlined\r\n                                              fontSize=\"inherit\"\r\n                                              classes={{ root: \"pointer-events-none text-lg\" }}\r\n                                            ></EditOutlined>\r\n                                          </div>\r\n                                          <div\r\n                                            className=\"h-5 w-5 flex items-center justify-center rounded cursor-pointer hover:bg-red-FF0000 hover:text-white\"\r\n                                            data-testid={`delete-for-field-${x.id}`}\r\n                                            onClick={async () => {\r\n                                              let res = await confirm({\r\n                                                confirmation: \"Delete field?\",\r\n                                              });\r\n                                              if (res) {\r\n                                                let updatedCollection = JSON.parse(\r\n                                                  JSON.stringify(collections[selectedCollection])\r\n                                                );\r\n                                                updatedCollection.fields.splice(i, 1);\r\n                                                dispatch({\r\n                                                  type: \"UPDATE_COLLECTION_FIELDS\",\r\n                                                  payload: updatedCollection.fields,\r\n                                                  docId: updatedCollection.docId,\r\n                                                });\r\n\r\n                                                updateCollectionType(\r\n                                                  collections[selectedCollection].docId,\r\n                                                  updatedCollection\r\n                                                );\r\n                                              }\r\n                                            }}\r\n                                          >\r\n                                            <DeleteOutlineOutlined\r\n                                              classes={{ root: \"pointer-events-none text-lg\" }}\r\n                                              fontSize=\"inherit\"\r\n                                            ></DeleteOutlineOutlined>\r\n                                          </div>\r\n                                        </div>\r\n                                      )}\r\n                                    </div>\r\n                                  )}\r\n                                </Draggable>\r\n                              );\r\n                            })\r\n                          : null}\r\n                        {provided.placeholder}\r\n                      </div>\r\n                    </SimpleBar>\r\n                  )}\r\n                </Droppable>\r\n              </DragDropContext>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <CollectionModal\r\n        editingCollectionIndex={editingCollectionIndex}\r\n        collections={collections}\r\n        onCreate={(val) => dispatch({ type: \"ADD_COLLECTION_TYPE\", payload: val })}\r\n        onUpdate={(val) => {\r\n          dispatch({ type: \"UPDATE_COLLECTION_TYPE\", payload: val, docId: val.docId });\r\n        }}\r\n        onDelete={(docId) => {\r\n          setSelectedCollection(0);\r\n          setEditingCollectionIndex(-1);\r\n          dispatch({ type: \"DELETE_COLLECTION_TYPE\", payload: docId });\r\n        }}\r\n        open={collectionModalOpen}\r\n        onClose={() => {\r\n          setCollectionModalOpen(false);\r\n          setEditingCollectionIndex(-1);\r\n        }}\r\n      ></CollectionModal>\r\n      <InterfaceModal\r\n        onClose={() => setInterfaceColType(undefined)}\r\n        open={interfaceColType ? true : false}\r\n        collectionType={interfaceColType}\r\n      ></InterfaceModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CollectionsBuilder;\r\n"],"sourceRoot":""}