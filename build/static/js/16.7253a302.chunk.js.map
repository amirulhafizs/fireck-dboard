{"version":3,"sources":["components/Select.tsx","../node_modules/@material-ui/icons/EditRounded.js","components/SettingsPage.tsx","pages/Webhooks.tsx"],"names":["WarningIcon","React","forwardRef","props","ref","className","size","Select","options","error","groundColor","classNames","spellCheck","map","x","i","data-testid","value","label","title","placement","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","CollectionsBuilder","entity","enitityPlural","onAddEntity","entities","onSelectEntity","entityButtons","onInvokeEntityEdit","entityContent","selectedEntityId","noMinWidth","onClick","fontSize","length","autoHide","name","docId","find","onChange","e","target","initialWebhooks","method","url","create","update","delete","Webhooks","useState","collectionTypeDocId","setCollectionTypeDocId","collectionTypes","useSelector","state","colType","dispatch","useDispatch","httpsMethods","webhooks","setWebhooks","prevState","setPrevState","useEffect","obj","JSON","parse","stringify","changed","hook","m","prev","placeholder","window","confirm","disabled","updateCollectionType","type","payload"],"mappings":"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","file":"static/js/16.7253a302.chunk.js","sourcesContent":["import { IoAlertCircleOutline } from \"react-icons/io5\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport React, { SelectHTMLAttributes } from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <IoAlertCircleOutline className=\"text-red-FF0000\" size={20}></IoAlertCircleOutline>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport interface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n  options: { label: string; value: string | number }[];\r\n  error?: string | boolean;\r\n  groundColor: \"white\" | \"black\";\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({\r\n  className = \"\",\r\n  options,\r\n  error,\r\n  groundColor,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={`${className} relative flex items-center`}>\r\n      <select\r\n        className={classNames(\"px-3 h-full border-2 border-solid w-full rounded outline-none\", {\r\n          \"border-red-FF0000\": error,\r\n          \"focus:border-fireck-4\": !error,\r\n          \"border-gray-300 bg-gray-300\": groundColor === \"white\",\r\n          \"border-white bg-white\": groundColor === \"black\",\r\n        })}\r\n        {...props}\r\n        spellCheck={false}\r\n      >\r\n        {options.map((x, i) => (\r\n          <option data-testid={`select-option-${x.value}`} key={\"opt-\" + i} value={x.value}>\r\n            {x.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.46v3.04c0 .28.22.5.5.5h3.04c.13 0 .26-.05.35-.15L17.81 9.94l-3.75-3.75L3.15 17.1c-.1.1-.15.22-.15.36zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'EditRounded');\n\nexports.default = _default;","import Button from \"components/Button\";\r\nimport React, { ReactElement, useState } from \"react\";\r\nimport Edit from \"@material-ui/icons/EditRounded\";\r\nimport Select from \"components/Select\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport AddRounded from \"@material-ui/icons/AddRounded\";\r\n\r\nexport interface CollectionsBuilderProps {\r\n  entity: string;\r\n  enitityPlural: string;\r\n  onAddEntity?: () => void;\r\n  entities: { name: string; docId: string }[];\r\n  onSelectEntity: (id: string) => void;\r\n  entityButtons: ReactElement;\r\n  onInvokeEntityEdit?: () => void;\r\n  entityContent: ReactElement;\r\n  selectedEntityId: string;\r\n}\r\n\r\nexport const reorder = (list: any[], startIndex: number, endIndex: number) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst CollectionsBuilder: React.FC<CollectionsBuilderProps> = ({\r\n  entity,\r\n  enitityPlural,\r\n  onAddEntity,\r\n  entities,\r\n  onSelectEntity,\r\n  entityButtons,\r\n  onInvokeEntityEdit,\r\n  entityContent,\r\n  selectedEntityId,\r\n}) => {\r\n  return (\r\n    <div className=\"h-full flex flex-col\">\r\n      <div className=\"flex flex-wrap justify-between mb-4\">\r\n        <div className=\"font-medium text-27px leading-none mb-4 mr-4 text-white capitalize\">\r\n          {enitityPlural}\r\n        </div>\r\n        {!onAddEntity ? null : (\r\n          <Button\r\n            noMinWidth\r\n            data-testid=\"add-collection-btn\"\r\n            onClick={onAddEntity}\r\n            className=\"bg-fireck-4 hover:bg-fireck-4-hover mb-4\"\r\n          >\r\n            <div className=\"flex items-center pointer-events-none h-34px\">\r\n              <AddRounded className=\"mr-2 text-lg\" fontSize=\"inherit\"></AddRounded>\r\n              <span className=\"hidden md:block\">Add {entity}</span>\r\n              <span className=\"md:hidden\">Add</span>\r\n            </div>\r\n          </Button>\r\n        )}\r\n      </div>\r\n      {!entities.length ? (\r\n        <div></div>\r\n      ) : (\r\n        <div className=\"flex flex-wrap lg:flex-nowrap w-full flex-grow\">\r\n          <SimpleBar\r\n            className=\"max-w-192px w-full flex-shrink-0 mr-4 hidden lg:block max-h-96 scrollbar-dark pr-3\"\r\n            autoHide={false}\r\n          >\r\n            {entities.map((x) => (\r\n              <div\r\n                data-testid={`entity-name-${x.name}`}\r\n                onClick={() => {\r\n                  onSelectEntity(x.docId);\r\n                }}\r\n                key={`entity-${x.docId}`}\r\n                className={`mb-1 capitalize truncate select-none cursor-pointer ${\r\n                  selectedEntityId === x.docId\r\n                    ? \"bg-fireck-4\"\r\n                    : \"hover:bg-fireck-1-hover text-white\"\r\n                } rounded h-28px leading-28px px-3`}\r\n              >\r\n                {x.name}\r\n              </div>\r\n            ))}\r\n          </SimpleBar>\r\n\r\n          <div className=\"lg:flex-grow w-full rounded-lg bg-fireck-3 p-7 flex flex-col\">\r\n            <div className=\"flex justify-between mb-3 flex-wrap\">\r\n              <div className=\"font-medium text-22px capitalize mb-3 mr-3 text-white\">\r\n                <span className=\"hidden lg:inline-block\">\r\n                  {entities.find((x) => x.docId === selectedEntityId)?.name || \"\"}\r\n                </span>\r\n                <div className=\"lg:hidden inline-block text-black text-base\">\r\n                  <Select\r\n                    className=\"h-28px\"\r\n                    groundColor=\"black\"\r\n                    onChange={(e) => onSelectEntity(e.target.value)}\r\n                    value={selectedEntityId}\r\n                    options={entities.map((x) => ({ label: x.name, value: x.docId }))}\r\n                  ></Select>\r\n                </div>\r\n                {!onInvokeEntityEdit ? null : (\r\n                  <Edit\r\n                    data-testid=\"edit-collection-btn\"\r\n                    onClick={onInvokeEntityEdit}\r\n                    className=\"ml-3 text-lg cursor-pointer\"\r\n                    fontSize=\"inherit\"\r\n                  ></Edit>\r\n                )}\r\n              </div>\r\n              {entityButtons}\r\n            </div>\r\n\r\n            <div className=\"flex-grow h-0\">{entityContent}</div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CollectionsBuilder;\r\n","import { HttpMethod, updateCollectionType } from \"api/collectionTypes\";\r\nimport classNames from \"classnames\";\r\nimport Select from \"components/Select\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"store\";\r\nimport Button from \"components/Button\";\r\nimport Input from \"components/Input\";\r\nimport { Webhooks as WebhooksInterface, CmsEvent } from \"api/collectionTypes\";\r\nimport SettingsPage from \"components/SettingsPage\";\r\nimport SimpleBar from \"simplebar-react\";\r\n\r\nexport interface WebhooksProps {}\r\n\r\nconst initialWebhooks: WebhooksInterface = {\r\n  find: { method: \"POST\", url: \"\" },\r\n  \"find one\": { method: \"POST\", url: \"\" },\r\n  create: { method: \"POST\", url: \"\" },\r\n  update: { method: \"POST\", url: \"\" },\r\n  delete: { method: \"POST\", url: \"\" },\r\n};\r\n\r\nconst Webhooks: React.FC<WebhooksProps> = () => {\r\n  const [collectionTypeDocId, setCollectionTypeDocId] = useState(\"\");\r\n  const collectionTypes = useSelector((state: RootState) => state.collectionTypes);\r\n  const colType = collectionTypes.find((x) => x.docId === collectionTypeDocId);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const httpsMethods = [\"POST\", \"DELETE\", \"PATCH\", \"PUT\", \"GET\"];\r\n  const cmsEvents: CmsEvent[] = [\"create\", \"delete\", \"find\", \"find one\", \"update\"];\r\n\r\n  const [webhooks, setWebhooks] = useState<WebhooksInterface>(initialWebhooks);\r\n  const [prevState, setPrevState] = useState<WebhooksInterface>(initialWebhooks);\r\n\r\n  useEffect(() => {\r\n    if (collectionTypeDocId) {\r\n      const obj = collectionTypes.find((x) => x.docId === collectionTypeDocId);\r\n      if (!obj) return;\r\n      if (obj.webhooks) {\r\n        setWebhooks(JSON.parse(JSON.stringify(obj.webhooks)));\r\n        setPrevState(obj.webhooks);\r\n      } else {\r\n        setWebhooks(JSON.parse(JSON.stringify(initialWebhooks)));\r\n        setPrevState(initialWebhooks);\r\n      }\r\n    }\r\n\r\n    if (collectionTypes.length && !collectionTypeDocId) {\r\n      setCollectionTypeDocId(collectionTypes[0].docId);\r\n    }\r\n  }, [collectionTypeDocId, collectionTypes]);\r\n\r\n  const changed = JSON.stringify(prevState) !== JSON.stringify(webhooks);\r\n\r\n  return (\r\n    <SettingsPage\r\n      entityContent={\r\n        <div className=\"h-full rounded overflow-hidden bg-white\">\r\n          <SimpleBar className=\"h-full p-3\">\r\n            {!colType ? null : (\r\n              <>\r\n                {cmsEvents.map((x) => {\r\n                  const hook = webhooks[x];\r\n                  return (\r\n                    <div className=\"flex mb-2\">\r\n                      <div className=\"w-32 font-semibold\">On {x}</div>\r\n                      <Select\r\n                        className=\"mr-2 h-28px\"\r\n                        groundColor=\"white\"\r\n                        options={httpsMethods.map((m) => ({ value: m, label: m }))}\r\n                        value={hook.method}\r\n                        onChange={(e) => {\r\n                          setWebhooks((prev) => {\r\n                            let obj = { ...prev };\r\n                            obj[x].method = e.target.value as HttpMethod;\r\n                            return obj;\r\n                          });\r\n                        }}\r\n                      ></Select>\r\n                      <div className=\"flex-grow\">\r\n                        <Input\r\n                          groundColor=\"white\"\r\n                          value={hook.url}\r\n                          onChange={(e) => {\r\n                            setWebhooks((prev) => {\r\n                              let obj = { ...prev };\r\n                              obj[x].url = e.target.value;\r\n                              return obj;\r\n                            });\r\n                          }}\r\n                          placeholder=\"Type your url\"\r\n                          className=\"w-full h-28px\"\r\n                        ></Input>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </SimpleBar>\r\n        </div>\r\n      }\r\n      selectedEntityId={collectionTypeDocId}\r\n      entities={collectionTypes}\r\n      onSelectEntity={(docId) =>\r\n        !changed || window.confirm(\"Changes will be lost\") ? setCollectionTypeDocId(docId) : {}\r\n      }\r\n      entity=\"webhook\"\r\n      enitityPlural=\"webhooks\"\r\n      entityButtons={\r\n        <Button\r\n          noMinWidth\r\n          disabled={!changed}\r\n          className={classNames(\"mb-4 h-28px px-7\", {\r\n            \"bg-white cursor-default text-gray-500\": !changed,\r\n            \"bg-fireck-4 hover:bg-fireck-4-hover\": changed,\r\n          })}\r\n          onClick={() => {\r\n            if (!collectionTypeDocId) return;\r\n            updateCollectionType(collectionTypeDocId, { webhooks });\r\n            dispatch({\r\n              type: \"UPDATE_COLLECTION_TYPE\",\r\n              docId: collectionTypeDocId,\r\n              payload: { webhooks },\r\n            });\r\n          }}\r\n        >\r\n          {!changed ? \"Saved!\" : \"Save\"}\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Webhooks;\r\n"],"sourceRoot":""}